{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "hc-eim-df-prod2"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/DimResult')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Task",
                                "type": "DatasetReference"
                            },
                            "name": "ODSTask"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimResult",
                                "type": "DatasetReference"
                            },
                            "name": "SourceDimResult"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimResult",
                                "type": "DatasetReference"
                            },
                            "name": "UpdateDimResult"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimResult",
                                "type": "DatasetReference"
                            },
                            "name": "InsertDimResult"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FilterLastModified"
                        },
                        {
                            "name": "SelectResult"
                        },
                        {
                            "name": "SelectDistinctResult"
                        },
                        {
                            "name": "FilterNull"
                        },
                        {
                            "name": "AddCustomColumns"
                        },
                        {
                            "name": "DoesNotExists"
                        },
                        {
                            "name": "Exists"
                        },
                        {
                            "name": "SelectDimResultHash"
                        },
                        {
                            "name": "AddDateColumn"
                        },
                        {
                            "name": "AllowUpdate"
                        },
                        {
                            "name": "AddDatesColumns"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\tId as string,\n\t\tRecordTypeId as string,\n\t\tWhoId as string,\n\t\tWhatId as string,\n\t\tWhoCount as integer,\n\t\tWhatCount as integer,\n\t\tSubject as string,\n\t\tActivityDate as timestamp,\n\t\tStatus as string,\n\t\tPriority as string,\n\t\tIsHighPriority as boolean,\n\t\tOwnerId as string,\n\t\tDescription as string,\n\t\tCurrencyIsoCode as string,\n\t\tType as string,\n\t\tIsDeleted as boolean,\n\t\tAccountId as string,\n\t\tIsClosed as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tIsArchived as boolean,\n\t\tCallDurationInSeconds as integer,\n\t\tCallType as string,\n\t\tCallDisposition as string,\n\t\tCallObject as string,\n\t\tReminderDateTime as timestamp,\n\t\tIsReminderSet as boolean,\n\t\tRecurrenceActivityId as string,\n\t\tIsRecurrence as boolean,\n\t\tRecurrenceStartDateOnly as timestamp,\n\t\tRecurrenceEndDateOnly as timestamp,\n\t\tRecurrenceTimeZoneSidKey as string,\n\t\tRecurrenceType as string,\n\t\tRecurrenceInterval as integer,\n\t\tRecurrenceDayOfWeekMask as integer,\n\t\tRecurrenceDayOfMonth as integer,\n\t\tRecurrenceInstance as string,\n\t\tRecurrenceMonthOfYear as string,\n\t\tRecurrenceRegeneratedType as string,\n\t\tTaskSubtype as string,\n\t\tCompletedDateTime as timestamp,\n\t\tCenter_Name__c as string,\n\t\tCompleted_Date__c as timestamp,\n\t\tExternal_ID__c as string,\n\t\tLead__c as string,\n\t\tPerson_Account__c as string,\n\t\tRecording_Link__c as string,\n\t\tResult__c as string,\n\t\tSPRecordingOrTranscriptURL__c as string,\n\t\tService_Appointment__c as string,\n\t\tService_Territory_Caller_Id__c as string,\n\t\tTaskWhoIds as string,\n\t\tBrightPattern__SPRecordingOrTranscriptURL__c as string,\n\t\tMeeting_Platform_Id__c as string,\n\t\tMeeting_Platform__c as string,\n\t\tAgent_Link__c as string,\n\t\tGuest_Link__c as string,\n\t\tOpportunity__c as string,\n\t\tCenter_Phone__c as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSTask\nsource(output(\n\t\tResultKey as integer,\n\t\tResultHash as string,\n\t\tResultName as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SourceDimResult\nODSTask filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1)) ~> FilterLastModified\nFilterLastModified select(mapColumn(\n\t\tResult__c\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectResult\nSelectResult aggregate(groupBy(Result__c),\n\teach(match(name!='Result__c'), $$ = first($$))) ~> SelectDistinctResult\nSelectDistinctResult filter(!isNull(Result__c)) ~> FilterNull\nFilterNull derive(ResultHash = sha2(256, lower(Result__c)),\n\t\tResultName = lower(Result__c),\n\t\tIsActive = toBoolean('1'),\n\t\tSourceSystem = 'Salesforce') ~> AddCustomColumns\nAddCustomColumns, SelectDimResultHash exists(AddCustomColumns@ResultHash == SelectDimResultHash@ResultHash,\n\tnegate:true,\n\tbroadcast: 'auto')~> DoesNotExists\nAddCustomColumns, SelectDimResultHash exists(AddCustomColumns@ResultHash == SelectDimResultHash@ResultHash,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists\nSourceDimResult select(mapColumn(\n\t\tResultHash\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimResultHash\nExists derive(DWH_LastUpdateDate = currentTimestamp()) ~> AddDateColumn\nAddDateColumn alterRow(updateIf(true())) ~> AllowUpdate\nDoesNotExists derive(DWH_LastUpdateDate = currentTimestamp(),\n\t\tDWH_LoadDate = currentTimestamp()) ~> AddDatesColumns\nAllowUpdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tResultKey as integer,\n\t\tResultHash as string,\n\t\tResultName as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['ResultHash'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tResultHash,\n\t\tResultName,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive,\n\t\tSourceSystem\n\t)) ~> UpdateDimResult\nAddDatesColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tResultKey as integer,\n\t\tResultHash as string,\n\t\tResultName as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tResultHash,\n\t\tResultName,\n\t\tDWH_CreatedDate = DWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive,\n\t\tSourceSystem\n\t)) ~> InsertDimResult"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CNCT_lkpClientMembershipStatus')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "CONNECT"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_CNCT_lkpClientMembershipStatus",
                                "type": "DatasetReference"
                            },
                            "name": "CNCTlkpClientMembershipStatus"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_lkpClientMembershipStatus",
                                "type": "DatasetReference"
                            },
                            "name": "ODSlkpClientMembershipStatus"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AlterRow1"
                        }
                    ],
                    "script": "source(output(\n\t\tClientMembershipStatusID as integer,\n\t\tClientMembershipStatusSortOrder as integer,\n\t\tClientMembershipStatusDescription as string,\n\t\tClientMembershipStatusDescriptionShort as string,\n\t\tIsActiveMembershipFlag as boolean,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary,\n\t\tCanSearchAndDisplayFlag as boolean,\n\t\tCanCheckInForConsultation as boolean,\n\t\tDescriptionResourceKey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> CNCTlkpClientMembershipStatus\nCNCTlkpClientMembershipStatus alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tClientMembershipStatusID as integer,\n\t\tClientMembershipStatusSortOrder as integer,\n\t\tClientMembershipStatusDescription as string,\n\t\tClientMembershipStatusDescriptionShort as string,\n\t\tIsActiveMembershipFlag as boolean,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary,\n\t\tCanSearchAndDisplayFlag as boolean,\n\t\tCanCheckInForConsultation as boolean,\n\t\tDescriptionResourceKey as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ClientMembershipStatusID'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSlkpClientMembershipStatus"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ODSTask')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/ODS"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_SF_Task",
                                "type": "DatasetReference"
                            },
                            "name": "TaskParquet"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Task",
                                "type": "DatasetReference"
                            },
                            "name": "UpsertOdsTask"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AllowUpsert"
                        }
                    ],
                    "script": "source(output(\n\t\tId as string,\n\t\tRecordTypeId as string,\n\t\tWhoId as string,\n\t\tWhatId as string,\n\t\tWhoCount as integer,\n\t\tWhatCount as integer,\n\t\tSubject as string,\n\t\tActivityDate as timestamp,\n\t\tStatus as string,\n\t\tPriority as string,\n\t\tIsHighPriority as boolean,\n\t\tOwnerId as string,\n\t\tDescription as string,\n\t\tCurrencyIsoCode as string,\n\t\tType as string,\n\t\tIsDeleted as boolean,\n\t\tAccountId as string,\n\t\tIsClosed as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tIsArchived as boolean,\n\t\tCallDurationInSeconds as integer,\n\t\tCallType as string,\n\t\tCallDisposition as string,\n\t\tCallObject as string,\n\t\tReminderDateTime as timestamp,\n\t\tIsReminderSet as boolean,\n\t\tRecurrenceActivityId as string,\n\t\tIsRecurrence as boolean,\n\t\tRecurrenceStartDateOnly as timestamp,\n\t\tRecurrenceEndDateOnly as timestamp,\n\t\tRecurrenceTimeZoneSidKey as string,\n\t\tRecurrenceType as string,\n\t\tRecurrenceInterval as integer,\n\t\tRecurrenceDayOfWeekMask as integer,\n\t\tRecurrenceDayOfMonth as integer,\n\t\tRecurrenceInstance as string,\n\t\tRecurrenceMonthOfYear as string,\n\t\tRecurrenceRegeneratedType as string,\n\t\tTaskSubtype as string,\n\t\tCompletedDateTime as timestamp,\n\t\tCenter_Name__c as string,\n\t\tCompleted_Date__c as timestamp,\n\t\tExternal_ID__c as string,\n\t\tLead__c as string,\n\t\tPerson_Account__c as string,\n\t\tRecording_Link__c as string,\n\t\tResult__c as string,\n\t\tSPRecordingOrTranscriptURL__c as string,\n\t\tService_Appointment__c as string,\n\t\tService_Territory_Caller_Id__c as string,\n\t\tTaskWhoIds as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> TaskParquet\nTaskParquet alterRow(upsertIf(true())) ~> AllowUpsert\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tId as string,\n\t\tRecordTypeId as string,\n\t\tWhoId as string,\n\t\tWhatId as string,\n\t\tWhoCount as integer,\n\t\tWhatCount as integer,\n\t\tSubject as string,\n\t\tActivityDate as timestamp,\n\t\tStatus as string,\n\t\tPriority as string,\n\t\tIsHighPriority as boolean,\n\t\tOwnerId as string,\n\t\tDescription as string,\n\t\tCurrencyIsoCode as string,\n\t\tType as string,\n\t\tIsDeleted as boolean,\n\t\tAccountId as string,\n\t\tIsClosed as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tIsArchived as boolean,\n\t\tCallDurationInSeconds as integer,\n\t\tCallType as string,\n\t\tCallDisposition as string,\n\t\tCallObject as string,\n\t\tReminderDateTime as timestamp,\n\t\tIsReminderSet as boolean,\n\t\tRecurrenceActivityId as string,\n\t\tIsRecurrence as boolean,\n\t\tRecurrenceStartDateOnly as timestamp,\n\t\tRecurrenceEndDateOnly as timestamp,\n\t\tRecurrenceTimeZoneSidKey as string,\n\t\tRecurrenceType as string,\n\t\tRecurrenceInterval as integer,\n\t\tRecurrenceDayOfWeekMask as integer,\n\t\tRecurrenceDayOfMonth as integer,\n\t\tRecurrenceInstance as string,\n\t\tRecurrenceMonthOfYear as string,\n\t\tRecurrenceRegeneratedType as string,\n\t\tTaskSubtype as string,\n\t\tCompletedDateTime as timestamp,\n\t\tCenter_Name__c as string,\n\t\tCompleted_Date__c as timestamp,\n\t\tExternal_ID__c as string,\n\t\tLead__c as string,\n\t\tPerson_Account__c as string,\n\t\tRecording_Link__c as string,\n\t\tResult__c as string,\n\t\tSPRecordingOrTranscriptURL__c as string,\n\t\tService_Appointment__c as string,\n\t\tService_Territory_Caller_Id__c as string,\n\t\tTaskWhoIds as string,\n\t\tBrightPattern__SPRecordingOrTranscriptURL__c as string,\n\t\tMeeting_Platform_Id__c as string,\n\t\tMeeting_Platform__c as string,\n\t\tAgent_Link__c as string,\n\t\tGuest_Link__c as string,\n\t\tOpportunity__c as string,\n\t\tCenter_Phone__c as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Id'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tId,\n\t\tRecordTypeId,\n\t\tWhoId,\n\t\tWhatId,\n\t\tWhoCount,\n\t\tWhatCount,\n\t\tActivityDate,\n\t\tStatus,\n\t\tPriority,\n\t\tIsHighPriority,\n\t\tOwnerId,\n\t\tCurrencyIsoCode,\n\t\tType,\n\t\tIsDeleted,\n\t\tAccountId,\n\t\tIsClosed,\n\t\tCreatedDate,\n\t\tCreatedById,\n\t\tLastModifiedDate,\n\t\tLastModifiedById,\n\t\tSystemModstamp,\n\t\tIsArchived,\n\t\tCallDurationInSeconds,\n\t\tCallType,\n\t\tCallDisposition,\n\t\tCallObject,\n\t\tReminderDateTime,\n\t\tIsReminderSet,\n\t\tRecurrenceActivityId,\n\t\tIsRecurrence,\n\t\tRecurrenceStartDateOnly,\n\t\tRecurrenceEndDateOnly,\n\t\tRecurrenceTimeZoneSidKey,\n\t\tRecurrenceType,\n\t\tRecurrenceInterval,\n\t\tRecurrenceDayOfWeekMask,\n\t\tRecurrenceDayOfMonth,\n\t\tRecurrenceInstance,\n\t\tRecurrenceMonthOfYear,\n\t\tRecurrenceRegeneratedType,\n\t\tTaskSubtype,\n\t\tCompletedDateTime,\n\t\tCenter_Name__c,\n\t\tCompleted_Date__c,\n\t\tExternal_ID__c,\n\t\tLead__c,\n\t\tPerson_Account__c,\n\t\tRecording_Link__c,\n\t\tResult__c,\n\t\tSPRecordingOrTranscriptURL__c,\n\t\tService_Appointment__c,\n\t\tService_Territory_Caller_Id__c,\n\t\tTaskWhoIds\n\t)) ~> UpsertOdsTask"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CNCT_lkpMembershipOrderReason')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "CONNECT"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_CNCT_lkpMembershipOrderReason",
                                "type": "DatasetReference"
                            },
                            "name": "source1"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_lkpMembershipOrderReason",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AlterRow1"
                        }
                    ],
                    "script": "source(output(\n\t\tMembershipOrderReasonID as integer,\n\t\tMembershipOrderReasonTypeID as integer,\n\t\tMembershipOrderReasonSortOrder as integer,\n\t\tMembershipOrderReasonDescription as string,\n\t\tMembershipOrderReasonDescriptionShort as string,\n\t\tBusinessSegmentID as integer,\n\t\tRevenueTypeID as integer,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> source1\nsource1 alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tMembershipOrderReasonID as integer,\n\t\tMembershipOrderReasonTypeID as integer,\n\t\tMembershipOrderReasonSortOrder as integer,\n\t\tMembershipOrderReasonDescription as string,\n\t\tMembershipOrderReasonDescriptionShort as string,\n\t\tBusinessSegmentID as integer,\n\t\tRevenueTypeID as integer,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['MembershipOrderReasonID'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/FactAppointment')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_ServiceAppointment",
                                "type": "DatasetReference"
                            },
                            "name": "ODServiceAppointment"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimDate",
                                "type": "DatasetReference"
                            },
                            "name": "DimDate"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimTimeOfDay",
                                "type": "DatasetReference"
                            },
                            "name": "DimTimeOfDay"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimGeography",
                                "type": "DatasetReference"
                            },
                            "name": "DimGeography"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimAppointmentType",
                                "type": "DatasetReference"
                            },
                            "name": "DimAppointmentType"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimMeetingPlatform",
                                "type": "DatasetReference"
                            },
                            "name": "DimMeetingPlatform"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimAccount",
                                "type": "DatasetReference"
                            },
                            "name": "DimAccount"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimStatus",
                                "type": "DatasetReference"
                            },
                            "name": "DimStatus"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimLead",
                                "type": "DatasetReference"
                            },
                            "name": "DimLead"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCenter",
                                "type": "DatasetReference"
                            },
                            "name": "DimCenter"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Event",
                                "type": "DatasetReference"
                            },
                            "name": "Event"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Opportunity",
                                "type": "DatasetReference"
                            },
                            "name": "Opportunity"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_FactLeadTracking",
                                "type": "DatasetReference"
                            },
                            "name": "FactLeadTracking"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_FactAppointment",
                                "type": "DatasetReference"
                            },
                            "name": "InsertFactAppointment"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SelectAppointmentColumns"
                        },
                        {
                            "name": "SelectFactDatecolumns"
                        },
                        {
                            "name": "SelectAppointmentDateColumns"
                        },
                        {
                            "name": "JoinFactDate"
                        },
                        {
                            "name": "JoinAppointmentDate"
                        },
                        {
                            "name": "SelectTimeFactDate"
                        },
                        {
                            "name": "SelectTimeAppointment"
                        },
                        {
                            "name": "JoinTimeFactDate"
                        },
                        {
                            "name": "JoinTimeAppointment"
                        },
                        {
                            "name": "JoinDimGeography"
                        },
                        {
                            "name": "SelectGeographyColumns"
                        },
                        {
                            "name": "FilterAppoimentTypeSourceSystem"
                        },
                        {
                            "name": "SelectAppointmentTypeColumns"
                        },
                        {
                            "name": "JoinAppointmentType"
                        },
                        {
                            "name": "JoinMeetingPlatform"
                        },
                        {
                            "name": "FilterMeetingPlatform"
                        },
                        {
                            "name": "SelectMeetingPlatform"
                        },
                        {
                            "name": "AllowUpsert"
                        },
                        {
                            "name": "AddCustomColumnsAndKeys"
                        },
                        {
                            "name": "JoinDimAccount"
                        },
                        {
                            "name": "FilterAccountSourceSystem"
                        },
                        {
                            "name": "SelectAccountColumns"
                        },
                        {
                            "name": "FilterByStatusGroup"
                        },
                        {
                            "name": "SelectStatusName"
                        },
                        {
                            "name": "JoinStatus"
                        },
                        {
                            "name": "SelectDimLead"
                        },
                        {
                            "name": "JoinDimLead"
                        },
                        {
                            "name": "SelectDimLeadOld"
                        },
                        {
                            "name": "JoinDimLeadOld"
                        },
                        {
                            "name": "JoinDimLeadParentRecord"
                        },
                        {
                            "name": "SelectLeadBYPArentRecord"
                        },
                        {
                            "name": "SelectCenter"
                        },
                        {
                            "name": "FilterCenter"
                        },
                        {
                            "name": "JoinCenter"
                        },
                        {
                            "name": "SelectEvent"
                        },
                        {
                            "name": "SelectOpportunity"
                        },
                        {
                            "name": "JoinEvent"
                        },
                        {
                            "name": "JoinOpportunity"
                        },
                        {
                            "name": "FilterByLastModified"
                        },
                        {
                            "name": "SelectDimLeadCustom"
                        },
                        {
                            "name": "FilterIsDeleted"
                        },
                        {
                            "name": "SelectFactLeadColumns"
                        },
                        {
                            "name": "AddFactLeadControlKey"
                        },
                        {
                            "name": "JoinFactLead"
                        },
                        {
                            "name": "Filter1"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\tId as string,\n\t\tOwnerId as string,\n\t\tIsDeleted as boolean,\n\t\tAppointmentNumber as string,\n\t\tCurrencyIsoCode as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tParentRecordId as string,\n\t\tParentRecordType as string,\n\t\tAccountId as string,\n\t\tWorkTypeId as string,\n\t\tContactId as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tDescription as string,\n\t\tEarliestStartTime as timestamp,\n\t\tDueDate as timestamp,\n\t\tDuration as decimal(38,18),\n\t\tArrivalWindowStartTime as timestamp,\n\t\tArrivalWindowEndTime as timestamp,\n\t\tStatus as string,\n\t\tSchedStartTime as timestamp,\n\t\tSchedEndTime as timestamp,\n\t\tActualStartTime as timestamp,\n\t\tActualEndTime as timestamp,\n\t\tActualDuration as decimal(38,18),\n\t\tDurationType as string,\n\t\tDurationInMinutes as decimal(38,18),\n\t\tServiceTerritoryId as string,\n\t\tSubject as string,\n\t\tParentRecordStatusCategory as string,\n\t\tStatusCategory as string,\n\t\tServiceNote as string,\n\t\tAppointmentType as string,\n\t\tEmail as string,\n\t\tPhone as string,\n\t\tCancellationReason as string,\n\t\tAdditionalInformation as string,\n\t\tComments as string,\n\t\tCenter_Type__c as string,\n\t\tExternal_Id__c as string,\n\t\tService_Appointment__c as string,\n\t\tWork_Type_Group__c as string,\n\t\tAppointment_Type__c as string,\n\t\tMeeting_Platform_Id__c as string,\n\t\tMeeting_Platform__c as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODServiceAppointment\nsource(output(\n\t\tDateKey as integer,\n\t\tFullDate as date,\n\t\tISODate as string,\n\t\tYearNumber as integer,\n\t\tYearQuarterNumber as integer,\n\t\tYearMonthNumber as integer,\n\t\tYearQuarterMonthNumber as integer,\n\t\tYearWeekNumber as integer,\n\t\tDateName as string,\n\t\tWeekName as string,\n\t\tWeekNameWithYear as string,\n\t\tWeekShortName as string,\n\t\tWeekShortNameWithYear as string,\n\t\tWeekNumber as integer,\n\t\tFirstDateOfWeek as date,\n\t\tLastDateOfWeek as date,\n\t\tDayOfWeek as integer,\n\t\tDayOfWeekName as string,\n\t\tIsWeekday as boolean,\n\t\tIsWeekend as boolean,\n\t\tMonthName as string,\n\t\tMonthNameWithYear as string,\n\t\tMonthShortName as string,\n\t\tMonthShortNameWithYear as string,\n\t\tMonthNumber as integer,\n\t\tFirstDateOfMonth as date,\n\t\tLastDateOfMonth as date,\n\t\tDayOfMonth as integer,\n\t\tDayOfMonthName as string,\n\t\tIsLastDayOfMonth as boolean,\n\t\tQuarterName as string,\n\t\tQuarterNameWithYear as string,\n\t\tQuarterShortName as string,\n\t\tQuarterShortNameWithYear as string,\n\t\tQuarterNumber as integer,\n\t\tFirstDateOfQuarter as date,\n\t\tLastDateOfQuarter as date,\n\t\tDayOfQuarter as integer,\n\t\tDayOfQuarterName as string,\n\t\tHalfName as string,\n\t\tHalfNameWithYear as string,\n\t\tHalfShortName as string,\n\t\tHalfShortNameWithYear as string,\n\t\tHalfNumber as integer,\n\t\tYearHalfNumber as integer,\n\t\tFirstDateOfHalf as date,\n\t\tLastDateOfHalf as date,\n\t\tDayOfHalf as integer,\n\t\tDayOfHalfName as string,\n\t\tYearName as string,\n\t\tYearShortName as string,\n\t\tFirstDateOfYear as date,\n\t\tLastDateOfYear as date,\n\t\tDayOfYear as integer,\n\t\tDayOfYearName as string,\n\t\tCalendarQuarter as integer,\n\t\tCalendarYear as integer,\n\t\tCalendarYearMonth as string,\n\t\tCalendarYearQtr as string,\n\t\tFiscalYear as integer,\n\t\tFiscalWeek as integer,\n\t\tFiscalPeriod as integer,\n\t\tFiscalMonth as integer,\n\t\tFiscalQuarter as integer,\n\t\tFiscalYearFiscalWeek as integer,\n\t\tFiscalYearFiscalPeriod as integer,\n\t\tFiscalYearFiscalMonth as integer,\n\t\tFiscalYearFiscalQuarter as integer,\n\t\tFiscalYearFiscalQuarterFiscalMonth as integer,\n\t\tFiscalYearName as string,\n\t\tFiscalYearLongName as string,\n\t\tFiscalYearShortName as string,\n\t\tFiscalQuarterName as string,\n\t\tFiscalQuarterLongName as string,\n\t\tFiscalQuarterNameWithYear as string,\n\t\tFiscalQuarterLongNameWithYear as string,\n\t\tFiscalQuarterShortName as string,\n\t\tFiscalQuarterShortNameWithYear as string,\n\t\tFiscalMonthName as string,\n\t\tFiscalMonthNameWithYear as string,\n\t\tFiscalMonthShortName as string,\n\t\tFiscalMonthShortNameWithYear as string,\n\t\tFiscalMonthCalendarShortName as string,\n\t\tFiscalMonthCalendarShortNameWithYear as string,\n\t\tFiscalWeekName as string,\n\t\tFiscalWeekLongName as string,\n\t\tFiscalWeekNameWithYear as string,\n\t\tFiscalWeekLongNameWithYear as string,\n\t\tFiscalWeekShortName as string,\n\t\tFiscalWeekShortNameWithYear as string,\n\t\tFiscalPeriodName as string,\n\t\tFiscalPeriodLongName as string,\n\t\tFiscalPeriodNameWithYear as string,\n\t\tFiscalPeriodLongNameWithYear as string,\n\t\tFiscalPeriodShortName as string,\n\t\tFiscalPeriodShortNameWithYear as string,\n\t\tCummWorkdays as integer,\n\t\tMonthWorkdays as integer,\n\t\tMonthWorkdaysTotal as integer,\n\t\tIsHoliday as boolean,\n\t\tMonthOfQuarter as integer,\n\t\tBroadcastYearBroadcastQuarter as integer,\n\t\tBroadcastYearBroadcastMonth as integer,\n\t\tBroadcastYearBroadcastWeek as integer,\n\t\tBroadcastYearQtrMonthWeekDay as integer,\n\t\tBroadcastYearQtrMonth as integer,\n\t\tBroadcastYearShortName as string,\n\t\tBroadcastYearLongName as string,\n\t\tBroadcastYeartName as string,\n\t\tBroadcastQuarterName as string,\n\t\tBroadcastWeekName as string,\n\t\tBroadcastDayName as string,\n\t\tmsrepl_tran_version as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimDate\nsource(output(\n\t\tTimeOfDayKey as integer,\n\t\tTime as string,\n\t\tTime24 as string,\n\t\tTime24HM as string,\n\t\tHour as integer,\n\t\tHourC as integer,\n\t\tHourName as string,\n\t\tMinute as integer,\n\t\tMinuteC as integer,\n\t\tMinuteKey as integer,\n\t\tMinuteName as string,\n\t\tSecond as integer,\n\t\tHour24 as integer,\n\t\tAM as string,\n\t\t{30MinuteInterval} as integer,\n\t\tDayPart as string,\n\t\tTimeNumber as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimTimeOfDay\nsource(output(\n\t\tGeographyKey as integer,\n\t\tDigitZIPCode as string,\n\t\tLongitudeZIPCode as double,\n\t\tLatitudeZIPCode as double,\n\t\tZIPCodeClassification as string,\n\t\tNameOfCityOrORG as string,\n\t\tFIPSCode as integer,\n\t\tTwoLetterAbbrevForState as string,\n\t\tFullNameOfStateOrTerritory as string,\n\t\tFIPSCountyCode as integer,\n\t\tNameOfCounty as string,\n\t\tMetroStatisticalAreaCode as integer,\n\t\tSingleAreaCodeForZIPCode as integer,\n\t\tMultipleAreaCodesForZIPCode as string,\n\t\tTimeZoneForZIPCode as string,\n\t\tHrsDiff as integer,\n\t\tZIPCodeObeysDaylightSavings as boolean,\n\t\tUSPSPostOfficeName as string,\n\t\tUSPSAlternateNamesOfCity as string,\n\t\tLocalAlternateNamesOfCity as string,\n\t\tCleanCITYNameForGeocoding as string,\n\t\tCleanSTATENAMEForGeocoding as string,\n\t\tFIPSStateNumericCode as integer,\n\t\tName as string,\n\t\tDMADescription as string,\n\t\tDMAMarketRegion as string,\n\t\tDMACode as integer,\n\t\tDMANameNielsen as string,\n\t\tDMANameInternal as string,\n\t\tDMANameAlternate as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tSourceSystem as string,\n\t\tCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimGeography\nsource(output(\n\t\tAppointmentTypeKey as integer,\n\t\tAppointmentTypeName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimAppointmentType\nsource(output(\n\t\tMeetingPlatformKey as integer,\n\t\tMeetingPlatformName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimMeetingPlatform\nsource(output(\n\t\tAccountKey as integer,\n\t\tAccountId as string,\n\t\tAccountFirstName as string,\n\t\tAccountLastName as string,\n\t\tAccountFullName as string,\n\t\tIsActive as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tCreatedDateKey as integer,\n\t\tCreatedTimeKey as integer,\n\t\tCreatedUserKey as integer,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tLastModifiedUserKey as integer,\n\t\tBillingStreet as string,\n\t\tBillingCity as string,\n\t\tBillingState as string,\n\t\tBillingPostalCode as string,\n\t\tBillingCountry as string,\n\t\tBillingStateCode as string,\n\t\tBillingCountryCode as string,\n\t\tBillingGeographyKey as integer,\n\t\tEthnicityKey as integer,\n\t\tAccountEtnicity as string,\n\t\tGenderKey as integer,\n\t\tAccountGender as string,\n\t\tAccountPhone as string,\n\t\tAccountEmail as string,\n\t\tPersonContactId as string,\n\t\tIsPersonAccount as boolean,\n\t\tDoNotCall as boolean,\n\t\tDoNotContact as boolean,\n\t\tDoNotEmail as boolean,\n\t\tDoNotMail as boolean,\n\t\tDoNotText as boolean,\n\t\tNorwoodScale as string,\n\t\tLudwigScale as string,\n\t\tHairLossScaleKey as integer,\n\t\tHairLossInFamily as boolean,\n\t\tHairLossProductUsed as string,\n\t\tHairLossSpot as string,\n\t\tDiscStyle as string,\n\t\tAccountStatusKey as integer,\n\t\tAccountStatus as string,\n\t\tCompanyKey as integer,\n\t\tAccountCompany as string,\n\t\tSourceKey as integer,\n\t\tAccountSource as string,\n\t\tAccountExternalId as string,\n\t\tMaritalStatusKey as integer,\n\t\tMaritalStatus as string,\n\t\tSourceSystem as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimAccount\nsource(output(\n\t\tStatusKey as integer,\n\t\tHash as string,\n\t\tStatusName as string,\n\t\tStatusGroup as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as integer,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimStatus\nsource(output(\n\t\tLeadKey as integer,\n\t\tLeadId as string,\n\t\tLeadFirstName as string,\n\t\tLeadLastname as string,\n\t\tLeadFullName as string,\n\t\tLeadBirthday as date,\n\t\tLeadAddress as string,\n\t\tIsActive as boolean,\n\t\tIsConsultFormComplete as boolean,\n\t\tIsvalid as boolean,\n\t\tLeadEmail as string,\n\t\tLeadPhone as string,\n\t\tLeadMobilePhone as string,\n\t\tNorwoodScale as string,\n\t\tLudwigScale as string,\n\t\tHairLossInFamily as string,\n\t\tHairLossProductUsed as string,\n\t\tHairLossSpot as string,\n\t\tGeographyKey as integer,\n\t\tLeadPostalCode as string,\n\t\tEthnicityKey as integer,\n\t\tLeadEthnicity as string,\n\t\tGenderKey as integer,\n\t\tLeadGender as string,\n\t\tCenterKey as integer,\n\t\tCenterNumber as string,\n\t\tLanguageKey as integer,\n\t\tLeadLanguage as string,\n\t\tStatusKey as integer,\n\t\tLeadStatus as string,\n\t\tLeadCreatedDate as timestamp,\n\t\tCreatedDateKey as integer,\n\t\tCreatedTimeKey as integer,\n\t\tLeadLastActivityDate as timestamp,\n\t\tLastActivityDateKey as integer,\n\t\tLastActivityTimekey as integer,\n\t\tDISCStyle as string,\n\t\tLeadMaritalStatus as string,\n\t\tLeadConsultReady as integer,\n\t\tConsultationFormReady as integer,\n\t\tIsDeleted as boolean,\n\t\tDoNotCall as boolean,\n\t\tDoNotContact as boolean,\n\t\tDoNotEmail as boolean,\n\t\tDoNotMail as boolean,\n\t\tDoNotText as boolean,\n\t\tCreateUser as string,\n\t\tUpdateUser as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tMaritalStatusKey as integer,\n\t\tLeadSource as string,\n\t\tSourceKey as integer,\n\t\tOriginalCommMethodkey as integer,\n\t\tRecentCommMethodKey as integer,\n\t\tCommunicationMethod as string,\n\t\tIsValidLeadName as boolean,\n\t\tIsValidLeadLastName as boolean,\n\t\tIsValidLeadFullName as boolean,\n\t\tIsValidLeadPhone as boolean,\n\t\tIsValidLeadMobilePhone as boolean,\n\t\tIsValidLeadEmail as boolean,\n\t\tReviewNeeded as boolean,\n\t\tConvertedContactId as string,\n\t\tConvertedAccountId as string,\n\t\tConvertedOpportunityId as string,\n\t\tConvertedDate as timestamp,\n\t\tLastModifiedDate as timestamp,\n\t\tSourceSystem as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tLeadExternalID as string,\n\t\tServiceTerritoryID as string,\n\t\tOriginalCampaignId as string,\n\t\tOriginalCampaignKey as integer,\n\t\tAccountID as string,\n\t\tLeadOccupation as string,\n\t\tOriginalCampaignSource as string,\n\t\tGCLID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimLead\nsource(output(\n\t\tCenterKey as integer,\n\t\tCenterID as integer,\n\t\tCenterPayGroupID as integer,\n\t\tCenterDescription as string,\n\t\tAddress1 as string,\n\t\tAddress2 as string,\n\t\tAddress3 as string,\n\t\tCenterGeographykey as integer,\n\t\tCenterPostalCode as string,\n\t\tCenterPhone1 as string,\n\t\tCenterPhone2 as string,\n\t\tCenterPhone3 as string,\n\t\tPhone1TypeID as integer,\n\t\tPhone2TypeID as integer,\n\t\tPhone3TypeID as integer,\n\t\tIsPhone1PrimaryFlag as boolean,\n\t\tIsPhone2PrimaryFlag as boolean,\n\t\tIsPhone3PrimaryFlag as boolean,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tLastUpdate as timestamp,\n\t\tUpdateStamp as string,\n\t\tCenterNumber as integer,\n\t\tCenterOwnershipID as integer,\n\t\tCenterOwnershipSortOrder as integer,\n\t\tCenterOwnershipDescription as string,\n\t\tCenterOwnershipDescriptionShort as string,\n\t\tOwnerLastName as string,\n\t\tOwnerFirstName as string,\n\t\tCorporateName as string,\n\t\tOwnershipAddress1 as string,\n\t\tOwnershipAddress2 as string,\n\t\tOwnershipGeographykey as integer,\n\t\tOwnershipPostalCode as string,\n\t\tCenterTypeID as integer,\n\t\tCenterTypeSortOrder as integer,\n\t\tCenterTypeDescription as string,\n\t\tCenterTypeDescriptionShort as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as integer,\n\t\tSourceSystem as string,\n\t\tTimeZoneID as integer,\n\t\tServiceTerritoryId as string,\n\t\tIsDeleted as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimCenter\nsource(output(\n\t\tId as string,\n\t\tWhoId as string,\n\t\tWhatId as string,\n\t\tWhoCount as integer,\n\t\tWhatCount as integer,\n\t\tSubject as string,\n\t\tLocation as string,\n\t\tIsAllDayEvent as boolean,\n\t\tActivityDateTime as timestamp,\n\t\tActivityDate as timestamp,\n\t\tDurationInMinutes as integer,\n\t\tStartDateTime as timestamp,\n\t\tEndDateTime as timestamp,\n\t\tDescription as string,\n\t\tAccountId as string,\n\t\tOwnerId as string,\n\t\tCurrencyIsoCode as string,\n\t\tType as string,\n\t\tIsPrivate as boolean,\n\t\tShowAs as string,\n\t\tIsDeleted as boolean,\n\t\tIsChild as boolean,\n\t\tIsGroupEvent as boolean,\n\t\tGroupEventType as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tIsArchived as boolean,\n\t\tRecurrenceActivityId as string,\n\t\tIsRecurrence as boolean,\n\t\tRecurrenceStartDateTime as timestamp,\n\t\tRecurrenceEndDateOnly as timestamp,\n\t\tRecurrenceTimeZoneSidKey as string,\n\t\tRecurrenceType as string,\n\t\tRecurrenceInterval as integer,\n\t\tRecurrenceDayOfWeekMask as integer,\n\t\tRecurrenceDayOfMonth as integer,\n\t\tRecurrenceInstance as string,\n\t\tRecurrenceMonthOfYear as string,\n\t\tReminderDateTime as timestamp,\n\t\tIsReminderSet as boolean,\n\t\tEventSubtype as string,\n\t\tIsRecurrence2Exclusion as boolean,\n\t\tRecurrence2PatternText as string,\n\t\tRecurrence2PatternVersion as string,\n\t\tIsRecurrence2 as boolean,\n\t\tIsRecurrence2Exception as boolean,\n\t\tRecurrence2PatternStartDate as timestamp,\n\t\tRecurrence2PatternTimeZone as string,\n\t\tBrightPattern__SPRecordingOrTranscriptURL__c as string,\n\t\tCenter_Name__c as string,\n\t\tCompleted_Date__c as timestamp,\n\t\tExternal_ID__c as string,\n\t\tLead__c as string,\n\t\tMeeting_Platform_Id__c as string,\n\t\tMeeting_Platform__c as string,\n\t\tPerson_Account__c as string,\n\t\tRecording_Link__c as string,\n\t\tResult__c as string,\n\t\tSPRecordingOrTranscriptURL__c as string,\n\t\tService_Appointment__c as string,\n\t\tService_Territory_Caller_Id__c as string,\n\t\tAgent_Link__c as string,\n\t\tGuest_Link__c as string,\n\t\tOpportunity__c as string,\n\t\tAcceptedEventInviteeIds as string,\n\t\tDeclinedEventInviteeIds as string,\n\t\tEventWhoIds as string,\n\t\tUndecidedEventInviteeIds as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> Event\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tAccountId as string,\n\t\tRecordTypeId as string,\n\t\tIsPrivate as boolean,\n\t\tName as string,\n\t\tDescription as string,\n\t\tStageName as string,\n\t\tAmount as decimal(38,18),\n\t\tProbability as decimal(38,18),\n\t\tExpectedRevenue as decimal(38,18),\n\t\tTotalOpportunityQuantity as decimal(38,18),\n\t\tCloseDate as timestamp,\n\t\tType as string,\n\t\tNextStep as string,\n\t\tLeadSource as string,\n\t\tIsClosed as boolean,\n\t\tIsWon as boolean,\n\t\tForecastCategory as string,\n\t\tForecastCategoryName as string,\n\t\tCurrencyIsoCode as string,\n\t\tCampaignId as string,\n\t\tHasOpportunityLineItem as boolean,\n\t\tPricebook2Id as string,\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tFiscalQuarter as integer,\n\t\tFiscalYear as integer,\n\t\tFiscal as string,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tSyncedQuoteId as string,\n\t\tContractId as string,\n\t\tHasOpenActivity as boolean,\n\t\tHasOverdueTask as boolean,\n\t\tBudget_Confirmed__c as boolean,\n\t\tDiscovery_Completed__c as boolean,\n\t\tROI_Analysis_Completed__c as boolean,\n\t\tLoss_Reason__c as string,\n\t\tAppointment_Source__c as string,\n\t\tHair_Loss_Experience__c as string,\n\t\tHair_Loss_Family__c as string,\n\t\tHair_Loss_Or_Volume__c as string,\n\t\tHair_Loss_Product_Other__c as string,\n\t\tHair_Loss_Product_Used__c as string,\n\t\tHair_Loss_Spot__c as string,\n\t\tIP_Address__c as string,\n\t\tLudwig_Scale__c as string,\n\t\tNorwood_Scale__c as string,\n\t\tReferral_Code_Expiration_Date__c as timestamp,\n\t\tReferral_Code__c as string,\n\t\tSolution_Offered__c as string,\n\t\tSource_Code__c as string,\n\t\tService_Territory__c as string,\n\t\tGCLID__c as string,\n\t\tPromo_Code__c as string,\n\t\tAmmount__c as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> Opportunity\nsource(output(\n\t\tLeadKey as integer,\n\t\tLeadId as string,\n\t\tLeadFirstName as string,\n\t\tLeadLastname as string,\n\t\tLeadFullName as string,\n\t\tLeadBirthday as date,\n\t\tLeadAddress as string,\n\t\tIsActive as boolean,\n\t\tIsConsultFormComplete as boolean,\n\t\tIsvalid as boolean,\n\t\tLeadEmail as string,\n\t\tLeadPhone as string,\n\t\tLeadMobilePhone as string,\n\t\tNorwoodScale as string,\n\t\tLudwigScale as string,\n\t\tHairLossInFamily as string,\n\t\tHairLossProductUsed as string,\n\t\tHairLossSpot as string,\n\t\tGeographyKey as integer,\n\t\tLeadPostalCode as string,\n\t\tEthnicityKey as integer,\n\t\tLeadEthnicity as string,\n\t\tGenderKey as integer,\n\t\tLeadGender as string,\n\t\tCenterKey as integer,\n\t\tCenterNumber as string,\n\t\tLanguageKey as integer,\n\t\tLeadLanguage as string,\n\t\tStatusKey as integer,\n\t\tLeadStatus as string,\n\t\tLeadCreatedDate as timestamp,\n\t\tCreatedDateKey as integer,\n\t\tCreatedTimeKey as integer,\n\t\tLeadLastActivityDate as timestamp,\n\t\tLastActivityDateKey as integer,\n\t\tLastActivityTimekey as integer,\n\t\tDISCStyle as string,\n\t\tLeadMaritalStatus as string,\n\t\tLeadConsultReady as integer,\n\t\tConsultationFormReady as integer,\n\t\tIsDeleted as boolean,\n\t\tDoNotCall as boolean,\n\t\tDoNotContact as boolean,\n\t\tDoNotEmail as boolean,\n\t\tDoNotMail as boolean,\n\t\tDoNotText as boolean,\n\t\tCreateUser as string,\n\t\tUpdateUser as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tMaritalStatusKey as integer,\n\t\tLeadSource as string,\n\t\tSourceKey as integer,\n\t\tOriginalCommMethodkey as integer,\n\t\tRecentCommMethodKey as integer,\n\t\tCommunicationMethod as string,\n\t\tIsValidLeadName as boolean,\n\t\tIsValidLeadLastName as boolean,\n\t\tIsValidLeadFullName as boolean,\n\t\tIsValidLeadPhone as boolean,\n\t\tIsValidLeadMobilePhone as boolean,\n\t\tIsValidLeadEmail as boolean,\n\t\tReviewNeeded as boolean,\n\t\tConvertedContactId as string,\n\t\tConvertedAccountId as string,\n\t\tConvertedOpportunityId as string,\n\t\tConvertedDate as timestamp,\n\t\tLastModifiedDate as timestamp,\n\t\tSourceSystem as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tLeadExternalID as string,\n\t\tServiceTerritoryID as string,\n\t\tOriginalCampaignId as string,\n\t\tOriginalCampaignKey as integer,\n\t\tAccountID as string,\n\t\tLeadOccupation as string,\n\t\tOriginalCampaignSource as string,\n\t\tGCLID as string,\n\t\tRealCreatedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> FactLeadTracking\nFilterByLastModified select(mapColumn(\n\t\tFactDate = CreatedDate,\n\t\tId,\n\t\tAppointmentDate = SchedStartTime,\n\t\tAccountId,\n\t\tContactId,\n\t\tParentRecordType,\n\t\tParentRecordId,\n\t\tWorkTypeId,\n\t\tAccountCity = City,\n\t\tAccountState = State,\n\t\tAccountPostalCode = PostalCode,\n\t\tAccountCountry = Country,\n\t\tAppointmentDescription = Description,\n\t\tAppointmentStatus = Status,\n\t\tServiceTerritoryId,\n\t\tAppointmentType,\n\t\tAppointmentCenterType = Center_Type__c,\n\t\tExternalId = External_Id__c,\n\t\tServiceAppointment = Service_Appointment__c,\n\t\tMeetingPlatform = Meeting_Platform__c,\n\t\tMeetingPlatformId = Meeting_Platform_Id__c,\n\t\tIsDeleted,\n\t\tAppointmentStatusCategory = StatusCategory\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAppointmentColumns\nDimDate select(mapColumn(\n\t\tFactDateKey = DateKey,\n\t\tDimFactDate = FullDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectFactDatecolumns\nDimDate select(mapColumn(\n\t\tAppointmentDateKey = DateKey,\n\t\tDimAppointmentDate = FullDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAppointmentDateColumns\nSelectAppointmentColumns, SelectFactDatecolumns join(toDate(FactDate) == DimFactDate,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinFactDate\nJoinFactDate, SelectAppointmentDateColumns join(toDate(AppointmentDate) == DimAppointmentDate,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinAppointmentDate\nDimTimeOfDay select(mapColumn(\n\t\tFactTimeKey = TimeOfDayKey,\n\t\tHourFactDate = Hour24,\n\t\tMinuteFactDate = Minute,\n\t\tSecondFactDate = Second\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTimeFactDate\nDimTimeOfDay select(mapColumn(\n\t\tAppointmentTimeKey = TimeOfDayKey,\n\t\tHourAppointment = Hour24,\n\t\tMinuteAppointment = Minute,\n\t\tSecondAppointment = Second\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTimeAppointment\nJoinAppointmentDate, SelectTimeFactDate join(hour(FactDate) == HourFactDate\n\t&& minute(FactDate) == MinuteFactDate\n\t&& second(FactDate) == SecondFactDate,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinTimeFactDate\nJoinTimeFactDate, SelectTimeAppointment join(hour(AppointmentDate) == HourAppointment\n\t&& minute(AppointmentDate) == MinuteAppointment\n\t&& second(AppointmentDate) == SecondAppointment,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinTimeAppointment\nJoinTimeAppointment, SelectGeographyColumns join(lower(iif(length(replace(AccountPostalCode, ' ',''))==6, left(AccountPostalCode, 3), AccountPostalCode)) == DigitZIPCode,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDimGeography\nDimGeography select(mapColumn(\n\t\tGeographyKey,\n\t\tDigitZIPCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectGeographyColumns\nDimAppointmentType filter(SourceSystem == 'Salesforce') ~> FilterAppoimentTypeSourceSystem\nFilterAppoimentTypeSourceSystem select(mapColumn(\n\t\tAppointmentTypeKey,\n\t\tAppointmentTypeName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAppointmentTypeColumns\nJoinDimGeography, SelectAppointmentTypeColumns join(lower(trim(AppointmentType)) == lower(AppointmentTypeName),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinAppointmentType\nJoinAppointmentType, SelectMeetingPlatform join(lower(MeetingPlatform) == lower(MeetingPlatformName),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinMeetingPlatform\nDimMeetingPlatform filter(SourceSystem == 'Salesforce') ~> FilterMeetingPlatform\nFilterMeetingPlatform select(mapColumn(\n\t\tMeetingPlatformKey,\n\t\tMeetingPlatformName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectMeetingPlatform\nAddCustomColumnsAndKeys alterRow(upsertIf(true())) ~> AllowUpsert\nJoinFactLead derive(FactTimeKey = coalesce(FactTimeKey, -1),\n\t\tFactDateKey = coalesce(FactDateKey, -1),\n\t\tAppointmentTimeKey = coalesce(AppointmentTimeKey, -1),\n\t\tAppointmentDateKey = coalesce(AppointmentDateKey, -1),\n\t\tAccountKey = coalesce(AccountKey, -1),\n\t\tContactKey = coalesce(-1),\n\t\tGeographyKey = coalesce(GeographyKey, -1),\n\t\tAppointmentTypeKey = coalesce(AppointmentTimeKey, -1),\n\t\tMeetingPlatformKey = coalesce(MeetingPlatformKey, -1),\n\t\tWorkTypeKey = coalesce(-1),\n\t\tStatuskey = coalesce(StatusKey, -1),\n\t\tDWH_LastUpdateDate = currentTimestamp(),\n\t\tDWH_LoadDate = currentTimestamp(),\n\t\tIsOld = 0,\n\t\tLeadId = coalesce(LeadId, LeadIdOld, LeadIdParent, LeadIdFact),\n\t\tLeadKey = coalesce(LeadKey, LeadKeyOld, LeadKeyParent,LeadKeyFact,-1),\n\t\tCenterKey = coalesce(CenterKeyLast, CenterKey, CenterKeyParent, -1),\n\t\tCenterNumber = coalesce(CenterNumberLast, toInteger(CenterKeyParent), toInteger(CenterNumber)),\n\t\tOpportunityAmmount = coalesce(Amount, Ammount__c)) ~> AddCustomColumnsAndKeys\nJoinMeetingPlatform, SelectAccountColumns join(SelectAppointmentColumns@AccountId == SelectAccountColumns@AccountId,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDimAccount\nDimAccount filter(SourceSystem == 'Salesforce') ~> FilterAccountSourceSystem\nFilterAccountSourceSystem select(mapColumn(\n\t\tAccountKey,\n\t\tAccountId,\n\t\tAccountExternalId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAccountColumns\nDimStatus filter(lower(StatusGroup) == lower('ServiceAppointment')) ~> FilterByStatusGroup\nFilterByStatusGroup select(mapColumn(\n\t\tStatusKey,\n\t\tHash,\n\t\tStatusName,\n\t\tStatusGroup,\n\t\tDWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive,\n\t\tSourceSystem\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectStatusName\nJoinDimAccount, SelectStatusName join(lower(trim(AppointmentStatus)) == lower(trim(StatusName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinStatus\nDimLead select(mapColumn(\n\t\tLeadKey,\n\t\tLeadId,\n\t\tConvertedAccountId,\n\t\tCenterKey,\n\t\tCenterNumber\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimLead\nJoinStatus, SelectDimLeadCustom join(SelectAppointmentColumns@AccountId == ConvertedAccountId\n\t&& AccountKey == ControlColumn,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDimLead\nDimLead select(mapColumn(\n\t\tLeadIdOld = LeadId,\n\t\tLeadKeyOld = LeadKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimLeadOld\nJoinDimLead, SelectDimLeadOld join(case(isNull(LeadId),AccountExternalId) == LeadIdOld,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDimLeadOld\nJoinDimLeadOld, SelectLeadBYPArentRecord join(ParentRecordId == LeadIdParent,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDimLeadParentRecord\nDimLead select(mapColumn(\n\t\tLeadKeyParent = LeadKey,\n\t\tLeadIdParent = LeadId,\n\t\tCenterKeyParent = CenterKey,\n\t\tCenterNumberParent = CenterNumber\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLeadBYPArentRecord\nFilterCenter select(mapColumn(\n\t\tCenterKeyLast = CenterKey,\n\t\tCenterNumberLast = CenterNumber,\n\t\tServiceTerritoryIdLast = ServiceTerritoryId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCenter\nDimCenter filter(IsDeleted == toBoolean(toString(0)) && IsActiveFlag == toBoolean(toString(1))) ~> FilterCenter\nJoinDimLeadParentRecord, SelectCenter join(ServiceTerritoryId == ServiceTerritoryIdLast,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCenter\nFilterIsDeleted select(mapColumn(\n\t\tOpportunity__c,\n\t\tService_Appointment__c\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectEvent\nOpportunity select(mapColumn(\n\t\tOpportunityDate = CreatedDate,\n\t\tOpportunityId = Id,\n\t\tOpportunityStatus = StageName,\n\t\tReferralCode = Referral_Code__c,\n\t\tReferralCodeExpirationDate = Referral_Code_Expiration_Date__c,\n\t\tAmmount__c,\n\t\tAmount\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOpportunity\nSelectOpportunity, SelectEvent join(OpportunityId == Opportunity__c,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinEvent\nJoinCenter, JoinEvent join(Id == Service_Appointment__c,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinOpportunity\nODServiceAppointment filter(toDate(SchedStartTime) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(SchedStartTime) <= addDays(toDate(currentTimestamp()), 1)) ~> FilterByLastModified\nSelectDimLead derive(ControlColumn = toInteger(null())) ~> SelectDimLeadCustom\nEvent filter(IsDeleted == false()) ~> FilterIsDeleted\nFilter1 select(mapColumn(\n\t\tLeadKeyFact = LeadKey,\n\t\tLeadIdFact = LeadId,\n\t\tLeadExternalID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectFactLeadColumns\nSelectFactLeadColumns derive(LeadKeyControl = toInteger(null())) ~> AddFactLeadControlKey\nJoinOpportunity, AddFactLeadControlKey join(AccountExternalId == LeadIdFact,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinFactLead\nFactLeadTracking filter(LeadId == '00Qf400000BnviOEAR') ~> Filter1\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tFactDate as timestamp,\n\t\tFactTimeKey as integer,\n\t\tFactDateKey as integer,\n\t\tAppointmentDate as timestamp,\n\t\tAppointmentTimeKey as integer,\n\t\tAppointmentDateKey as integer,\n\t\tLeadKey as integer,\n\t\tLeadId as string,\n\t\tAccountKey as integer,\n\t\tAccountId as string,\n\t\tContactKey as integer,\n\t\tContactId as string,\n\t\tParentRecordType as string,\n\t\tWorkTypeKey as integer,\n\t\tWorkTypeId as string,\n\t\tAccountAddress as string,\n\t\tAccountCity as string,\n\t\tAccountState as string,\n\t\tAccountPostalCode as string,\n\t\tAccountCountry as string,\n\t\tGeographyKey as integer,\n\t\tAppointmentDescription as string,\n\t\tAppointmentStatus as string,\n\t\tCenterKey as integer,\n\t\tServiceTerritoryId as string,\n\t\tCenterNumber as integer,\n\t\tAppointmentTypeKey as integer,\n\t\tAppointmentType as string,\n\t\tAppointmentCenterType as string,\n\t\tExternalId as string,\n\t\tServiceAppointment as string,\n\t\tMeetingPlatformKey as integer,\n\t\tMeetingPlatformId as string,\n\t\tMeetingPlatform as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tParentRecordId as string,\n\t\tAppointmentId as string,\n\t\tExternalTaskId as string,\n\t\tStatusKey as integer,\n\t\tCancellationReason as string,\n\t\tBeBackFlag as boolean,\n\t\tOldStatus as string,\n\t\tAppoinmentStatusCategory as string,\n\t\tIsDeleted as boolean,\n\t\tIsOld as integer,\n\t\tOpportunityId as string,\n\t\tOpportunityStatus as string,\n\t\tOpportunityDate as timestamp,\n\t\tOpportunityReferralCode as string,\n\t\tOpportunityReferralCodeExpirationDate as timestamp,\n\t\tOpportunityAmmount as decimal(38,18)\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['AppointmentId'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFactDate,\n\t\tAppointmentId = Id,\n\t\tFactTimeKey,\n\t\tFactDateKey,\n\t\tAppointmentDate,\n\t\tAppointmentTimeKey,\n\t\tAppointmentDateKey,\n\t\tLeadKey,\n\t\tAccountKey,\n\t\tAccountId = SelectAppointmentColumns@AccountId,\n\t\tContactKey,\n\t\tContactId,\n\t\tParentRecordType,\n\t\tParentRecordId,\n\t\tLeadKey,\n\t\tLeadId,\n\t\tCenterKey,\n\t\tCenterNumber,\n\t\tWorkTypeKey,\n\t\tWorkTypeId,\n\t\tAccountCity,\n\t\tAccountState,\n\t\tAccountPostalCode,\n\t\tAccountCountry,\n\t\tGeographyKey,\n\t\tAppointmentDescription,\n\t\tAppointmentStatus,\n\t\tServiceTerritoryId,\n\t\tAppointmentTypeKey,\n\t\tAppointmentType,\n\t\tAppointmentCenterType,\n\t\tExternalId,\n\t\tServiceAppointment,\n\t\tMeetingPlatformKey,\n\t\tMeetingPlatformId,\n\t\tMeetingPlatform,\n\t\tDWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tStatusKey = AddCustomColumnsAndKeys@Statuskey,\n\t\tIsOld,\n\t\tAppoinmentStatusCategory = AppointmentStatusCategory,\n\t\tIsDeleted,\n\t\tOpportunityDate,\n\t\tOpportunityId,\n\t\tOpportunityStatus,\n\t\tOpportunityReferralCode = ReferralCode,\n\t\tOpportunityReferralCodeExpirationDate = ReferralCodeExpirationDate,\n\t\tOpportunityAmmount\n\t)) ~> InsertFactAppointment"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CNCT_lkpLanguage')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "CONNECT"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_CNCT_lkpLanguage",
                                "type": "DatasetReference"
                            },
                            "name": "source1"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_lkpLanguage",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AlterRow1"
                        }
                    ],
                    "script": "source(output(\n\t\tLanguageID as integer,\n\t\tLanguageSortOrder as integer,\n\t\tLanguageDescription as string,\n\t\tLanguageDescriptionShort as string,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary,\n\t\tOnContactLanguageCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> source1\nsource1 alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tLanguageID as integer,\n\t\tLanguageSortOrder as integer,\n\t\tLanguageDescription as string,\n\t\tLanguageDescriptionShort as string,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary,\n\t\tOnContactLanguageCode as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['LanguageID'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CNCT_datClient')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "CONNECT"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_CNCT_datClient",
                                "type": "DatasetReference"
                            },
                            "name": "CNCTdatClient"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_datClient",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AlterRow1"
                        }
                    ],
                    "script": "source(output(\n\t\tClientGUID as string,\n\t\tClientIdentifier as integer,\n\t\tClientNumber_Temp as integer,\n\t\tCenterID as integer,\n\t\tCountryID as integer,\n\t\tSalutationID as integer,\n\t\tContactID as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tAddress1 as string,\n\t\tAddress2 as string,\n\t\tAddress3 as string,\n\t\tCity as string,\n\t\tStateID as integer,\n\t\tPostalCode as string,\n\t\tARBalance as decimal(19,4),\n\t\tGenderID as integer,\n\t\tDateOfBirth as timestamp,\n\t\tDoNotCallFlag as boolean,\n\t\tDoNotContactFlag as boolean,\n\t\tIsHairModelFlag as boolean,\n\t\tIsTaxExemptFlag as boolean,\n\t\tEMailAddress as string,\n\t\tTextMessageAddress as string,\n\t\tPhone1 as string,\n\t\tPhone2 as string,\n\t\tPhone3 as string,\n\t\tPhone1TypeID as integer,\n\t\tPhone2TypeID as integer,\n\t\tPhone3TypeID as integer,\n\t\tIsPhone1PrimaryFlag as boolean,\n\t\tIsPhone2PrimaryFlag as boolean,\n\t\tIsPhone3PrimaryFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary,\n\t\tIsHairSystemClientFlag as boolean,\n\t\tTaxExemptNumber as string,\n\t\tCurrentBioMatrixClientMembershipGUID as string,\n\t\tCurrentSurgeryClientMembershipGUID as string,\n\t\tCurrentExtremeTherapyClientMembershipGUID as string,\n\t\tIsAutoConfirmTextPhone1 as boolean,\n\t\tIsAutoConfirmTextPhone2 as boolean,\n\t\tIsAutoConfirmTextPhone3 as boolean,\n\t\tImportCreateDate as timestamp,\n\t\tImportLastUpdate as timestamp,\n\t\tClientMembershipCounter as integer,\n\t\tRequiredNoteReview as boolean,\n\t\tSiebelID as string,\n\t\tEmergencyContactPhone as string,\n\t\tBosleyProcedureOffice as string,\n\t\tBosleyConsultOffice as string,\n\t\tIsAutoConfirmEmail as boolean,\n\t\tIsEmailUndeliverable as boolean,\n\t\tAcquiredDate as timestamp,\n\t\tCurrentXtrandsClientMembershipGUID as string,\n\t\tExpectedConversionDate as timestamp,\n\t\tLanguageID as integer,\n\t\tIsConfirmCallPhone1 as boolean,\n\t\tIsConfirmCallPhone2 as boolean,\n\t\tIsConfirmCallPhone3 as boolean,\n\t\tAnniversaryDate as timestamp,\n\t\tCanConfirmAppointmentByEmail as boolean,\n\t\tCanContactForPromotionsByEmail as boolean,\n\t\tDoNotVisitInRoom as boolean,\n\t\tDoNotMoveAppointments as boolean,\n\t\tIsAutoRenewDisabled as boolean,\n\t\tKorvueID as string,\n\t\tSalesforceContactID as string,\n\t\tClientFullNameAltCalc as string,\n\t\tClientFullNameCalc as string,\n\t\tClientFullNameAlt2Calc as string,\n\t\tClientFullNameAlt3Calc as string,\n\t\tAgeCalc as integer,\n\t\tIsBioGraftClient as boolean,\n\t\tCurrentMDPClientMembershipGUID as string,\n\t\tLeadCreateDate as date,\n\t\tBosleySalesforceAccountID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> CNCTdatClient\nCNCTdatClient alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tClientGUID as string,\n\t\tClientIdentifier as integer,\n\t\tClientNumber_Temp as integer,\n\t\tCenterID as integer,\n\t\tCountryID as integer,\n\t\tSalutationID as integer,\n\t\tContactID as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tAddress1 as string,\n\t\tAddress2 as string,\n\t\tAddress3 as string,\n\t\tCity as string,\n\t\tStateID as integer,\n\t\tPostalCode as string,\n\t\tARBalance as decimal(19,4),\n\t\tGenderID as integer,\n\t\tDateOfBirth as timestamp,\n\t\tDoNotCallFlag as boolean,\n\t\tDoNotContactFlag as boolean,\n\t\tIsHairModelFlag as boolean,\n\t\tIsTaxExemptFlag as boolean,\n\t\tEMailAddress as string,\n\t\tTextMessageAddress as string,\n\t\tPhone1 as string,\n\t\tPhone2 as string,\n\t\tPhone3 as string,\n\t\tPhone1TypeID as integer,\n\t\tPhone2TypeID as integer,\n\t\tPhone3TypeID as integer,\n\t\tIsPhone1PrimaryFlag as boolean,\n\t\tIsPhone2PrimaryFlag as boolean,\n\t\tIsPhone3PrimaryFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary,\n\t\tIsHairSystemClientFlag as boolean,\n\t\tTaxExemptNumber as string,\n\t\tCurrentBioMatrixClientMembershipGUID as string,\n\t\tCurrentSurgeryClientMembershipGUID as string,\n\t\tCurrentExtremeTherapyClientMembershipGUID as string,\n\t\tIsAutoConfirmTextPhone1 as boolean,\n\t\tIsAutoConfirmTextPhone2 as boolean,\n\t\tIsAutoConfirmTextPhone3 as boolean,\n\t\tImportCreateDate as timestamp,\n\t\tImportLastUpdate as timestamp,\n\t\tClientMembershipCounter as integer,\n\t\tRequiredNoteReview as boolean,\n\t\tSiebelID as string,\n\t\tEmergencyContactPhone as string,\n\t\tBosleyProcedureOffice as string,\n\t\tBosleyConsultOffice as string,\n\t\tIsAutoConfirmEmail as boolean,\n\t\tIsEmailUndeliverable as boolean,\n\t\tAcquiredDate as timestamp,\n\t\tCurrentXtrandsClientMembershipGUID as string,\n\t\tExpectedConversionDate as timestamp,\n\t\tLanguageID as integer,\n\t\tIsConfirmCallPhone1 as boolean,\n\t\tIsConfirmCallPhone2 as boolean,\n\t\tIsConfirmCallPhone3 as boolean,\n\t\tAnniversaryDate as timestamp,\n\t\tCanConfirmAppointmentByEmail as boolean,\n\t\tCanContactForPromotionsByEmail as boolean,\n\t\tDoNotVisitInRoom as boolean,\n\t\tDoNotMoveAppointments as boolean,\n\t\tIsAutoRenewDisabled as boolean,\n\t\tKorvueID as string,\n\t\tSalesforceContactID as string,\n\t\tClientFullNameAltCalc as string,\n\t\tClientFullNameCalc as string,\n\t\tClientFullNameAlt2Calc as string,\n\t\tClientFullNameAlt3Calc as string,\n\t\tAgeCalc as integer,\n\t\tIsBioGraftClient as boolean,\n\t\tCurrentMDPClientMembershipGUID as string,\n\t\tLeadCreateDate as date,\n\t\tBosleySalesforceAccountID as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ClientGUID'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CNCT_RevenueGroup')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "CONNECT"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_CNCT_RevenueGroup",
                                "type": "DatasetReference"
                            },
                            "name": "CNCTRevenueGroup"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_RevenueGroup",
                                "type": "DatasetReference"
                            },
                            "name": "ODSRevenueGroup"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AlterRow1"
                        }
                    ],
                    "script": "source(output(\n\t\tRevenueGroupID as integer,\n\t\tRevenueGroupSortOrder as integer,\n\t\tRevenueGroupDescription as string,\n\t\tRevenueGroupDescriptionShort as string,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> CNCTRevenueGroup\nCNCTRevenueGroup alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tRevenueGroupID as integer,\n\t\tRevenueGroupSortOrder as integer,\n\t\tRevenueGroupDescription as string,\n\t\tRevenueGroupDescriptionShort as string,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['RevenueGroupID'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSRevenueGroup"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CNCT_Gender')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "CONNECT"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_CNCT_Gender",
                                "type": "DatasetReference"
                            },
                            "name": "CNCTlkpGender"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_Gender",
                                "type": "DatasetReference"
                            },
                            "name": "ODSlkpGender"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AlterRow1"
                        }
                    ],
                    "script": "source(output(\n\t\tGenderID as integer,\n\t\tGenderSortOrder as integer,\n\t\tGenderDescription as string,\n\t\tGenderDescriptionShort as string,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary,\n\t\tDescriptionResourceKey as string,\n\t\tDescriptionShortResourceKey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> CNCTlkpGender\nCNCTlkpGender alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tGenderID as integer,\n\t\tGenderSortOrder as integer,\n\t\tGenderDescription as string,\n\t\tGenderDescriptionShort as string,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary,\n\t\tDescriptionResourceKey as string,\n\t\tDescriptionShortResourceKey as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['GenderID'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSlkpGender"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ODSServiceTerritory')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/ODS"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_SF_ServiceTerritory",
                                "type": "DatasetReference"
                            },
                            "name": "ServiceTerritoryParquet"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_ServiceTerritory",
                                "type": "DatasetReference"
                            },
                            "name": "UpsertOdsServiceTerritory"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AllowUpsert"
                        }
                    ],
                    "script": "source(output(\n\t\tId as string,\n\t\tOwnerId as string,\n\t\tIsDeleted as boolean,\n\t\tName as string,\n\t\tCurrencyIsoCode as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tParentTerritoryId as string,\n\t\tTopLevelTerritoryId as string,\n\t\tDescription as string,\n\t\tOperatingHoursId as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tIsActive as boolean,\n\t\tTypicalInTerritoryTravelTime as decimal(38,18),\n\t\tAlternative_Phone__c as string,\n\t\tAreaManager__c as string,\n\t\tArea__c as string,\n\t\tAssistantManager__c as string,\n\t\tBackLinePhone__c as string,\n\t\tBestTressedOffered__c as boolean,\n\t\tCaller_Id__c as string,\n\t\tCenterAlert__c as string,\n\t\tCenterNumber__c as string,\n\t\tCenterOwner__c as string,\n\t\tCenterType__c as string,\n\t\tCompanyID__c as string,\n\t\tCompany__c as string,\n\t\tConfirmationCallerIDEnglish__c as string,\n\t\tConfirmationCallerIDFrench__c as string,\n\t\tConfirmationCallerIDSpanish__c as string,\n\t\tCustomerServiceLine__c as string,\n\t\tDisplayName__c as string,\n\t\tExternal_Id__c as string,\n\t\tImageConsultant__c as string,\n\t\tMDPOffered__c as boolean,\n\t\tMDPPerformed__c as boolean,\n\t\tMain_Phone__c as string,\n\t\tManagerName__c as string,\n\t\tMap_Short_Link__c as string,\n\t\tMgrCellPhone__c as string,\n\t\tOfferPRP__c as boolean,\n\t\tOtherCallerIDEnglish__c as string,\n\t\tOtherCallerIDFrench__c as string,\n\t\tOtherCallerIDSpanish__c as string,\n\t\tOutboundDialingAllowed__c as boolean,\n\t\tProfileCode__c as string,\n\t\tRegion__c as string,\n\t\tStatus__c as string,\n\t\tSupported_Appointment_Types__c as string,\n\t\tSurgeryOffered__c as boolean,\n\t\tTimeZone__c as string,\n\t\tType__c as string,\n\t\tWebPhone__c as string,\n\t\tWeb_Phone__c as string,\n\t\tX1Apptperslot__c as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> ServiceTerritoryParquet\nServiceTerritoryParquet alterRow(upsertIf(true())) ~> AllowUpsert\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tId as string,\n\t\tOwnerId as string,\n\t\tIsDeleted as boolean,\n\t\tName as string,\n\t\tCurrencyIsoCode as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tParentTerritoryId as string,\n\t\tTopLevelTerritoryId as string,\n\t\tDescription as string,\n\t\tOperatingHoursId as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tIsActive as boolean,\n\t\tTypicalInTerritoryTravelTime as decimal(38,18),\n\t\tAlternative_Phone__c as string,\n\t\tAreaManager__c as string,\n\t\tArea__c as string,\n\t\tAssistantManager__c as string,\n\t\tBackLinePhone__c as string,\n\t\tBestTressedOffered__c as boolean,\n\t\tCaller_Id__c as string,\n\t\tCenterAlert__c as string,\n\t\tCenterNumber__c as string,\n\t\tCenterOwner__c as string,\n\t\tCenterType__c as string,\n\t\tCompanyID__c as string,\n\t\tCompany__c as string,\n\t\tConfirmationCallerIDEnglish__c as string,\n\t\tConfirmationCallerIDFrench__c as string,\n\t\tConfirmationCallerIDSpanish__c as string,\n\t\tCustomerServiceLine__c as string,\n\t\tDisplayName__c as string,\n\t\tExternal_Id__c as string,\n\t\tImageConsultant__c as string,\n\t\tMDPOffered__c as boolean,\n\t\tMDPPerformed__c as boolean,\n\t\tMain_Phone__c as string,\n\t\tManagerName__c as string,\n\t\tMap_Short_Link__c as string,\n\t\tMgrCellPhone__c as string,\n\t\tOfferPRP__c as boolean,\n\t\tOtherCallerIDEnglish__c as string,\n\t\tOtherCallerIDFrench__c as string,\n\t\tOtherCallerIDSpanish__c as string,\n\t\tOutboundDialingAllowed__c as boolean,\n\t\tProfileCode__c as string,\n\t\tRegion__c as string,\n\t\tStatus__c as string,\n\t\tSupported_Appointment_Types__c as string,\n\t\tSurgeryOffered__c as boolean,\n\t\tTimeZone__c as string,\n\t\tType__c as string,\n\t\tWebPhone__c as string,\n\t\tWeb_Phone__c as string,\n\t\tX1Apptperslot__c as boolean\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Id'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tId,\n\t\tOwnerId,\n\t\tIsDeleted,\n\t\tName,\n\t\tCurrencyIsoCode,\n\t\tCreatedDate,\n\t\tCreatedById,\n\t\tLastModifiedDate,\n\t\tLastModifiedById,\n\t\tSystemModstamp,\n\t\tLastViewedDate,\n\t\tLastReferencedDate,\n\t\tParentTerritoryId,\n\t\tTopLevelTerritoryId,\n\t\tDescription,\n\t\tOperatingHoursId,\n\t\tStreet,\n\t\tCity,\n\t\tState,\n\t\tPostalCode,\n\t\tCountry,\n\t\tStateCode,\n\t\tCountryCode,\n\t\tLatitude,\n\t\tLongitude,\n\t\tGeocodeAccuracy,\n\t\tIsActive,\n\t\tTypicalInTerritoryTravelTime,\n\t\tAlternative_Phone__c,\n\t\tAreaManager__c,\n\t\tArea__c,\n\t\tAssistantManager__c,\n\t\tBackLinePhone__c,\n\t\tBestTressedOffered__c,\n\t\tCaller_Id__c,\n\t\tCenterAlert__c,\n\t\tCenterNumber__c,\n\t\tCenterOwner__c,\n\t\tCenterType__c,\n\t\tCompanyID__c,\n\t\tCompany__c,\n\t\tConfirmationCallerIDEnglish__c,\n\t\tConfirmationCallerIDFrench__c,\n\t\tConfirmationCallerIDSpanish__c,\n\t\tCustomerServiceLine__c,\n\t\tDisplayName__c,\n\t\tExternal_Id__c,\n\t\tImageConsultant__c,\n\t\tMDPOffered__c,\n\t\tMDPPerformed__c,\n\t\tMain_Phone__c,\n\t\tManagerName__c,\n\t\tMap_Short_Link__c,\n\t\tMgrCellPhone__c,\n\t\tOfferPRP__c,\n\t\tOtherCallerIDEnglish__c,\n\t\tOtherCallerIDFrench__c,\n\t\tOtherCallerIDSpanish__c,\n\t\tOutboundDialingAllowed__c,\n\t\tProfileCode__c,\n\t\tRegion__c,\n\t\tStatus__c,\n\t\tSupported_Appointment_Types__c,\n\t\tSurgeryOffered__c,\n\t\tTimeZone__c,\n\t\tType__c,\n\t\tWebPhone__c,\n\t\tWeb_Phone__c,\n\t\tX1Apptperslot__c\n\t)) ~> UpsertOdsServiceTerritory"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ODS_MA_Canella')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "MarketingAgencies/ODS"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_MA_Canella",
                                "type": "DatasetReference"
                            },
                            "name": "CanellaTXT"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimTimeOfDay",
                                "type": "DatasetReference"
                            },
                            "name": "DimTimeOfDay"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_ODS_MA_Television",
                                "type": "DatasetReference"
                            },
                            "name": "ODSTelevision"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FilterNulls"
                        },
                        {
                            "name": "SelectColumns"
                        },
                        {
                            "name": "AddCustomColumns"
                        }
                    ],
                    "script": "parameters{\n\tFilePath as string\n}\nsource(output(\n\t\ttransactionid as string,\n\t\tCalendarDateEST as string,\n\t\tCalendarTimeEST as string,\n\t\tBroadcastDateEST as string,\n\t\tLocalAirTime as string,\n\t\tpurpose as string,\n\t\tmethod as string,\n\t\tChannel as string,\n\t\tMedium as string,\n\t\tcompany as string,\n\t\tlocation as string,\n\t\tBudgetType as string,\n\t\tBudgetName as string,\n\t\tSource as string,\n\t\tAffiliate as string,\n\t\tStation as string,\n\t\tShow as string,\n\t\tContentType as string,\n\t\tContent as string,\n\t\tCampaignType as string,\n\t\tCampaign as string,\n\t\tISCI as string,\n\t\tMasterNumber as string,\n\t\tTFN as string,\n\t\tSourcecode as string,\n\t\tPromoCode as string,\n\t\tURL as string,\n\t\tAgency as string,\n\t\tRegion as string,\n\t\tDMACode as string,\n\t\tDMAName as string,\n\t\tAudience as string,\n\t\tTactic as string,\n\t\tPlacement as string,\n\t\tFormat as string,\n\t\tLanguage as string,\n\t\tGrossSpend as string,\n\t\tNetSpend as string,\n\t\t{Impressions18-65} as string,\n\t\tGRP as string,\n\t\tSpots as string,\n\t\tLogType as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> CanellaTXT\nsource(output(\n\t\tTimeOfDayKey as integer,\n\t\tTime as string,\n\t\tTime24 as string,\n\t\tHour as integer,\n\t\tHourName as string,\n\t\tMinute as integer,\n\t\tMinuteKey as integer,\n\t\tMinuteName as string,\n\t\tSecond as integer,\n\t\tHour24 as integer,\n\t\tAM as string,\n\t\tTime24HM as string,\n\t\tHourC as integer,\n\t\tMinuteC as integer,\n\t\t{30MinuteInterval} as integer,\n\t\tDayPart as string,\n\t\tTimeNumber as integer,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimTimeOfDay\nCanellaTXT filter(!isNull(CalendarDateEST)) ~> FilterNulls\nFilterNulls select(mapColumn(\n\t\ttransactionid,\n\t\tCalendarDateEST,\n\t\tCalendarTimeEST,\n\t\tBroadcastDateEST,\n\t\tLocalAirTime,\n\t\tpurpose,\n\t\tmethod,\n\t\tChannel,\n\t\tMedium,\n\t\tcompany,\n\t\tlocation,\n\t\tBudgetType,\n\t\tBudgetName,\n\t\tSource,\n\t\tAffiliate,\n\t\tStation,\n\t\tShow,\n\t\tContentType,\n\t\tContent,\n\t\tCampaignType,\n\t\tCampaign,\n\t\tISCI,\n\t\tMasterNumber,\n\t\tTFN,\n\t\tSourcecode,\n\t\tPromoCode,\n\t\tURL,\n\t\tAgency,\n\t\tRegion,\n\t\tDMACode,\n\t\tDMAName,\n\t\tAudience,\n\t\tTactic,\n\t\tPlacement,\n\t\tFormat,\n\t\tLanguage,\n\t\tGrossSpend,\n\t\tNetSpend,\n\t\t{Impressions18-65},\n\t\tGRP,\n\t\tSpots,\n\t\tLogType\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSelectColumns derive(FilePath = $FilePath,\n\t\tDWH_LoadDate = currentTimestamp()) ~> AddCustomColumns\nAddCustomColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\ttransactionid as string,\n\t\tcalendardateest as string,\n\t\tcalendartimeest as string,\n\t\tbroadcastdateest as string,\n\t\tlocalairtime as string,\n\t\tpurpose as string,\n\t\tmethod as string,\n\t\tchannel as string,\n\t\tmedium as string,\n\t\tcompany as string,\n\t\tlocation as string,\n\t\tbudgettype as string,\n\t\tbudgetname as string,\n\t\tsource as string,\n\t\taffiliate as string,\n\t\tstation as string,\n\t\tshow as string,\n\t\tcontenttype as string,\n\t\tcontent as string,\n\t\tcampaigntype as string,\n\t\tcampaign as string,\n\t\tisci as string,\n\t\tmasternumber as string,\n\t\ttfn as string,\n\t\tsourcecode as string,\n\t\tpromocode as string,\n\t\turl as string,\n\t\tagency as string,\n\t\tregion as string,\n\t\tdmacode as string,\n\t\tdmaname as string,\n\t\taudiene as string,\n\t\ttactic as string,\n\t\tplacement as string,\n\t\tformat as string,\n\t\tlanguage as string,\n\t\tgrossspend as string,\n\t\tnetspend as string,\n\t\t{impressions18-65} as string,\n\t\tgrp as string,\n\t\tspots as string,\n\t\tlogtype as string,\n\t\t{impressions35+} as string,\n\t\ttrp as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tFilePath as string,\n\t\tCADSpend as decimal(19,4),\n\t\tCADPrice as decimal(19,4)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\ttransactionid,\n\t\tcalendardateest = CalendarDateEST,\n\t\tcalendartimeest = CalendarTimeEST,\n\t\tbroadcastdateest = BroadcastDateEST,\n\t\tlocalairtime = LocalAirTime,\n\t\tpurpose,\n\t\tmethod,\n\t\tchannel = Channel,\n\t\tmedium = Medium,\n\t\tcompany,\n\t\tlocation,\n\t\tbudgettype = BudgetType,\n\t\tbudgetname = BudgetName,\n\t\tsource = Source,\n\t\taffiliate = Affiliate,\n\t\tstation = Station,\n\t\tshow = Show,\n\t\tcontenttype = ContentType,\n\t\tcontent = Content,\n\t\tcampaigntype = CampaignType,\n\t\tcampaign = Campaign,\n\t\tisci = ISCI,\n\t\tmasternumber = MasterNumber,\n\t\ttfn = TFN,\n\t\tsourcecode = Sourcecode,\n\t\tpromocode = PromoCode,\n\t\turl = URL,\n\t\tagency = Agency,\n\t\tregion = Region,\n\t\tdmacode = DMACode,\n\t\tdmaname = DMAName,\n\t\taudiene = Audience,\n\t\ttactic = Tactic,\n\t\tplacement = Placement,\n\t\tformat = Format,\n\t\tlanguage = Language,\n\t\tgrossspend = GrossSpend,\n\t\tnetspend = NetSpend,\n\t\t{impressions18-65} = {Impressions18-65},\n\t\tgrp = GRP,\n\t\tspots = Spots,\n\t\tlogtype = LogType,\n\t\tDWH_LoadDate,\n\t\tFilePath\n\t)) ~> ODSTelevision"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimLeadMigration')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/Migration"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimLead",
                                "type": "DatasetReference"
                            },
                            "name": "Dimlead"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimLeadProd",
                                "type": "DatasetReference"
                            },
                            "name": "DimLeadProd"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimStatus",
                                "type": "DatasetReference"
                            },
                            "name": "DimStatus"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimDate",
                                "type": "DatasetReference"
                            },
                            "name": "DimDate"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimTimeOfDay",
                                "type": "DatasetReference"
                            },
                            "name": "DimTimeOfDay"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimGeography",
                                "type": "DatasetReference"
                            },
                            "name": "DimGeography"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimEthnicity",
                                "type": "DatasetReference"
                            },
                            "name": "DimEthnicity"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimGender",
                                "type": "DatasetReference"
                            },
                            "name": "DimGender"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimLanguage",
                                "type": "DatasetReference"
                            },
                            "name": "DimLanguage"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimMaritalStatus",
                                "type": "DatasetReference"
                            },
                            "name": "DimMaritalStatus"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCampaign",
                                "type": "DatasetReference"
                            },
                            "name": "DimCampaign"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_ServiceTerritory",
                                "type": "DatasetReference"
                            },
                            "name": "DimServiceTerritory"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCenter",
                                "type": "DatasetReference"
                            },
                            "name": "DimCenter"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimLead",
                                "type": "DatasetReference"
                            },
                            "name": "InsertDimLead"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "Exists2"
                        },
                        {
                            "name": "SelectCreatedDateKey"
                        },
                        {
                            "name": "SelectActivityDatekey"
                        },
                        {
                            "name": "SelectCreatedTimeOfDayKey"
                        },
                        {
                            "name": "ActivityTimeOfDayKey"
                        },
                        {
                            "name": "SelectDimGeography"
                        },
                        {
                            "name": "SelectDimEthnicity"
                        },
                        {
                            "name": "SelectDimGender"
                        },
                        {
                            "name": "SelectDimLanguage"
                        },
                        {
                            "name": "SelectDimMaritalStatus"
                        },
                        {
                            "name": "SelectCampaign"
                        },
                        {
                            "name": "SelectStatus"
                        },
                        {
                            "name": "JoinCreatedDate"
                        },
                        {
                            "name": "JoinActivityDate"
                        },
                        {
                            "name": "JoinCreatedTimeODay"
                        },
                        {
                            "name": "JoinActivityTimeOfDay"
                        },
                        {
                            "name": "JoinGeography"
                        },
                        {
                            "name": "JoinEthnicity"
                        },
                        {
                            "name": "JoinDimGender"
                        },
                        {
                            "name": "JoinLanguage"
                        },
                        {
                            "name": "JoinMaritalStatus"
                        },
                        {
                            "name": "JoinCampaign"
                        },
                        {
                            "name": "JoinStatus"
                        },
                        {
                            "name": "DerivedColumn1"
                        },
                        {
                            "name": "AlterRow1"
                        },
                        {
                            "name": "FilterStatus"
                        },
                        {
                            "name": "SelectServiceTerritory"
                        },
                        {
                            "name": "SelectDimCenterByNumber"
                        },
                        {
                            "name": "JoinCenterNumberByNumber"
                        },
                        {
                            "name": "FilterActiveCenter"
                        }
                    ],
                    "script": "source(output(\n\t\tLeadKey as integer,\n\t\tLeadId as string,\n\t\tLeadFirstName as string,\n\t\tLeadLastname as string,\n\t\tLeadFullName as string,\n\t\tLeadBirthday as date,\n\t\tLeadAddress as string,\n\t\tIsActive as boolean,\n\t\tIsConsultFormComplete as boolean,\n\t\tIsvalid as boolean,\n\t\tLeadEmail as string,\n\t\tLeadPhone as string,\n\t\tLeadMobilePhone as string,\n\t\tNorwoodScale as string,\n\t\tLudwigScale as string,\n\t\tHairLossInFamily as string,\n\t\tHairLossProductUsed as string,\n\t\tHairLossSpot as string,\n\t\tGeographyKey as integer,\n\t\tLeadPostalCode as string,\n\t\tEthnicityKey as integer,\n\t\tLeadEthnicity as string,\n\t\tGenderKey as integer,\n\t\tLeadGender as string,\n\t\tCenterKey as integer,\n\t\tCenterNumber as string,\n\t\tLanguageKey as integer,\n\t\tLeadLanguage as string,\n\t\tStatusKey as integer,\n\t\tLeadStatus as string,\n\t\tLeadCreatedDate as timestamp,\n\t\tCreatedDateKey as integer,\n\t\tCreatedTimeKey as integer,\n\t\tLeadLastActivityDate as timestamp,\n\t\tLastActivityDateKey as integer,\n\t\tLastActivityTimekey as integer,\n\t\tDISCStyle as string,\n\t\tLeadMaritalStatus as string,\n\t\tLeadConsultReady as integer,\n\t\tConsultationFormReady as integer,\n\t\tIsDeleted as boolean,\n\t\tDoNotCall as boolean,\n\t\tDoNotContact as boolean,\n\t\tDoNotEmail as boolean,\n\t\tDoNotMail as boolean,\n\t\tDoNotText as boolean,\n\t\tCreateUser as string,\n\t\tUpdateUser as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tMaritalStatusKey as integer,\n\t\tLeadSource as string,\n\t\tSourceKey as integer,\n\t\tOriginalCommMethodkey as integer,\n\t\tRecentCommMethodKey as integer,\n\t\tCommunicationMethod as string,\n\t\tIsValidLeadName as boolean,\n\t\tIsValidLeadLastName as boolean,\n\t\tIsValidLeadFullName as boolean,\n\t\tIsValidLeadPhone as boolean,\n\t\tIsValidLeadMobilePhone as boolean,\n\t\tIsValidLeadEmail as boolean,\n\t\tReviewNeeded as boolean,\n\t\tConvertedContactId as string,\n\t\tConvertedAccountId as string,\n\t\tConvertedOpportunityId as string,\n\t\tConvertedDate as timestamp,\n\t\tLastModifiedDate as timestamp,\n\t\tSourceSystem as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tLeadExternalID as string,\n\t\tServiceTerritoryID as string,\n\t\tOriginalCampaignId as string,\n\t\tOriginalCampaignKey as integer,\n\t\tAccountID as string,\n\t\tLeadOccupation as string,\n\t\tOriginalCampaignSource as string,\n\t\tGCLID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> Dimlead\nsource(output(\n\t\tLeadKey as integer,\n\t\tLeadId as string,\n\t\tLeadName as string,\n\t\tLeadLastname as string,\n\t\tLeadFullName as string,\n\t\tLeadBirthday as date,\n\t\tLeadAddress as string,\n\t\tIsActive as integer,\n\t\tIsConsultFormComplete as integer,\n\t\tIsvalid as integer,\n\t\tIsReferral as integer,\n\t\tLeadScore as decimal(18,0),\n\t\tLeadEmail as string,\n\t\tLeadPhone as string,\n\t\tLeadMobilePhone as string,\n\t\tLeadAddress1 as string,\n\t\tNorwoodScale as string,\n\t\tLudwigScale as string,\n\t\tHairLossScaleKey as decimal(18,0),\n\t\tHairLossInFamily as string,\n\t\tHairLossProductUsed as string,\n\t\tHairLossSpot as string,\n\t\tSourceSystem as string,\n\t\tSegmentKey as decimal(18,0),\n\t\tGeographyKey as integer,\n\t\tLeadPostalCode as string,\n\t\tEthnicityKey as decimal(18,0),\n\t\tLeadEthnicity as string,\n\t\tGenderKey as decimal(18,0),\n\t\tLeadGender as string,\n\t\tOriginalCampaignKey as decimal(18,0),\n\t\tOriginalCampaignCode as string,\n\t\tOriginalSourceCode as string,\n\t\tCenterKey as decimal(18,0),\n\t\tCenterNumber as string,\n\t\tLanguageKey as decimal(18,0),\n\t\tLeadLanguage as string,\n\t\tStatusKey as decimal(18,0),\n\t\tLeadStatus as string,\n\t\tFunnelStepKey as decimal(18,0),\n\t\tLeadCreatedDate as timestamp,\n\t\tCreatedDateKey as integer,\n\t\tCreatedTimeKey as integer,\n\t\tRecentCampaignKey as integer,\n\t\tRecentCampaignCode as string,\n\t\tRecentSourceCode as string,\n\t\tLeadLastActivityDate as timestamp,\n\t\tLastActivityDateKey as integer,\n\t\tLastActivityTimekey as integer,\n\t\tDISCStyle as string,\n\t\tLeadMaritalStatus as string,\n\t\tLeadOccupation as string,\n\t\tLeadConsultReady as integer,\n\t\tConsultationFormReady as integer,\n\t\tDWHLoadDate as timestamp,\n\t\tDWHLastUpdateDate as timestamp,\n\t\tIsDeleted as boolean,\n\t\tDoNotCall as boolean,\n\t\tDoNotContact as boolean,\n\t\tDoNotEmail as boolean,\n\t\tDoNotMail as boolean,\n\t\tDoNotText as boolean,\n\t\tCreateUser as string,\n\t\tUpdateUser as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tOccupationKey as integer,\n\t\tMaritalStatusKey as integer,\n\t\tLeadSource as string,\n\t\tSourceKey as integer,\n\t\tFunnelStep as string,\n\t\tOriginalCommMethodkey as integer,\n\t\tRecentCommMethodKey as integer,\n\t\tCommunicationMethod as string,\n\t\tIsValidLeadName as boolean,\n\t\tIsValidLeadLastName as boolean,\n\t\tIsValidLeadFullName as boolean,\n\t\tIsValidLeadPhone as boolean,\n\t\tIsValidLeadMobilePhone as boolean,\n\t\tIsValidLeadEmail as boolean,\n\t\tReviewNeeded as boolean,\n\t\tConvertedContactId as string,\n\t\tConvertedAccountId as string,\n\t\tConvertedOpportunityId as string,\n\t\tConvertedDate as timestamp,\n\t\tReportCreateDate as timestamp,\n\t\tLastModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimLeadProd\nsource(output(\n\t\tStatusKey as integer,\n\t\tHash as string,\n\t\tStatusName as string,\n\t\tStatusGroup as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as integer,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimStatus\nsource(output(\n\t\tDateKey as integer,\n\t\tFullDate as date,\n\t\tISODate as string,\n\t\tYearNumber as integer,\n\t\tYearQuarterNumber as integer,\n\t\tYearMonthNumber as integer,\n\t\tYearQuarterMonthNumber as integer,\n\t\tYearWeekNumber as integer,\n\t\tDateName as string,\n\t\tWeekName as string,\n\t\tWeekNameWithYear as string,\n\t\tWeekShortName as string,\n\t\tWeekShortNameWithYear as string,\n\t\tWeekNumber as integer,\n\t\tFirstDateOfWeek as date,\n\t\tLastDateOfWeek as date,\n\t\tDayOfWeek as integer,\n\t\tDayOfWeekName as string,\n\t\tIsWeekday as boolean,\n\t\tIsWeekend as boolean,\n\t\tMonthName as string,\n\t\tMonthNameWithYear as string,\n\t\tMonthShortName as string,\n\t\tMonthShortNameWithYear as string,\n\t\tMonthNumber as integer,\n\t\tFirstDateOfMonth as date,\n\t\tLastDateOfMonth as date,\n\t\tDayOfMonth as integer,\n\t\tDayOfMonthName as string,\n\t\tIsLastDayOfMonth as boolean,\n\t\tQuarterName as string,\n\t\tQuarterNameWithYear as string,\n\t\tQuarterShortName as string,\n\t\tQuarterShortNameWithYear as string,\n\t\tQuarterNumber as integer,\n\t\tFirstDateOfQuarter as date,\n\t\tLastDateOfQuarter as date,\n\t\tDayOfQuarter as integer,\n\t\tDayOfQuarterName as string,\n\t\tHalfName as string,\n\t\tHalfNameWithYear as string,\n\t\tHalfShortName as string,\n\t\tHalfShortNameWithYear as string,\n\t\tHalfNumber as integer,\n\t\tYearHalfNumber as integer,\n\t\tFirstDateOfHalf as date,\n\t\tLastDateOfHalf as date,\n\t\tDayOfHalf as integer,\n\t\tDayOfHalfName as string,\n\t\tYearName as string,\n\t\tYearShortName as string,\n\t\tFirstDateOfYear as date,\n\t\tLastDateOfYear as date,\n\t\tDayOfYear as integer,\n\t\tDayOfYearName as string,\n\t\tCalendarQuarter as integer,\n\t\tCalendarYear as integer,\n\t\tCalendarYearMonth as string,\n\t\tCalendarYearQtr as string,\n\t\tFiscalYear as integer,\n\t\tFiscalWeek as integer,\n\t\tFiscalPeriod as integer,\n\t\tFiscalMonth as integer,\n\t\tFiscalQuarter as integer,\n\t\tFiscalYearFiscalWeek as integer,\n\t\tFiscalYearFiscalPeriod as integer,\n\t\tFiscalYearFiscalMonth as integer,\n\t\tFiscalYearFiscalQuarter as integer,\n\t\tFiscalYearFiscalQuarterFiscalMonth as integer,\n\t\tFiscalYearName as string,\n\t\tFiscalYearLongName as string,\n\t\tFiscalYearShortName as string,\n\t\tFiscalQuarterName as string,\n\t\tFiscalQuarterLongName as string,\n\t\tFiscalQuarterNameWithYear as string,\n\t\tFiscalQuarterLongNameWithYear as string,\n\t\tFiscalQuarterShortName as string,\n\t\tFiscalQuarterShortNameWithYear as string,\n\t\tFiscalMonthName as string,\n\t\tFiscalMonthNameWithYear as string,\n\t\tFiscalMonthShortName as string,\n\t\tFiscalMonthShortNameWithYear as string,\n\t\tFiscalMonthCalendarShortName as string,\n\t\tFiscalMonthCalendarShortNameWithYear as string,\n\t\tFiscalWeekName as string,\n\t\tFiscalWeekLongName as string,\n\t\tFiscalWeekNameWithYear as string,\n\t\tFiscalWeekLongNameWithYear as string,\n\t\tFiscalWeekShortName as string,\n\t\tFiscalWeekShortNameWithYear as string,\n\t\tFiscalPeriodName as string,\n\t\tFiscalPeriodLongName as string,\n\t\tFiscalPeriodNameWithYear as string,\n\t\tFiscalPeriodLongNameWithYear as string,\n\t\tFiscalPeriodShortName as string,\n\t\tFiscalPeriodShortNameWithYear as string,\n\t\tCummWorkdays as integer,\n\t\tMonthWorkdays as integer,\n\t\tMonthWorkdaysTotal as integer,\n\t\tIsHoliday as boolean,\n\t\tMonthOfQuarter as integer,\n\t\tBroadcastYearBroadcastQuarter as integer,\n\t\tBroadcastYearBroadcastMonth as integer,\n\t\tBroadcastYearBroadcastWeek as integer,\n\t\tBroadcastYearQtrMonthWeekDay as integer,\n\t\tBroadcastYearQtrMonth as integer,\n\t\tBroadcastYearShortName as string,\n\t\tBroadcastYearLongName as string,\n\t\tBroadcastYeartName as string,\n\t\tBroadcastQuarterName as string,\n\t\tBroadcastWeekName as string,\n\t\tBroadcastDayName as string,\n\t\tmsrepl_tran_version as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimDate\nsource(output(\n\t\tTimeOfDayKey as integer,\n\t\tTime as string,\n\t\tTime24 as string,\n\t\tTime24HM as string,\n\t\tHour as integer,\n\t\tHourC as integer,\n\t\tHourName as string,\n\t\tMinute as integer,\n\t\tMinuteC as integer,\n\t\tMinuteKey as integer,\n\t\tMinuteName as string,\n\t\tSecond as integer,\n\t\tHour24 as integer,\n\t\tAM as string,\n\t\t{30MinuteInterval} as integer,\n\t\tDayPart as string,\n\t\tTimeNumber as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimTimeOfDay\nsource(output(\n\t\tGeographyKey as integer,\n\t\tDigitZIPCode as string,\n\t\tLongitudeZIPCode as double,\n\t\tLatitudeZIPCode as double,\n\t\tZIPCodeClassification as string,\n\t\tNameOfCityOrORG as string,\n\t\tFIPSCode as integer,\n\t\tTwoLetterAbbrevForState as string,\n\t\tFullNameOfStateOrTerritory as string,\n\t\tFIPSCountyCode as integer,\n\t\tNameOfCounty as string,\n\t\tMetroStatisticalAreaCode as integer,\n\t\tSingleAreaCodeForZIPCode as integer,\n\t\tMultipleAreaCodesForZIPCode as string,\n\t\tTimeZoneForZIPCode as string,\n\t\tHrsDiff as integer,\n\t\tZIPCodeObeysDaylightSavings as boolean,\n\t\tUSPSPostOfficeName as string,\n\t\tUSPSAlternateNamesOfCity as string,\n\t\tLocalAlternateNamesOfCity as string,\n\t\tCleanCITYNameForGeocoding as string,\n\t\tCleanSTATENAMEForGeocoding as string,\n\t\tFIPSStateNumericCode as integer,\n\t\tName as string,\n\t\tDMADescription as string,\n\t\tDMAMarketRegion as string,\n\t\tDMACode as integer,\n\t\tDMANameNielsen as string,\n\t\tDMANameInternal as string,\n\t\tDMANameAlternate as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tSourceSystem as string,\n\t\tCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimGeography\nsource(output(\n\t\tEthnicityKey as integer,\n\t\tEthnicityName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimEthnicity\nsource(output(\n\t\tGenderKey as integer,\n\t\tGenderName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimGender\nsource(output(\n\t\tLanguageKey as integer,\n\t\tLanguageName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimLanguage\nsource(output(\n\t\tMaritalStatusKey as integer,\n\t\tMaritalStatusName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimMaritalStatus\nsource(output(\n\t\tCampaignKey as integer,\n\t\tCampaignId as string,\n\t\tCampaignName as string,\n\t\tCampaignDescription as string,\n\t\tAgencyKey as integer,\n\t\tAgencyName as string,\n\t\tCampaignStatus as string,\n\t\tStatusKey as integer,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tCurrencyIsoCode as string,\n\t\tCurrencyKey as integer,\n\t\tPromoCode as string,\n\t\tPromotioKey as integer,\n\t\tCampaignChannel as string,\n\t\tChannelKey as integer,\n\t\tCampaignLocation as string,\n\t\tCampaignLanguage as string,\n\t\tLanguageKey as integer,\n\t\tCampaignMedia as string,\n\t\tMediaKey as integer,\n\t\tCampaignSource as string,\n\t\tSourceKey as integer,\n\t\tCampaigngender as string,\n\t\tGenderKey as integer,\n\t\tCampaignType as string,\n\t\tBudgetedCost as decimal(38,18),\n\t\tActualCost as decimal(38,18),\n\t\tDNIS as string,\n\t\tReferrer as string,\n\t\tReferralFlag as boolean,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string,\n\t\tCampaignFormat as string,\n\t\tCampaignDeviceType as string,\n\t\tCampaignDNIS as string,\n\t\tCampaignTactic as string,\n\t\tCampaignPromoDescription as string,\n\t\tSourceCode as string,\n\t\tTollFreeName as string,\n\t\tTollFreeMobileName as string,\n\t\tTollFreeNumber as string,\n\t\tExternalID as string,\n\t\tIsDeleted as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimCampaign\nsource(output(\n\t\tId as string,\n\t\tOwnerId as string,\n\t\tIsDeleted as boolean,\n\t\tName as string,\n\t\tCurrencyIsoCode as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tParentTerritoryId as string,\n\t\tTopLevelTerritoryId as string,\n\t\tDescription as string,\n\t\tOperatingHoursId as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tIsActive as boolean,\n\t\tTypicalInTerritoryTravelTime as decimal(38,18),\n\t\tAlternative_Phone__c as string,\n\t\tAreaManager__c as string,\n\t\tArea__c as string,\n\t\tAssistantManager__c as string,\n\t\tBackLinePhone__c as string,\n\t\tBestTressedOffered__c as boolean,\n\t\tCaller_Id__c as string,\n\t\tCenterAlert__c as string,\n\t\tCenterNumber__c as string,\n\t\tCenterOwner__c as string,\n\t\tCenterType__c as string,\n\t\tCompanyID__c as string,\n\t\tCompany__c as string,\n\t\tConfirmationCallerIDEnglish__c as string,\n\t\tConfirmationCallerIDFrench__c as string,\n\t\tConfirmationCallerIDSpanish__c as string,\n\t\tCustomerServiceLine__c as string,\n\t\tDisplayName__c as string,\n\t\tExternal_Id__c as string,\n\t\tImageConsultant__c as string,\n\t\tMDPOffered__c as boolean,\n\t\tMDPPerformed__c as boolean,\n\t\tMain_Phone__c as string,\n\t\tManagerName__c as string,\n\t\tMap_Short_Link__c as string,\n\t\tMgrCellPhone__c as string,\n\t\tOfferPRP__c as boolean,\n\t\tOtherCallerIDEnglish__c as string,\n\t\tOtherCallerIDFrench__c as string,\n\t\tOtherCallerIDSpanish__c as string,\n\t\tOutboundDialingAllowed__c as boolean,\n\t\tProfileCode__c as string,\n\t\tRegion__c as string,\n\t\tStatus__c as string,\n\t\tSupported_Appointment_Types__c as string,\n\t\tSurgeryOffered__c as boolean,\n\t\tTimeZone__c as string,\n\t\tType__c as string,\n\t\tWebPhone__c as string,\n\t\tWeb_Phone__c as string,\n\t\tX1Apptperslot__c as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimServiceTerritory\nsource(output(\n\t\tCenterKey as integer,\n\t\tCenterID as integer,\n\t\tCenterPayGroupID as integer,\n\t\tCenterDescription as string,\n\t\tAddress1 as string,\n\t\tAddress2 as string,\n\t\tAddress3 as string,\n\t\tCenterGeographykey as integer,\n\t\tCenterPostalCode as string,\n\t\tCenterPhone1 as string,\n\t\tCenterPhone2 as string,\n\t\tCenterPhone3 as string,\n\t\tPhone1TypeID as integer,\n\t\tPhone2TypeID as integer,\n\t\tPhone3TypeID as integer,\n\t\tIsPhone1PrimaryFlag as boolean,\n\t\tIsPhone2PrimaryFlag as boolean,\n\t\tIsPhone3PrimaryFlag as boolean,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tLastUpdate as timestamp,\n\t\tUpdateStamp as string,\n\t\tCenterNumber as integer,\n\t\tCenterOwnershipID as integer,\n\t\tCenterOwnershipSortOrder as integer,\n\t\tCenterOwnershipDescription as string,\n\t\tCenterOwnershipDescriptionShort as string,\n\t\tOwnerLastName as string,\n\t\tOwnerFirstName as string,\n\t\tCorporateName as string,\n\t\tOwnershipAddress1 as string,\n\t\tOwnershipAddress2 as string,\n\t\tOwnershipGeographykey as integer,\n\t\tOwnershipPostalCode as string,\n\t\tCenterTypeID as integer,\n\t\tCenterTypeSortOrder as integer,\n\t\tCenterTypeDescription as string,\n\t\tCenterTypeDescriptionShort as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as integer,\n\t\tSourceSystem as string,\n\t\tTimeZoneID as integer,\n\t\tServiceTerritoryId as string,\n\t\tIsDeleted as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimCenter\nDimLeadProd, Dimlead exists(DimLeadProd@LeadId == LeadExternalID,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists2\nDimDate select(mapColumn(\n\t\tCreatedFullDate = FullDate,\n\t\tCreatedDateKey = DateKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCreatedDateKey\nDimDate select(mapColumn(\n\t\tActivityFullDate = FullDate,\n\t\tActivityDatekey = DateKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectActivityDatekey\nDimTimeOfDay select(mapColumn(\n\t\tTimeOfDayKeyCreated = TimeOfDayKey,\n\t\tHour = Hour24,\n\t\tMinute,\n\t\tSecond\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCreatedTimeOfDayKey\nDimTimeOfDay select(mapColumn(\n\t\tTimeOfDayKeyActivity = TimeOfDayKey,\n\t\tHour = Hour24,\n\t\tSecond,\n\t\tMinute\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ActivityTimeOfDayKey\nDimGeography select(mapColumn(\n\t\tGeographyKey,\n\t\tDigitZIPCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimGeography\nDimEthnicity select(mapColumn(\n\t\tEthnicityKey,\n\t\tEthnicityName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimEthnicity\nDimGender select(mapColumn(\n\t\tGenderKey,\n\t\tGenderName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimGender\nDimLanguage select(mapColumn(\n\t\tLanguageKey,\n\t\tLanguageName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimLanguage\nDimMaritalStatus select(mapColumn(\n\t\tMaritalStatusKey,\n\t\tMaritalStatusName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimMaritalStatus\nDimCampaign select(mapColumn(\n\t\tCampaignKeyDev = CampaignKey,\n\t\tCampaignIdDev = CampaignId,\n\t\tExternalID,\n\t\tCampaignSource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCampaign\nFilterStatus select(mapColumn(\n\t\tStatusKey,\n\t\tStatusName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectStatus\nExists2, SelectCreatedDateKey join(toDate(LeadCreatedDate) == CreatedFullDate,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCreatedDate\nJoinCreatedDate, SelectActivityDatekey join(toDate(toString(LeadLastActivityDate)) == ActivityFullDate,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinActivityDate\nJoinActivityDate, SelectCreatedTimeOfDayKey join(hour(LeadCreatedDate) == Hour\n\t&& minute(LeadCreatedDate) == Minute\n\t&& second(LeadCreatedDate) == Second,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCreatedTimeODay\nJoinCreatedTimeODay, ActivityTimeOfDayKey join(hour(LeadLastActivityDate) == ActivityTimeOfDayKey@Hour\n\t&& minute(LeadLastActivityDate) == ActivityTimeOfDayKey@Minute\n\t&& second(LeadLastActivityDate) == ActivityTimeOfDayKey@Second,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinActivityTimeOfDay\nJoinActivityTimeOfDay, SelectDimGeography join(LeadPostalCode == DigitZIPCode,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinGeography\nJoinGeography, SelectDimEthnicity join(LeadEthnicity == EthnicityName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinEthnicity\nJoinEthnicity, SelectDimGender join(LeadGender == GenderName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDimGender\nJoinDimGender, SelectDimLanguage join(LeadLanguage == LanguageName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinLanguage\nJoinLanguage, SelectDimMaritalStatus join(LeadMaritalStatus == MaritalStatusName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinMaritalStatus\nJoinMaritalStatus, SelectCampaign join(OriginalCampaignCode == ExternalID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCampaign\nJoinCampaign, SelectStatus join(lower(trim(LeadStatus)) == lower(trim(StatusName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinStatus\nJoinCenterNumberByNumber derive(CenterKeyDev = coalesce(CenterKeyByNumber,-1),\n\t\tGeographyKeyDev = coalesce(SelectDimGeography@GeographyKey,-1),\n\t\tEthnicityKeyDev = coalesce(SelectDimEthnicity@EthnicityKey,-1),\n\t\tGenderKeyDev = coalesce(SelectDimGender@GenderKey,-1),\n\t\tLanguageKeyDev = coalesce(SelectDimLanguage@LanguageKey,-1),\n\t\tStatusKeyDev = coalesce(SelectStatus@StatusKey,-1),\n\t\tMaritalStatusKeyDev = coalesce(SelectDimMaritalStatus@MaritalStatusKey,-1),\n\t\tSourceKeyDev = coalesce(SourceKey,-1),\n\t\tOriginalCommMethodkeyDev = -1,\n\t\tRecentCommMethodKeyDev = -1,\n\t\tOriginalCampaignKeyDev = coalesce(CampaignKeyDev,-1),\n\t\tIsActive = toBoolean(toString(IsActive)),\n\t\tIsConsultFormComplete = toBoolean(toString(IsConsultFormComplete)),\n\t\tIsValid = toBoolean(toString(Isvalid))) ~> DerivedColumn1\nDerivedColumn1 alterRow(upsertIf(true())) ~> AlterRow1\nDimStatus filter(lower(StatusGroup) == 'lead') ~> FilterStatus\nDimServiceTerritory select(mapColumn(\n\t\tServiceTerritoryID = Id,\n\t\tSTCenterNumber = CenterNumber__c\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectServiceTerritory\nFilterActiveCenter select(mapColumn(\n\t\tCenterKeyByNumber = CenterKey,\n\t\tCenterIDByNumber = CenterID,\n\t\tCenterNumberByNumber = CenterNumber,\n\t\tServiceTerritoryByIdNumber = ServiceTerritoryId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimCenterByNumber\nJoinStatus, SelectDimCenterByNumber join(CenterNumber == toString(CenterNumberByNumber),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCenterNumberByNumber\nDimCenter filter(IsDeleted == false() && IsActiveFlag == true()) ~> FilterActiveCenter\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tLeadKey as integer,\n\t\tLeadId as string,\n\t\tLeadFirstName as string,\n\t\tLeadLastname as string,\n\t\tLeadFullName as string,\n\t\tLeadBirthday as date,\n\t\tLeadAddress as string,\n\t\tIsActive as boolean,\n\t\tIsConsultFormComplete as boolean,\n\t\tIsvalid as boolean,\n\t\tLeadEmail as string,\n\t\tLeadPhone as string,\n\t\tLeadMobilePhone as string,\n\t\tNorwoodScale as string,\n\t\tLudwigScale as string,\n\t\tHairLossInFamily as string,\n\t\tHairLossProductUsed as string,\n\t\tHairLossSpot as string,\n\t\tGeographyKey as integer,\n\t\tLeadPostalCode as string,\n\t\tEthnicityKey as integer,\n\t\tLeadEthnicity as string,\n\t\tGenderKey as integer,\n\t\tLeadGender as string,\n\t\tCenterKey as integer,\n\t\tCenterNumber as string,\n\t\tLanguageKey as integer,\n\t\tLeadLanguage as string,\n\t\tStatusKey as integer,\n\t\tLeadStatus as string,\n\t\tLeadCreatedDate as timestamp,\n\t\tCreatedDateKey as integer,\n\t\tCreatedTimeKey as integer,\n\t\tLeadLastActivityDate as timestamp,\n\t\tLastActivityDateKey as integer,\n\t\tLastActivityTimekey as integer,\n\t\tDISCStyle as string,\n\t\tLeadMaritalStatus as string,\n\t\tLeadConsultReady as integer,\n\t\tConsultationFormReady as integer,\n\t\tIsDeleted as boolean,\n\t\tDoNotCall as boolean,\n\t\tDoNotContact as boolean,\n\t\tDoNotEmail as boolean,\n\t\tDoNotMail as boolean,\n\t\tDoNotText as boolean,\n\t\tCreateUser as string,\n\t\tUpdateUser as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tMaritalStatusKey as integer,\n\t\tLeadSource as string,\n\t\tSourceKey as integer,\n\t\tOriginalCommMethodkey as integer,\n\t\tRecentCommMethodKey as integer,\n\t\tCommunicationMethod as string,\n\t\tIsValidLeadName as boolean,\n\t\tIsValidLeadLastName as boolean,\n\t\tIsValidLeadFullName as boolean,\n\t\tIsValidLeadPhone as boolean,\n\t\tIsValidLeadMobilePhone as boolean,\n\t\tIsValidLeadEmail as boolean,\n\t\tReviewNeeded as boolean,\n\t\tConvertedContactId as string,\n\t\tConvertedAccountId as string,\n\t\tConvertedOpportunityId as string,\n\t\tConvertedDate as timestamp,\n\t\tLastModifiedDate as timestamp,\n\t\tSourceSystem as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tLeadExternalID as string,\n\t\tServiceTerritoryID as string,\n\t\tOriginalCampaignId as string,\n\t\tOriginalCampaignKey as integer,\n\t\tAccountID as string,\n\t\tLeadOccupation as string,\n\t\tOriginalCampaignSource as string,\n\t\tGCLID as string,\n\t\tRealCreatedDate as timestamp,\n\t\tIsDuplicateByEmail as boolean,\n\t\tIsDuplicateByName as boolean,\n\t\tReferralCode as string,\n\t\tReferralCodeExpirationDate as timestamp,\n\t\tPromotionCodeKey as integer,\n\t\tPromotionCode as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['LeadId'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tLeadId,\n\t\tLeadFirstName = LeadName,\n\t\tLeadLastname,\n\t\tLeadFullName,\n\t\tLeadBirthday,\n\t\tLeadAddress,\n\t\tIsActive,\n\t\tIsConsultFormComplete,\n\t\tIsvalid = DerivedColumn1@IsValid,\n\t\tLeadEmail,\n\t\tLeadPhone,\n\t\tLeadMobilePhone,\n\t\tNorwoodScale,\n\t\tLudwigScale,\n\t\tHairLossInFamily,\n\t\tHairLossProductUsed,\n\t\tHairLossSpot,\n\t\tGeographyKey = GeographyKeyDev,\n\t\tLeadPostalCode,\n\t\tEthnicityKey = EthnicityKeyDev,\n\t\tLeadEthnicity,\n\t\tGenderKey = GenderKeyDev,\n\t\tLeadGender,\n\t\tCenterKey = CenterKeyDev,\n\t\tCenterNumber,\n\t\tLanguageKey = LanguageKeyDev,\n\t\tLeadLanguage,\n\t\tStatusKey = StatusKeyDev,\n\t\tLeadStatus,\n\t\tLeadCreatedDate,\n\t\tCreatedDateKey = SelectCreatedDateKey@CreatedDateKey,\n\t\tCreatedTimeKey,\n\t\tLeadLastActivityDate,\n\t\tLastActivityDateKey,\n\t\tLastActivityTimekey,\n\t\tDISCStyle,\n\t\tLeadMaritalStatus,\n\t\tLeadConsultReady,\n\t\tConsultationFormReady,\n\t\tIsDeleted,\n\t\tDoNotCall,\n\t\tDoNotContact,\n\t\tDoNotEmail,\n\t\tDoNotMail,\n\t\tDoNotText,\n\t\tCreateUser,\n\t\tUpdateUser,\n\t\tCity,\n\t\tState,\n\t\tMaritalStatusKey = MaritalStatusKeyDev,\n\t\tLeadSource,\n\t\tSourceKey,\n\t\tOriginalCommMethodkey,\n\t\tRecentCommMethodKey,\n\t\tCommunicationMethod,\n\t\tIsValidLeadName,\n\t\tIsValidLeadLastName,\n\t\tIsValidLeadFullName,\n\t\tIsValidLeadPhone,\n\t\tIsValidLeadMobilePhone,\n\t\tIsValidLeadEmail,\n\t\tReviewNeeded,\n\t\tConvertedContactId,\n\t\tConvertedAccountId,\n\t\tConvertedOpportunityId,\n\t\tConvertedDate,\n\t\tLastModifiedDate,\n\t\tSourceSystem,\n\t\tDWH_CreatedDate = DWHLoadDate,\n\t\tDWH_LastUpdateDate = DWHLastUpdateDate,\n\t\tServiceTerritoryID = ServiceTerritoryByIdNumber,\n\t\tOriginalCampaignId = CampaignIdDev,\n\t\tOriginalCampaignKey = CampaignKeyDev,\n\t\tAccountID = ConvertedAccountId,\n\t\tLeadOccupation,\n\t\tOriginalCampaignSource = CampaignSource\n\t)) ~> InsertDimLead"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimCenter')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_Center",
                                "type": "DatasetReference"
                            },
                            "name": "ODSCenter"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_CenterOwnership",
                                "type": "DatasetReference"
                            },
                            "name": "ODSCenterOwnership"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_CenterType",
                                "type": "DatasetReference"
                            },
                            "name": "ODSCenterType"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimGeography",
                                "type": "DatasetReference"
                            },
                            "name": "DimGeography"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCenter",
                                "type": "DatasetReference"
                            },
                            "name": "SourceDimCenter"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_ServiceTerritory",
                                "type": "DatasetReference"
                            },
                            "name": "OdsServiceTerritory"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_cfgCenterManagementArea",
                                "type": "DatasetReference"
                            },
                            "name": "ODScfgCenterManagementArea"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCenter",
                                "type": "DatasetReference"
                            },
                            "name": "InsertDimCenter"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "CenterGeographyKey"
                        },
                        {
                            "name": "OwnershipGeographyKey"
                        },
                        {
                            "name": "SelectCenterGeographyKey"
                        },
                        {
                            "name": "SelectOwnershipGeographyKey"
                        },
                        {
                            "name": "SelectCenterColumns"
                        },
                        {
                            "name": "SelectCenterOwnershipColumns"
                        },
                        {
                            "name": "SelectCenterTypeColumns"
                        },
                        {
                            "name": "JoinCenterOwnership"
                        },
                        {
                            "name": "JoinCenterType"
                        },
                        {
                            "name": "JoinCenterOwnershipGeographyKey"
                        },
                        {
                            "name": "JoinCenterGeographyKey"
                        },
                        {
                            "name": "SelectDimCenterID"
                        },
                        {
                            "name": "FinalColumns"
                        },
                        {
                            "name": "AllowUpsert"
                        },
                        {
                            "name": "SelectServiceTerritoryColumns"
                        },
                        {
                            "name": "CenterManagementAreaName"
                        },
                        {
                            "name": "JoinCenterManagementArea"
                        },
                        {
                            "name": "JoinByCenterID"
                        },
                        {
                            "name": "SelectServiceTerritoryByID"
                        },
                        {
                            "name": "AddControlColumn"
                        },
                        {
                            "name": "JoinSelectFinalServiceTerritory"
                        },
                        {
                            "name": "SelectFinalServiceTerritory"
                        },
                        {
                            "name": "PostalCode"
                        }
                    ],
                    "script": "source(output(\n\t\tCenterID as integer,\n\t\tCountryID as integer,\n\t\tRegionID as integer,\n\t\tCenterPayGroupID as integer,\n\t\tCenterDescription as string,\n\t\tCenterTypeID as integer,\n\t\tCenterOwnershipID as integer,\n\t\tSurgeryHubCenterID as integer,\n\t\tReportingCenterID as integer,\n\t\tAliasSurgeryCenterID as integer,\n\t\tEmployeeDoctorGUID as string,\n\t\tDoctorRegionID as integer,\n\t\tTimeZoneID as integer,\n\t\tInvoiceCounter as integer,\n\t\tAddress1 as string,\n\t\tAddress2 as string,\n\t\tAddress3 as string,\n\t\tCity as string,\n\t\tStateID as integer,\n\t\tPostalCode as string,\n\t\tPhone1 as string,\n\t\tPhone2 as string,\n\t\tPhone3 as string,\n\t\tPhone1TypeID as integer,\n\t\tPhone2TypeID as integer,\n\t\tPhone3TypeID as integer,\n\t\tIsPhone1PrimaryFlag as boolean,\n\t\tIsPhone2PrimaryFlag as boolean,\n\t\tIsPhone3PrimaryFlag as boolean,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary,\n\t\tIsCorporateHeadquartersFlag as boolean,\n\t\tRegionRSMNBConsultantGuid as string,\n\t\tRegionRSMMembershipAdvisorGuid as string,\n\t\tRegionRTMTechnicalManagerGuid as string,\n\t\tCenterManagementAreaID as integer,\n\t\tCenterNumber as integer,\n\t\tBusinessUnitBrandID as integer,\n\t\tCenterDescriptionFullAlt1Calc as string,\n\t\tCenterDescriptionFullCalc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSCenter\nsource(output(\n\t\tCenterOwnershipID as integer,\n\t\tCenterOwnershipSortOrder as integer,\n\t\tCenterOwnershipDescription as string,\n\t\tCenterOwnershipDescriptionShort as string,\n\t\tOwnerLastName as string,\n\t\tOwnerFirstName as string,\n\t\tCorporateName as string,\n\t\tAddress1 as string,\n\t\tAddress2 as string,\n\t\tCity as string,\n\t\tStateID as integer,\n\t\tPostalCode as string,\n\t\tCountryID as integer,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tIsClientExperienceSurveyEnabled as boolean,\n\t\tClientExperienceSurveyDelayDays as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSCenterOwnership\nsource(output(\n\t\tCenterTypeID as integer,\n\t\tCenterTypeSortOrder as integer,\n\t\tCenterTypeDescription as string,\n\t\tCenterTypeDescriptionShort as string,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSCenterType\nsource(output(\n\t\tDigitZIPCode as string,\n\t\tLongitudeZIPCode as double,\n\t\tLatitudeZIPCode as double,\n\t\tZIPCodeClassification as string,\n\t\tNameOfCityOrORG as string,\n\t\tFIPSCode as integer,\n\t\tTwoLetterAbbrevForState as string,\n\t\tFullNameOfStateOrTerritory as string,\n\t\tFIPSCountyCode as integer,\n\t\tNameOfCounty as string,\n\t\tMetroStatisticalAreaCode as integer,\n\t\tSingleAreaCodeForZIPCode as integer,\n\t\tMultipleAreaCodesForZIPCode as string,\n\t\tTimeZoneForZIPCode as string,\n\t\tHrsDiff as integer,\n\t\tZIPCodeObeysDaylightSavings as boolean,\n\t\tUSPSPostOfficeName as string,\n\t\tUSPSAlternateNamesOfCity as string,\n\t\tLocalAlternateNamesOfCity as string,\n\t\tCleanCITYNameForGeocoding as string,\n\t\tCleanSTATENAMEForGeocoding as string,\n\t\tFIPSStateNumericCode as integer,\n\t\tName as string,\n\t\tDMADescription as string,\n\t\tDMAMarketRegion as string,\n\t\tDMACode as integer,\n\t\tDMANameNielsen as string,\n\t\tDMANameInternal as string,\n\t\tDMANameAlternate as string,\n\t\tGeographyKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimGeography\nsource(output(\n\t\tCenterKey as integer,\n\t\tCenterID as integer,\n\t\tCenterPayGroupID as integer,\n\t\tCenterDescription as string,\n\t\tAddress1 as string,\n\t\tAddress2 as string,\n\t\tAddress3 as string,\n\t\tCenterGeographykey as integer,\n\t\tCenterPostalCode as string,\n\t\tCenterPhone1 as string,\n\t\tCenterPhone2 as string,\n\t\tCenterPhone3 as string,\n\t\tPhone1TypeID as integer,\n\t\tPhone2TypeID as integer,\n\t\tPhone3TypeID as integer,\n\t\tIsPhone1PrimaryFlag as boolean,\n\t\tIsPhone2PrimaryFlag as boolean,\n\t\tIsPhone3PrimaryFlag as boolean,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tLastUpdate as timestamp,\n\t\tUpdateStamp as string,\n\t\tCenterNumber as integer,\n\t\tCenterOwnershipID as integer,\n\t\tCenterOwnershipSortOrder as integer,\n\t\tCenterOwnershipDescription as string,\n\t\tCenterOwnershipDescriptionShort as string,\n\t\tOwnerLastName as string,\n\t\tOwnerFirstName as string,\n\t\tCorporateName as string,\n\t\tOwnershipAddress1 as string,\n\t\tOwnershipAddress2 as string,\n\t\tOwnershipGeographykey as integer,\n\t\tOwnershipPostalCode as string,\n\t\tCenterTypeID as integer,\n\t\tCenterTypeSortOrder as integer,\n\t\tCenterTypeDescription as string,\n\t\tCenterTypeDescriptionShort as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as integer,\n\t\tSourceSystem as string,\n\t\tTimeZoneID as integer,\n\t\tServiceTerritoryId as string,\n\t\tIsDeleted as boolean,\n\t\tRegion1 as string,\n\t\tRegion2 as string,\n\t\tRegioAM as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SourceDimCenter\nsource(output(\n\t\tId as string,\n\t\tOwnerId as string,\n\t\tIsDeleted as boolean,\n\t\tName as string,\n\t\tCurrencyIsoCode as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tParentTerritoryId as string,\n\t\tTopLevelTerritoryId as string,\n\t\tDescription as string,\n\t\tOperatingHoursId as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tIsActive as boolean,\n\t\tTypicalInTerritoryTravelTime as decimal(38,18),\n\t\tAlternative_Phone__c as string,\n\t\tAreaManager__c as string,\n\t\tArea__c as string,\n\t\tAssistantManager__c as string,\n\t\tBackLinePhone__c as string,\n\t\tBestTressedOffered__c as boolean,\n\t\tCaller_Id__c as string,\n\t\tCenterAlert__c as string,\n\t\tCenterNumber__c as string,\n\t\tCenterOwner__c as string,\n\t\tCenterType__c as string,\n\t\tCompanyID__c as string,\n\t\tCompany__c as string,\n\t\tConfirmationCallerIDEnglish__c as string,\n\t\tConfirmationCallerIDFrench__c as string,\n\t\tConfirmationCallerIDSpanish__c as string,\n\t\tCustomerServiceLine__c as string,\n\t\tDisplayName__c as string,\n\t\tExternal_Id__c as string,\n\t\tImageConsultant__c as string,\n\t\tMDPOffered__c as boolean,\n\t\tMDPPerformed__c as boolean,\n\t\tMain_Phone__c as string,\n\t\tManagerName__c as string,\n\t\tMap_Short_Link__c as string,\n\t\tMgrCellPhone__c as string,\n\t\tOfferPRP__c as boolean,\n\t\tOtherCallerIDEnglish__c as string,\n\t\tOtherCallerIDFrench__c as string,\n\t\tOtherCallerIDSpanish__c as string,\n\t\tOutboundDialingAllowed__c as boolean,\n\t\tProfileCode__c as string,\n\t\tRegion__c as string,\n\t\tStatus__c as string,\n\t\tSupported_Appointment_Types__c as string,\n\t\tSurgeryOffered__c as boolean,\n\t\tTimeZone__c as string,\n\t\tType__c as string,\n\t\tWebPhone__c as string,\n\t\tWeb_Phone__c as string,\n\t\tX1Apptperslot__c as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> OdsServiceTerritory\nsource(output(\n\t\tCenterManagementAreaID as integer,\n\t\tCenterManagementAreaSortOrder as integer,\n\t\tCenterManagementAreaDescription as string,\n\t\tCenterManagementAreaDescriptionShort as string,\n\t\tOperationsManagerGUID as string,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: true) ~> ODScfgCenterManagementArea\nDimGeography derive(CenterGeographyKey = GeographyKey,\n\t\tCenterPostalCode = DigitZIPCode) ~> CenterGeographyKey\nDimGeography derive(OwnershipGeographyKey = GeographyKey,\n\t\tOwnershipPostalCode = DigitZIPCode) ~> OwnershipGeographyKey\nCenterGeographyKey select(mapColumn(\n\t\tCenterGeographyKey,\n\t\tCenterPostalCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCenterGeographyKey\nOwnershipGeographyKey select(mapColumn(\n\t\tOwnershipGeographyKey,\n\t\tOwnershipPostalCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOwnershipGeographyKey\nODSCenter select(mapColumn(\n\t\tCenterID,\n\t\tCenterPayGroupID,\n\t\tCenterDescription,\n\t\tAddress1,\n\t\tAddress2,\n\t\tAddress3,\n\t\tPostalCode,\n\t\tPhone1,\n\t\tPhone2,\n\t\tPhone3,\n\t\tPhone1TypeID,\n\t\tPhone2TypeID,\n\t\tPhone3TypeID,\n\t\tIsPhone1PrimaryFlag,\n\t\tIsPhone2PrimaryFlag,\n\t\tIsPhone3PrimaryFlag,\n\t\tIsActiveFlag,\n\t\tCreateDate,\n\t\tLastUpdate,\n\t\tUpdateStamp,\n\t\tCenterNumber,\n\t\tCenterOwnershipID,\n\t\tCenterTypeID,\n\t\tTimeZoneID,\n\t\tCenterManagementAreaID\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectCenterColumns\nODSCenterOwnership select(mapColumn(\n\t\tCenterOwnershipID,\n\t\tAddress1,\n\t\tAddress2,\n\t\tPostalCode,\n\t\tCenterOwnershipSortOrder,\n\t\tCenterOwnershipDescription,\n\t\tCenterOwnershipDescriptionShort,\n\t\tOwnerFirstName,\n\t\tOwnerLastName,\n\t\tCorporateName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectCenterOwnershipColumns\nODSCenterType select(mapColumn(\n\t\tCenterTypeID,\n\t\tCenterTypeSortOrder,\n\t\tCenterTypeDescription,\n\t\tCenterTypeDescriptionShort\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCenterTypeColumns\nJoinCenterManagementArea, SelectCenterOwnershipColumns join(SelectCenterColumns@CenterOwnershipID == SelectCenterOwnershipColumns@CenterOwnershipID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCenterOwnership\nJoinCenterOwnership, SelectCenterTypeColumns join(SelectCenterColumns@CenterTypeID == SelectCenterTypeColumns@CenterTypeID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCenterType\nJoinCenterType, SelectOwnershipGeographyKey join(SelectCenterOwnershipColumns@PostalCode == OwnershipPostalCode,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCenterOwnershipGeographyKey\nPostalCode, SelectCenterGeographyKey join(iif(length(replace(PostalCode, ' ',''))==6, left(PostalCode, 3), PostalCode) == CenterPostalCode,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCenterGeographyKey\nSourceDimCenter select(mapColumn(\n\t\tCenterID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimCenterID\nJoinByCenterID derive(CenterID = CenterID,\n\t\tCenterPayGroupID = CenterPayGroupID,\n\t\tCenterDescription = CenterDescription,\n\t\tAddress1 = SelectCenterColumns@Address1,\n\t\tAddress2 = SelectCenterColumns@Address2,\n\t\tAddress3 = Address3,\n\t\tCenterGeographykey = iifNull(CenterGeographyKey, -1),\n\t\tCenterPostalCode = CenterPostalCode,\n\t\tCenterPhone1 = Phone1,\n\t\tCenterPhone2 = Phone2,\n\t\tCenterPhone3 = Phone3,\n\t\tPhone1TypeID = Phone1TypeID,\n\t\tPhone2TypeID = Phone2TypeID,\n\t\tPhone3TypeID = Phone3TypeID,\n\t\tIsPhone1PrimaryFlag = IsPhone1PrimaryFlag,\n\t\tIsPhone2PrimaryFlag = IsPhone2PrimaryFlag,\n\t\tIsPhone3PrimaryFlag = IsPhone3PrimaryFlag,\n\t\tIsActiveFlag = IsActiveFlag,\n\t\tCreateDate = CreateDate,\n\t\tLastUpdate = LastUpdate,\n\t\tUpdateStamp = toString(UpdateStamp),\n\t\tCenterNumber = CenterNumber,\n\t\tCenterOwnershipID = iifNull(SelectCenterOwnershipColumns@CenterOwnershipID, -1),\n\t\tCenterOwnershipSortOrder = CenterOwnershipSortOrder,\n\t\tCenterOwnershipDescription = CenterOwnershipDescription,\n\t\tCenterOwnershipDescriptionShort = CenterOwnershipDescriptionShort,\n\t\tOwnerLastName = OwnerLastName,\n\t\tOwnerFirstName = OwnerFirstName,\n\t\tCorporateName = CorporateName,\n\t\tOwnershipAddress1 = SelectCenterOwnershipColumns@Address1,\n\t\tOwnershipAddress2 = SelectCenterOwnershipColumns@Address2,\n\t\tOwnershipGeographykey = iifNull(OwnershipGeographyKey, -1),\n\t\tOwnershipPostalCode = OwnershipPostalCode,\n\t\tCenterTypeID = iifNull(SelectCenterTypeColumns@CenterTypeID),\n\t\tCenterTypeSortOrder = CenterTypeSortOrder,\n\t\tCenterTypeDescription = CenterTypeDescription,\n\t\tCenterTypeDescriptionShort = CenterTypeDescriptionShort,\n\t\tDWH_LoadDate = currentTimestamp(),\n\t\tServiceTerritoryId = iifNull(ServiceTerritoryId, ServiceTerritoryIdById),\n\t\tSourceSystem = 'cONEct',\n\t\tIsDeleted = iifNull(IsDeleted, IsDeletedById),\n\t\tRegionAM = case( isNull(SelectCenterColumns@CenterManagementAreaID) && CenterID != 100 &&  like(toString(CenterID), '[78]%'), 'Area-Franchise', \r\n    case(CenterID == 100 , 'Area-Corporate', concat('Area-', CenterManagementAreaDescription) )\r\n    )) ~> FinalColumns\nFinalColumns alterRow(upsertIf(true())) ~> AllowUpsert\nOdsServiceTerritory select(mapColumn(\n\t\tServiceTerritoryId = Id,\n\t\tIsDeleted,\n\t\tCenterNumber__c,\n\t\tPostalCodeSLF = PostalCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectServiceTerritoryColumns\nODScfgCenterManagementArea select(mapColumn(\n\t\tCenterManagementAreaID,\n\t\tCenterManagementAreaDescription\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CenterManagementAreaName\nSelectCenterColumns, CenterManagementAreaName join(SelectCenterColumns@CenterManagementAreaID == CenterManagementAreaName@CenterManagementAreaID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCenterManagementArea\nJoinCenterGeographyKey, AddControlColumn join(CenterID == CenterNumber__cById\n\t&& iifNull(ServiceTerritoryId, '') == ServiceTerritoryControl,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinByCenterID\nOdsServiceTerritory select(mapColumn(\n\t\tServiceTerritoryIdById = Id,\n\t\tIsDeletedById = IsDeleted,\n\t\tCenterNumber__cById = CenterNumber__c\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectServiceTerritoryByID\nSelectServiceTerritoryByID derive(ServiceTerritoryControl = '',\n\t\tCenterNumber__cById = toInteger(CenterNumber__cById)) ~> AddControlColumn\nJoinCenterOwnershipGeographyKey, SelectFinalServiceTerritory join(CenterNumber == toInteger(CenterNumber__c),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSelectFinalServiceTerritory\nSelectServiceTerritoryColumns derive(PostalCodeSLF = iif(length(PostalCodeSLF) == 3, concat('00', PostalCodeSLF) ,\r\n    iif(length(PostalCodeSLF) == 4, concat('0', PostalCodeSLF) , PostalCodeSLF)\r\n)) ~> SelectFinalServiceTerritory\nJoinSelectFinalServiceTerritory derive(PostalCode = iifNull(\r\n    iif(like(SelectCenterColumns@PostalCode, '%-%') , left(SelectCenterColumns@PostalCode, 5),\r\n        iif(like(SelectCenterColumns@PostalCode, 'L5W0G9'), 'L5T0A3',SelectCenterColumns@PostalCode )\r\n        ), \r\n        PostalCodeSLF)) ~> PostalCode\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCenterKey as integer,\n\t\tCenterID as integer,\n\t\tCenterPayGroupID as integer,\n\t\tCenterDescription as string,\n\t\tAddress1 as string,\n\t\tAddress2 as string,\n\t\tAddress3 as string,\n\t\tCenterGeographykey as integer,\n\t\tCenterPostalCode as string,\n\t\tCenterPhone1 as string,\n\t\tCenterPhone2 as string,\n\t\tCenterPhone3 as string,\n\t\tPhone1TypeID as integer,\n\t\tPhone2TypeID as integer,\n\t\tPhone3TypeID as integer,\n\t\tIsPhone1PrimaryFlag as boolean,\n\t\tIsPhone2PrimaryFlag as boolean,\n\t\tIsPhone3PrimaryFlag as boolean,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tLastUpdate as timestamp,\n\t\tUpdateStamp as string,\n\t\tCenterNumber as integer,\n\t\tCenterOwnershipID as integer,\n\t\tCenterOwnershipSortOrder as integer,\n\t\tCenterOwnershipDescription as string,\n\t\tCenterOwnershipDescriptionShort as string,\n\t\tOwnerLastName as string,\n\t\tOwnerFirstName as string,\n\t\tCorporateName as string,\n\t\tOwnershipAddress1 as string,\n\t\tOwnershipAddress2 as string,\n\t\tOwnershipGeographykey as integer,\n\t\tOwnershipPostalCode as string,\n\t\tCenterTypeID as integer,\n\t\tCenterTypeSortOrder as integer,\n\t\tCenterTypeDescription as string,\n\t\tCenterTypeDescriptionShort as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as integer,\n\t\tSourceSystem as string,\n\t\tTimeZoneID as integer,\n\t\tServiceTerritoryId as string,\n\t\tIsDeleted as boolean,\n\t\tRegion1 as string,\n\t\tRegion2 as string,\n\t\tRegioAM as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['CenterID'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCenterID,\n\t\tCenterPayGroupID,\n\t\tCenterDescription,\n\t\tAddress1,\n\t\tAddress2,\n\t\tAddress3,\n\t\tCenterGeographykey = FinalColumns@CenterGeographykey,\n\t\tCenterPostalCode,\n\t\tCenterPhone1,\n\t\tCenterPhone2,\n\t\tCenterPhone3,\n\t\tPhone1TypeID,\n\t\tPhone2TypeID,\n\t\tPhone3TypeID,\n\t\tIsPhone1PrimaryFlag,\n\t\tIsPhone2PrimaryFlag,\n\t\tIsPhone3PrimaryFlag,\n\t\tIsActiveFlag,\n\t\tCreateDate,\n\t\tLastUpdate,\n\t\tCenterNumber,\n\t\tCenterOwnershipID,\n\t\tCenterOwnershipSortOrder,\n\t\tCenterOwnershipDescription,\n\t\tCenterOwnershipDescriptionShort,\n\t\tOwnerLastName,\n\t\tOwnerFirstName,\n\t\tCorporateName,\n\t\tOwnershipAddress1,\n\t\tOwnershipAddress2,\n\t\tOwnershipGeographykey = FinalColumns@OwnershipGeographykey,\n\t\tOwnershipPostalCode,\n\t\tCenterTypeID,\n\t\tCenterTypeSortOrder,\n\t\tCenterTypeDescription,\n\t\tCenterTypeDescriptionShort,\n\t\tDWH_LoadDate,\n\t\tSourceSystem,\n\t\tTimeZoneID,\n\t\tServiceTerritoryId,\n\t\tIsDeleted,\n\t\tRegioAM = RegionAM\n\t)) ~> InsertDimCenter"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ODSCampaignMember')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/ODS"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_SF_CampaignMember",
                                "type": "DatasetReference"
                            },
                            "name": "CampaignMemberParquet"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_CampaignMember",
                                "type": "DatasetReference"
                            },
                            "name": "UpsertOdsCapaignMember"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AllowUpsert"
                        }
                    ],
                    "script": "source(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tCampaignId as string,\n\t\tLeadId as string,\n\t\tContactId as string,\n\t\tStatus as string,\n\t\tHasResponded as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tFirstRespondedDate as timestamp,\n\t\tCurrencyIsoCode as string,\n\t\tSalutation as string,\n\t\tName as string,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tTitle as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tEmail as string,\n\t\tPhone as string,\n\t\tFax as string,\n\t\tMobilePhone as string,\n\t\tDescription as string,\n\t\tDoNotCall as boolean,\n\t\tHasOptedOutOfEmail as boolean,\n\t\tHasOptedOutOfFax as boolean,\n\t\tLeadSource as string,\n\t\tCompanyOrAccount as string,\n\t\tType as string,\n\t\tLeadOrContactId as string,\n\t\tLeadOrContactOwnerId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> CampaignMemberParquet\nCampaignMemberParquet alterRow(upsertIf(true())) ~> AllowUpsert\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tCampaignId as string,\n\t\tLeadId as string,\n\t\tContactId as string,\n\t\tStatus as string,\n\t\tHasResponded as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tFirstRespondedDate as timestamp,\n\t\tCurrencyIsoCode as string,\n\t\tSalutation as string,\n\t\tName as string,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tTitle as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tEmail as string,\n\t\tPhone as string,\n\t\tFax as string,\n\t\tMobilePhone as string,\n\t\tDescription as string,\n\t\tDoNotCall as boolean,\n\t\tHasOptedOutOfEmail as boolean,\n\t\tHasOptedOutOfFax as boolean,\n\t\tLeadSource as string,\n\t\tCompanyOrAccount as string,\n\t\tType as string,\n\t\tLeadOrContactId as string,\n\t\tLeadOrContactOwnerId as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Id'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tId,\n\t\tIsDeleted,\n\t\tCampaignId,\n\t\tLeadId,\n\t\tContactId,\n\t\tStatus,\n\t\tHasResponded,\n\t\tCreatedDate,\n\t\tCreatedById,\n\t\tLastModifiedDate,\n\t\tLastModifiedById,\n\t\tSystemModstamp,\n\t\tFirstRespondedDate,\n\t\tCurrencyIsoCode,\n\t\tSalutation,\n\t\tName,\n\t\tFirstName,\n\t\tLastName,\n\t\tTitle,\n\t\tStreet,\n\t\tCity,\n\t\tState,\n\t\tPostalCode,\n\t\tCountry,\n\t\tEmail,\n\t\tPhone,\n\t\tFax,\n\t\tMobilePhone,\n\t\tDescription,\n\t\tDoNotCall,\n\t\tHasOptedOutOfEmail,\n\t\tHasOptedOutOfFax,\n\t\tLeadSource,\n\t\tCompanyOrAccount,\n\t\tType,\n\t\tLeadOrContactId,\n\t\tLeadOrContactOwnerId\n\t)) ~> UpsertOdsCapaignMember"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ODSProduct')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/ODS"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_SF_Product",
                                "type": "DatasetReference"
                            },
                            "name": "ProductParquet"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Product",
                                "type": "DatasetReference"
                            },
                            "name": "UpsertOdsProduct"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AllowUpsert"
                        }
                    ],
                    "script": "source(output(\n\t\tId as string,\n\t\tName as string,\n\t\tProductCode as string,\n\t\tDescription as string,\n\t\tIsActive as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tFamily as string,\n\t\tCurrencyIsoCode as string,\n\t\tExternalDataSourceId as string,\n\t\tExternalId as string,\n\t\tDisplayUrl as string,\n\t\tQuantityUnitOfMeasure as string,\n\t\tIsDeleted as boolean,\n\t\tIsArchived as boolean,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tStockKeepingUnit as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> ProductParquet\nProductParquet alterRow(upsertIf(true())) ~> AllowUpsert\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tId as string,\n\t\tName as string,\n\t\tProductCode as string,\n\t\tDescription as string,\n\t\tIsActive as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tFamily as string,\n\t\tCurrencyIsoCode as string,\n\t\tExternalDataSourceId as string,\n\t\tExternalId as string,\n\t\tDisplayUrl as string,\n\t\tQuantityUnitOfMeasure as string,\n\t\tIsDeleted as boolean,\n\t\tIsArchived as boolean,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tStockKeepingUnit as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Id'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tId,\n\t\tName,\n\t\tProductCode,\n\t\tDescription,\n\t\tIsActive,\n\t\tCreatedDate,\n\t\tCreatedById,\n\t\tLastModifiedDate,\n\t\tLastModifiedById,\n\t\tSystemModstamp,\n\t\tFamily,\n\t\tCurrencyIsoCode,\n\t\tExternalDataSourceId,\n\t\tExternalId,\n\t\tDisplayUrl,\n\t\tQuantityUnitOfMeasure,\n\t\tIsDeleted,\n\t\tIsArchived,\n\t\tLastViewedDate,\n\t\tLastReferencedDate,\n\t\tStockKeepingUnit\n\t)) ~> UpsertOdsProduct"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ODSServiceAppointment')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/ODS"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_SF_ServiceAppointment",
                                "type": "DatasetReference"
                            },
                            "name": "ServiceAppointmentParquet"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_ServiceAppointment",
                                "type": "DatasetReference"
                            },
                            "name": "UpsertOdsServiceAppointment"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AllowUpsert"
                        }
                    ],
                    "script": "source(output(\n\t\tId as string,\n\t\tOwnerId as string,\n\t\tIsDeleted as boolean,\n\t\tAppointmentNumber as string,\n\t\tCurrencyIsoCode as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tParentRecordId as string,\n\t\tParentRecordType as string,\n\t\tAccountId as string,\n\t\tWorkTypeId as string,\n\t\tContactId as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tDescription as string,\n\t\tEarliestStartTime as timestamp,\n\t\tDueDate as timestamp,\n\t\tDuration as decimal(38,18),\n\t\tArrivalWindowStartTime as timestamp,\n\t\tArrivalWindowEndTime as timestamp,\n\t\tStatus as string,\n\t\tSchedStartTime as timestamp,\n\t\tSchedEndTime as timestamp,\n\t\tActualStartTime as timestamp,\n\t\tActualEndTime as timestamp,\n\t\tActualDuration as decimal(38,18),\n\t\tDurationType as string,\n\t\tDurationInMinutes as decimal(38,18),\n\t\tServiceTerritoryId as string,\n\t\tSubject as string,\n\t\tParentRecordStatusCategory as string,\n\t\tStatusCategory as string,\n\t\tServiceNote as string,\n\t\tAppointmentType as string,\n\t\tEmail as string,\n\t\tPhone as string,\n\t\tCancellationReason as string,\n\t\tAdditionalInformation as string,\n\t\tComments as string,\n\t\tCenter_Type__c as string,\n\t\tExternal_Id__c as string,\n\t\tService_Appointment__c as string,\n\t\tWork_Type_Group__c as string,\n\t\tAppointment_Type__c as string,\n\t\tMeeting_Platform_Id__c as string,\n\t\tMeeting_Platform__c as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> ServiceAppointmentParquet\nServiceAppointmentParquet alterRow(upsertIf(true())) ~> AllowUpsert\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tId as string,\n\t\tOwnerId as string,\n\t\tIsDeleted as boolean,\n\t\tAppointmentNumber as string,\n\t\tCurrencyIsoCode as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tParentRecordId as string,\n\t\tParentRecordType as string,\n\t\tAccountId as string,\n\t\tWorkTypeId as string,\n\t\tContactId as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tDescription as string,\n\t\tEarliestStartTime as timestamp,\n\t\tDueDate as timestamp,\n\t\tDuration as decimal(38,18),\n\t\tArrivalWindowStartTime as timestamp,\n\t\tArrivalWindowEndTime as timestamp,\n\t\tStatus as string,\n\t\tSchedStartTime as timestamp,\n\t\tSchedEndTime as timestamp,\n\t\tActualStartTime as timestamp,\n\t\tActualEndTime as timestamp,\n\t\tActualDuration as decimal(38,18),\n\t\tDurationType as string,\n\t\tDurationInMinutes as decimal(38,18),\n\t\tServiceTerritoryId as string,\n\t\tSubject as string,\n\t\tParentRecordStatusCategory as string,\n\t\tStatusCategory as string,\n\t\tServiceNote as string,\n\t\tAppointmentType as string,\n\t\tEmail as string,\n\t\tPhone as string,\n\t\tCancellationReason as string,\n\t\tAdditionalInformation as string,\n\t\tComments as string,\n\t\tCenter_Type__c as string,\n\t\tExternal_Id__c as string,\n\t\tService_Appointment__c as string,\n\t\tWork_Type_Group__c as string,\n\t\tAppointment_Type__c as string,\n\t\tMeeting_Platform_Id__c as string,\n\t\tMeeting_Platform__c as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Id'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tId,\n\t\tOwnerId,\n\t\tIsDeleted,\n\t\tAppointmentNumber,\n\t\tCurrencyIsoCode,\n\t\tCreatedDate,\n\t\tCreatedById,\n\t\tLastModifiedDate,\n\t\tLastModifiedById,\n\t\tSystemModstamp,\n\t\tLastViewedDate,\n\t\tLastReferencedDate,\n\t\tParentRecordId,\n\t\tParentRecordType,\n\t\tAccountId,\n\t\tWorkTypeId,\n\t\tContactId,\n\t\tStreet,\n\t\tCity,\n\t\tState,\n\t\tPostalCode,\n\t\tCountry,\n\t\tStateCode,\n\t\tCountryCode,\n\t\tLatitude,\n\t\tLongitude,\n\t\tGeocodeAccuracy,\n\t\tDescription,\n\t\tEarliestStartTime,\n\t\tDueDate,\n\t\tDuration,\n\t\tArrivalWindowStartTime,\n\t\tArrivalWindowEndTime,\n\t\tStatus,\n\t\tSchedStartTime,\n\t\tSchedEndTime,\n\t\tActualStartTime,\n\t\tActualEndTime,\n\t\tActualDuration,\n\t\tDurationType,\n\t\tDurationInMinutes,\n\t\tServiceTerritoryId,\n\t\tSubject,\n\t\tParentRecordStatusCategory,\n\t\tStatusCategory,\n\t\tServiceNote,\n\t\tAppointmentType,\n\t\tEmail,\n\t\tPhone,\n\t\tCancellationReason,\n\t\tAdditionalInformation,\n\t\tComments,\n\t\tCenter_Type__c,\n\t\tExternal_Id__c,\n\t\tService_Appointment__c,\n\t\tWork_Type_Group__c,\n\t\tAppointment_Type__c,\n\t\tMeeting_Platform_Id__c,\n\t\tMeeting_Platform__c\n\t)) ~> UpsertOdsServiceAppointment"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ODSLead')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/ODS"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_SF_Leads",
                                "type": "DatasetReference"
                            },
                            "name": "LeadParquet"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Lead",
                                "type": "DatasetReference"
                            },
                            "name": "UpsertOdsLead"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AllowUpsert"
                        }
                    ],
                    "script": "source(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tMasterRecordId as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tSalutation as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tName as string,\n\t\tRecordTypeId as string,\n\t\tTitle as string,\n\t\tCompany as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tPhone as string,\n\t\tMobilePhone as string,\n\t\tFax as string,\n\t\tEmail as string,\n\t\tWebsite as string,\n\t\tPhotoUrl as string,\n\t\tDescription as string,\n\t\tLeadSource as string,\n\t\tStatus as string,\n\t\tIndustry as string,\n\t\tRating as string,\n\t\tCurrencyIsoCode as string,\n\t\tAnnualRevenue as decimal(38,18),\n\t\tNumberOfEmployees as integer,\n\t\tOwnerId as string,\n\t\tHasOptedOutOfEmail as boolean,\n\t\tIsConverted as boolean,\n\t\tConvertedDate as timestamp,\n\t\tConvertedAccountId as string,\n\t\tConvertedContactId as string,\n\t\tConvertedOpportunityId as string,\n\t\tIsUnreadByOwner as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tDoNotCall as boolean,\n\t\tHasOptedOutOfFax as boolean,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tLastTransferDate as timestamp,\n\t\tJigsaw as string,\n\t\tJigsawContactId as string,\n\t\tEmailBouncedReason as string,\n\t\tEmailBouncedDate as timestamp,\n\t\tet4ae5__HasOptedOutOfMobile__c as boolean,\n\t\tet4ae5__Mobile_Country_Code__c as string,\n\t\tAge__c as decimal(38,18),\n\t\tBirthdate__c as timestamp,\n\t\tCancellation_Reason__c as string,\n\t\tDoNotContact__c as boolean,\n\t\tDoNotEmail__c as boolean,\n\t\tDoNotMail__c as boolean,\n\t\tDoNotText__c as boolean,\n\t\tEthnicity__c as string,\n\t\tExternal_Id__c as string,\n\t\tGender__c as string,\n\t\tHairLossExperience__c as string,\n\t\tHairLossFamily__c as string,\n\t\tHairLossOrVolume__c as string,\n\t\tHairLossProductOther__c as string,\n\t\tHairLossProductUsed__c as string,\n\t\tHairLossSpot__c as string,\n\t\tHardCopyPreferred__c as boolean,\n\t\tLanguage__c as string,\n\t\tLead_Qualifier__c as string,\n\t\tLead_Rescheduler__c as string,\n\t\tLudwigScale__c as string,\n\t\tMaritalStatus__c as string,\n\t\tMobilePhone_Number_Normalized__c as string,\n\t\tNorwoodScale__c as string,\n\t\tPromo_Code__c as string,\n\t\tReferral_Code_Expiration_Date__c as timestamp,\n\t\tReferral_Code__c as string,\n\t\tService_Territory__c as string,\n\t\tSolutionOffered__c as string,\n\t\tText_Reminer_Opt_In__c as boolean,\n\t\tOccupation__c as string,\n\t\tAmmount__c as decimal(38,18),\n\t\tDNCDateMobilePhone__c as timestamp,\n\t\tDNCDatePhone__c as timestamp,\n\t\tDNCValidationMobilePhone__c as boolean,\n\t\tDNCValidationPhone__c as boolean,\n\t\tGCLID__c as string,\n\t\tGoals_Expectations__c as string,\n\t\tHow_many_times_a_week_do_you_think__c as string,\n\t\tHow_much_time_a_week_do_you_spend__c as string,\n\t\tOther_Reason__c as string,\n\t\tWhat_are_your_main_concerns_today__c as string,\n\t\tWhat_else_would_be_helpful_for_your__c as string,\n\t\tWhat_methods_have_you_used_or_currently__c as string,\n\t\tRefersionLogId__c as string,\n\t\tService_Territory_Time_Zone__c as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> LeadParquet\nLeadParquet alterRow(upsertIf(true())) ~> AllowUpsert\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tMasterRecordId as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tSalutation as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tName as string,\n\t\tRecordTypeId as string,\n\t\tTitle as string,\n\t\tCompany as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tPhone as string,\n\t\tMobilePhone as string,\n\t\tFax as string,\n\t\tEmail as string,\n\t\tWebsite as string,\n\t\tPhotoUrl as string,\n\t\tDescription as string,\n\t\tLeadSource as string,\n\t\tStatus as string,\n\t\tIndustry as string,\n\t\tRating as string,\n\t\tCurrencyIsoCode as string,\n\t\tAnnualRevenue as decimal(38,18),\n\t\tNumberOfEmployees as integer,\n\t\tOwnerId as string,\n\t\tHasOptedOutOfEmail as boolean,\n\t\tIsConverted as boolean,\n\t\tConvertedDate as timestamp,\n\t\tConvertedAccountId as string,\n\t\tConvertedContactId as string,\n\t\tConvertedOpportunityId as string,\n\t\tIsUnreadByOwner as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tDoNotCall as boolean,\n\t\tHasOptedOutOfFax as boolean,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tLastTransferDate as timestamp,\n\t\tJigsaw as string,\n\t\tJigsawContactId as string,\n\t\tEmailBouncedReason as string,\n\t\tEmailBouncedDate as timestamp,\n\t\tet4ae5__HasOptedOutOfMobile__c as boolean,\n\t\tet4ae5__Mobile_Country_Code__c as string,\n\t\tDisc__c as string,\n\t\tDoNotContact__c as boolean,\n\t\tDoNotEmail__c as boolean,\n\t\tDoNotMail__c as boolean,\n\t\tDoNotText__c as boolean,\n\t\tEthnicity__c as string,\n\t\tExternal_Id__c as string,\n\t\tGender__c as string,\n\t\tHairLossExperience__c as string,\n\t\tHairLossFamily__c as string,\n\t\tHairLossOrVolume__c as string,\n\t\tHairLossProductOther__c as string,\n\t\tHairLossProductUsed__c as string,\n\t\tHairLossSpot__c as string,\n\t\tHardCopyPreferred__c as boolean,\n\t\tLanguage__c as string,\n\t\tLudwigScale__c as string,\n\t\tMaritalStatus__c as string,\n\t\tNorwoodScale__c as string,\n\t\tReferral_Code_Expiration_Date__c as timestamp,\n\t\tReferral_Code__c as string,\n\t\tService_Territory__c as string,\n\t\tSolutionOffered__c as string,\n\t\tText_Reminer_Opt_In__c as boolean,\n\t\tAge__c as decimal(38,18),\n\t\tBirthdate__c as timestamp,\n\t\tLead_Qualifier__c as string,\n\t\tLead_Rescheduler__c as string,\n\t\tPromo_Code__c as string,\n\t\tGCLID__c as string,\n\t\tOccupation__c as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Id'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tId,\n\t\tIsDeleted,\n\t\tMasterRecordId,\n\t\tLastName,\n\t\tFirstName,\n\t\tSalutation,\n\t\tMiddleName,\n\t\tSuffix,\n\t\tName,\n\t\tRecordTypeId,\n\t\tTitle,\n\t\tCompany,\n\t\tStreet,\n\t\tCity,\n\t\tState,\n\t\tPostalCode,\n\t\tCountry,\n\t\tStateCode,\n\t\tCountryCode,\n\t\tLatitude,\n\t\tLongitude,\n\t\tGeocodeAccuracy,\n\t\tPhone,\n\t\tMobilePhone,\n\t\tFax,\n\t\tEmail,\n\t\tWebsite,\n\t\tPhotoUrl,\n\t\tDescription,\n\t\tLeadSource,\n\t\tStatus,\n\t\tIndustry,\n\t\tRating,\n\t\tCurrencyIsoCode,\n\t\tAnnualRevenue,\n\t\tNumberOfEmployees,\n\t\tOwnerId,\n\t\tHasOptedOutOfEmail,\n\t\tIsConverted,\n\t\tConvertedDate,\n\t\tConvertedAccountId,\n\t\tConvertedContactId,\n\t\tConvertedOpportunityId,\n\t\tIsUnreadByOwner,\n\t\tCreatedDate,\n\t\tCreatedById,\n\t\tLastModifiedDate,\n\t\tLastModifiedById,\n\t\tSystemModstamp,\n\t\tLastActivityDate,\n\t\tDoNotCall,\n\t\tHasOptedOutOfFax,\n\t\tLastViewedDate,\n\t\tLastReferencedDate,\n\t\tLastTransferDate,\n\t\tJigsaw,\n\t\tJigsawContactId,\n\t\tEmailBouncedReason,\n\t\tEmailBouncedDate,\n\t\tet4ae5__HasOptedOutOfMobile__c,\n\t\tet4ae5__Mobile_Country_Code__c,\n\t\tDoNotContact__c,\n\t\tDoNotEmail__c,\n\t\tDoNotMail__c,\n\t\tDoNotText__c,\n\t\tEthnicity__c,\n\t\tExternal_Id__c,\n\t\tGender__c,\n\t\tHairLossExperience__c,\n\t\tHairLossFamily__c,\n\t\tHairLossOrVolume__c,\n\t\tHairLossProductOther__c,\n\t\tHairLossProductUsed__c,\n\t\tHairLossSpot__c,\n\t\tHardCopyPreferred__c,\n\t\tLanguage__c,\n\t\tLudwigScale__c,\n\t\tMaritalStatus__c,\n\t\tNorwoodScale__c,\n\t\tReferral_Code_Expiration_Date__c,\n\t\tReferral_Code__c,\n\t\tService_Territory__c,\n\t\tSolutionOffered__c,\n\t\tText_Reminer_Opt_In__c,\n\t\tAge__c,\n\t\tBirthdate__c,\n\t\tLead_Qualifier__c,\n\t\tLead_Rescheduler__c,\n\t\tPromo_Code__c,\n\t\tGCLID__c,\n\t\tOccupation__c\n\t)) ~> UpsertOdsLead"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimSource')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Lead",
                                "type": "DatasetReference"
                            },
                            "name": "ODSLead"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimSource",
                                "type": "DatasetReference"
                            },
                            "name": "DimSource"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Account",
                                "type": "DatasetReference"
                            },
                            "name": "ODSAccount"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimSource",
                                "type": "DatasetReference"
                            },
                            "name": "InsertDimSource"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SelectHash"
                        },
                        {
                            "name": "SelectLeadSource"
                        },
                        {
                            "name": "FilterLastModifiedLead"
                        },
                        {
                            "name": "DistinctLeadSource"
                        },
                        {
                            "name": "AddCustomColumnsLead"
                        },
                        {
                            "name": "AddHash"
                        },
                        {
                            "name": "DoesNotExist"
                        },
                        {
                            "name": "FilterLastModifiedAccount"
                        },
                        {
                            "name": "SelectAccountSource"
                        },
                        {
                            "name": "DistinctAccountSource"
                        },
                        {
                            "name": "UnionAccount"
                        },
                        {
                            "name": "DistinctHash"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tMasterRecordId as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tSalutation as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tName as string,\n\t\tRecordTypeId as string,\n\t\tTitle as string,\n\t\tCompany as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tPhone as string,\n\t\tMobilePhone as string,\n\t\tFax as string,\n\t\tEmail as string,\n\t\tWebsite as string,\n\t\tPhotoUrl as string,\n\t\tDescription as string,\n\t\tLeadSource as string,\n\t\tStatus as string,\n\t\tIndustry as string,\n\t\tRating as string,\n\t\tCurrencyIsoCode as string,\n\t\tAnnualRevenue as decimal(38,18),\n\t\tNumberOfEmployees as integer,\n\t\tOwnerId as string,\n\t\tHasOptedOutOfEmail as boolean,\n\t\tIsConverted as boolean,\n\t\tConvertedDate as timestamp,\n\t\tConvertedAccountId as string,\n\t\tConvertedContactId as string,\n\t\tConvertedOpportunityId as string,\n\t\tIsUnreadByOwner as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tDoNotCall as boolean,\n\t\tHasOptedOutOfFax as boolean,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tLastTransferDate as timestamp,\n\t\tJigsaw as string,\n\t\tJigsawContactId as string,\n\t\tEmailBouncedReason as string,\n\t\tEmailBouncedDate as timestamp,\n\t\tet4ae5__HasOptedOutOfMobile__c as boolean,\n\t\tet4ae5__Mobile_Country_Code__c as string,\n\t\tDisc__c as string,\n\t\tDoNotContact__c as boolean,\n\t\tDoNotEmail__c as boolean,\n\t\tDoNotMail__c as boolean,\n\t\tDoNotText__c as boolean,\n\t\tEthnicity__c as string,\n\t\tExternal_Id__c as string,\n\t\tGender__c as string,\n\t\tHairLossExperience__c as string,\n\t\tHairLossFamily__c as string,\n\t\tHairLossOrVolume__c as string,\n\t\tHairLossProductOther__c as string,\n\t\tHairLossProductUsed__c as string,\n\t\tHairLossSpot__c as string,\n\t\tHardCopyPreferred__c as boolean,\n\t\tLanguage__c as string,\n\t\tLudwigScale__c as string,\n\t\tMaritalStatus__c as string,\n\t\tNorwoodScale__c as string,\n\t\tReferral_Code_Expiration_Date__c as timestamp,\n\t\tReferral_Code__c as string,\n\t\tService_Territory__c as string,\n\t\tSolutionOffered__c as string,\n\t\tText_Reminer_Opt_In__c as boolean,\n\t\tAge__c as decimal(38,18),\n\t\tBirthdate__c as timestamp,\n\t\tLead_Qualifier__c as string,\n\t\tLead_Rescheduler__c as string,\n\t\tPromo_Code__c as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSLead\nsource(output(\n\t\tSourceKey as integer,\n\t\tSourceName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimSource\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tMasterRecordId as string,\n\t\tName as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tSalutation as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tType as string,\n\t\tRecordTypeId as string,\n\t\tParentId as string,\n\t\tBillingStreet as string,\n\t\tBillingCity as string,\n\t\tBillingState as string,\n\t\tBillingPostalCode as string,\n\t\tBillingCountry as string,\n\t\tBillingStateCode as string,\n\t\tBillingCountryCode as string,\n\t\tBillingLatitude as decimal(38,18),\n\t\tBillingLongitude as decimal(38,18),\n\t\tBillingGeocodeAccuracy as string,\n\t\tShippingStreet as string,\n\t\tShippingCity as string,\n\t\tShippingState as string,\n\t\tShippingPostalCode as string,\n\t\tShippingCountry as string,\n\t\tShippingStateCode as string,\n\t\tShippingCountryCode as string,\n\t\tShippingLatitude as decimal(38,18),\n\t\tShippingLongitude as decimal(38,18),\n\t\tShippingGeocodeAccuracy as string,\n\t\tPhone as string,\n\t\tWebsite as string,\n\t\tPhotoUrl as string,\n\t\tIndustry as string,\n\t\tNumberOfEmployees as integer,\n\t\tDescription as string,\n\t\tCurrencyIsoCode as string,\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tPersonContactId as string,\n\t\tIsPersonAccount as boolean,\n\t\tPersonMailingStreet as string,\n\t\tPersonMailingCity as string,\n\t\tPersonMailingState as string,\n\t\tPersonMailingPostalCode as string,\n\t\tPersonMailingCountry as string,\n\t\tPersonMailingStateCode as string,\n\t\tPersonMailingCountryCode as string,\n\t\tPersonMailingLatitude as decimal(38,18),\n\t\tPersonMailingLongitude as decimal(38,18),\n\t\tPersonMailingGeocodeAccuracy as string,\n\t\tPersonMobilePhone as string,\n\t\tPersonEmail as string,\n\t\tPersonTitle as string,\n\t\tPersonDepartment as string,\n\t\tPersonLastCURequestDate as timestamp,\n\t\tPersonLastCUUpdateDate as timestamp,\n\t\tPersonEmailBouncedReason as string,\n\t\tPersonEmailBouncedDate as timestamp,\n\t\tJigsaw as string,\n\t\tJigsawCompanyId as string,\n\t\tAccountSource as string,\n\t\tSicDesc as string,\n\t\tOperatingHoursId as string,\n\t\tActive__c as boolean,\n\t\tCompany__c as string,\n\t\tConectCreationDate__c as timestamp,\n\t\tConectLastUpdate__c as timestamp,\n\t\tExternal_Id__c as string,\n\t\tCount_Close_Won_Opportunities__c as decimal(38,18),\n\t\tCustomer_Status__c as string,\n\t\tDisc__pc as string,\n\t\tDoNotContact__pc as boolean,\n\t\tDoNotEmail__pc as boolean,\n\t\tDoNotMail__pc as boolean,\n\t\tDoNotText__pc as boolean,\n\t\tEthnicity__pc as string,\n\t\tGender__pc as string,\n\t\tHairLossExperience__pc as string,\n\t\tHairLossFamily__pc as string,\n\t\tHairLossOrVolume__pc as string,\n\t\tHairLossProductOther__pc as string,\n\t\tHairLossProductUsed__pc as string,\n\t\tHairLossSpot__pc as string,\n\t\tHardCopyPreferred__pc as boolean,\n\t\tLanguage__pc as string,\n\t\tMaritalStatus__pc as string,\n\t\tText_Reminder_Opt_In__pc as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSAccount\nDimSource select(mapColumn(\n\t\tHash\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectHash\nFilterLastModifiedLead select(mapColumn(\n\t\tSourceName = LeadSource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLeadSource\nODSLead filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(LeadSource)) ~> FilterLastModifiedLead\nSelectLeadSource aggregate(groupBy(SourceName),\n\teach(match(name!='SourceName'), $$ = first($$))) ~> DistinctLeadSource\nUnionAccount derive(SourceSystem = 'Salesforce',\n\t\tSourceName = initCap(trim(SourceName)),\n\t\tIsActive = toBoolean('1'),\n\t\tDWH_LastUpdateDate = currentTimestamp(),\n\t\tDWH_CreatedDate = currentTimestamp()) ~> AddCustomColumnsLead\nAddCustomColumnsLead derive(Hash = sha2(256, concat(lower(SourceName), SourceSystem))) ~> AddHash\nDistinctHash, SelectHash exists(DistinctHash@Hash == SelectHash@Hash,\n\tnegate:true,\n\tbroadcast: 'auto')~> DoesNotExist\nODSAccount filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(AccountSource)) ~> FilterLastModifiedAccount\nFilterLastModifiedAccount select(mapColumn(\n\t\tSourceName = AccountSource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAccountSource\nSelectAccountSource aggregate(groupBy(SourceName),\n\teach(match(name!='SourceName'), $$ = first($$))) ~> DistinctAccountSource\nDistinctLeadSource, DistinctAccountSource union(byName: true)~> UnionAccount\nAddHash aggregate(groupBy(Hash),\n\teach(match(name!='Hash'), $$ = first($$))) ~> DistinctHash\nDoesNotExist sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSourceKey as integer,\n\t\tSourceName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSourceName,\n\t\tHash,\n\t\tDWH_CreatedDate,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive,\n\t\tSourceSystem\n\t)) ~> InsertDimSource"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimFormat')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/Marketing"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ASA_ODS_MA_Television",
                                "type": "DatasetReference"
                            },
                            "name": "ODSTelevision"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Campaign",
                                "type": "DatasetReference"
                            },
                            "name": "ODSCampaign"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimFormat",
                                "type": "DatasetReference"
                            },
                            "name": "SourceDimFormat"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimFormat",
                                "type": "DatasetReference"
                            },
                            "name": "UpdateFormat"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimFormat",
                                "type": "DatasetReference"
                            },
                            "name": "InsertFormat"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FilterLastUpload"
                        },
                        {
                            "name": "FilterLastModified"
                        },
                        {
                            "name": "SelectFormat"
                        },
                        {
                            "name": "SelectFormatColumn"
                        },
                        {
                            "name": "DistinctFormatTelevision"
                        },
                        {
                            "name": "DistinctFormatCampaign"
                        },
                        {
                            "name": "Union"
                        },
                        {
                            "name": "CustomColumns"
                        },
                        {
                            "name": "DerivedColumnCampaign"
                        },
                        {
                            "name": "Exists"
                        },
                        {
                            "name": "DoesNotExist"
                        },
                        {
                            "name": "SelectFormatColumns"
                        },
                        {
                            "name": "AddColumnsDates"
                        },
                        {
                            "name": "AllowUpdate"
                        },
                        {
                            "name": "AddUpdateColumn"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\ttransactionid as string,\n\t\tcalendardateest as string,\n\t\tcalendartimeest as string,\n\t\tbroadcastdateest as string,\n\t\tlocalairtime as string,\n\t\tpurpose as string,\n\t\tmethod as string,\n\t\tchannel as string,\n\t\tmedium as string,\n\t\tcompany as string,\n\t\tlocation as string,\n\t\tbudgettype as string,\n\t\tbudgetname as string,\n\t\tsource as string,\n\t\taffiliate as string,\n\t\tstation as string,\n\t\tshow as string,\n\t\tcontenttype as string,\n\t\tcontent as string,\n\t\tcampaigntype as string,\n\t\tcampaign as string,\n\t\tisci as string,\n\t\tmasternumber as string,\n\t\ttfn as string,\n\t\tsourcecode as string,\n\t\tpromocode as string,\n\t\turl as string,\n\t\tagency as string,\n\t\tregion as string,\n\t\tdmacode as string,\n\t\tdmaname as string,\n\t\taudiene as string,\n\t\ttactic as string,\n\t\tplacement as string,\n\t\tformat as string,\n\t\tlanguage as string,\n\t\tgrossspend as string,\n\t\tnetspend as string,\n\t\t{impressions18-65} as string,\n\t\tgrp as string,\n\t\tspots as string,\n\t\tlogtype as string,\n\t\t{impressions35+} as string,\n\t\ttrp as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tFilePath as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSTelevision\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tName as string,\n\t\tParentId as string,\n\t\tType as string,\n\t\tRecordTypeId as string,\n\t\tStatus as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tCurrencyIsoCode as string,\n\t\tExpectedRevenue as decimal(38,18),\n\t\tBudgetedCost as decimal(38,18),\n\t\tActualCost as decimal(38,18),\n\t\tExpectedResponse as decimal(38,18),\n\t\tNumberSent as decimal(38,18),\n\t\tIsActive as boolean,\n\t\tDescription as string,\n\t\tNumberOfLeads as integer,\n\t\tNumberOfConvertedLeads as integer,\n\t\tNumberOfContacts as integer,\n\t\tNumberOfResponses as integer,\n\t\tNumberOfOpportunities as integer,\n\t\tNumberOfWonOpportunities as integer,\n\t\tAmountAllOpportunities as decimal(38,18),\n\t\tAmountWonOpportunities as decimal(38,18),\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tCampaignMemberRecordTypeId as string,\n\t\tChannel__c as string,\n\t\tCompany__c as string,\n\t\tExternal_Id__c as string,\n\t\tLanguage__c as string,\n\t\tSourceCode_L__c as string,\n\t\tPromo_Code__c as string,\n\t\tTollFreeNumber__c as string,\n\t\tLocation__c as string,\n\t\tMedia__c as string,\n\t\tFormat__c as string,\n\t\tAudience__c as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSCampaign\nsource(output(\n\t\tFormatKey as integer,\n\t\tFormatName as string,\n\t\tFormatValue as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdate as timestamp,\n\t\tIsActive as boolean,\n\t\tSource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SourceDimFormat\nODSTelevision filter(toDate(DWH_LoadDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(DWH_LoadDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(format)) ~> FilterLastUpload\nODSCampaign filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(Format__c)) ~> FilterLastModified\nFilterLastModified select(mapColumn(\n\t\tFormat__c\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectFormat\nFilterLastUpload select(mapColumn(\n\t\tformat\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectFormatColumn\nSelectFormatColumn aggregate(groupBy(format),\n\teach(match(name!='format'), $$ = first($$))) ~> DistinctFormatTelevision\nSelectFormat aggregate(groupBy(Format__c),\n\teach(match(name!='Format__c'), $$ = first($$))) ~> DistinctFormatCampaign\nCustomColumns, DerivedColumnCampaign union(byName: true)~> Union\nDistinctFormatTelevision derive(IsActive = toBoolean('1'),\n\t\tSource = 'Marketing',\n\t\tFormatName = initCap(trim(format))) ~> CustomColumns\nDistinctFormatCampaign derive(IsActive = toBoolean('1'),\n\t\tSource = 'Salesforce',\n\t\tFormatName = initCap(trim(Format__c))) ~> DerivedColumnCampaign\nUnion, SelectFormatColumns exists(Union@FormatName == SelectFormatColumns@FormatName\n\t&& Union@Source == SelectFormatColumns@Source,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists\nUnion, SelectFormatColumns exists(Union@FormatName == SelectFormatColumns@FormatName\n\t&& Union@Source == SelectFormatColumns@Source,\n\tnegate:true,\n\tbroadcast: 'auto')~> DoesNotExist\nSourceDimFormat select(mapColumn(\n\t\tFormatKey,\n\t\tFormatName,\n\t\tFormatValue,\n\t\tDWH_CreatedDate,\n\t\tDWH_LastUpdate,\n\t\tIsActive,\n\t\tSource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectFormatColumns\nDoesNotExist derive(DWH_CreatedDate = currentTimestamp(),\n\t\tDWH_LastUpdate = currentTimestamp()) ~> AddColumnsDates\nExists alterRow(updateIf(true())) ~> AllowUpdate\nAllowUpdate derive(DWH_LastUpdate = currentTimestamp()) ~> AddUpdateColumn\nAddUpdateColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tFormatKey as integer,\n\t\tFormatName as string,\n\t\tFormatValue as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdate as timestamp,\n\t\tIsActive as boolean,\n\t\tSource as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['FormatName'],\n\tformat: 'table',\n\tstaged: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFormatName,\n\t\tDWH_LastUpdate,\n\t\tIsActive,\n\t\tSource\n\t)) ~> UpdateFormat\nAddColumnsDates sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tFormatKey as integer,\n\t\tFormatName as string,\n\t\tFormatValue as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdate as timestamp,\n\t\tIsActive as boolean,\n\t\tSource as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFormatName,\n\t\tDWH_CreatedDate,\n\t\tDWH_LastUpdate,\n\t\tIsActive,\n\t\tSource\n\t)) ~> InsertFormat"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimStatus')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Campaign",
                                "type": "DatasetReference"
                            },
                            "name": "ODSCampaign"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Lead",
                                "type": "DatasetReference"
                            },
                            "name": "ODSLead"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Account",
                                "type": "DatasetReference"
                            },
                            "name": "ODSAccount"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_ServiceAppointment",
                                "type": "DatasetReference"
                            },
                            "name": "ODSServiceAppointment"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimStatus",
                                "type": "DatasetReference"
                            },
                            "name": "UpdateStatus"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FilterLeadLastModified"
                        },
                        {
                            "name": "DistinctStatus"
                        },
                        {
                            "name": "SelectStatus"
                        },
                        {
                            "name": "AddStaticColumnsLead"
                        },
                        {
                            "name": "FilterCapaignLastModified"
                        },
                        {
                            "name": "DistinctCampaignStatus"
                        },
                        {
                            "name": "SelectStatusCampaign"
                        },
                        {
                            "name": "AddStaticColumns"
                        },
                        {
                            "name": "UnionLead"
                        },
                        {
                            "name": "AllowUpsert"
                        },
                        {
                            "name": "FilterLastModifiedStatus"
                        },
                        {
                            "name": "SelectAccountStatus"
                        },
                        {
                            "name": "DistinctAccountSource"
                        },
                        {
                            "name": "AddStaticColumnsAccount"
                        },
                        {
                            "name": "UnionAccount"
                        },
                        {
                            "name": "AddDateColumnsAndHash"
                        },
                        {
                            "name": "FilterAppointmentLastModified"
                        },
                        {
                            "name": "SelectAppointmentStatus"
                        },
                        {
                            "name": "DistinctAppointmentStatus"
                        },
                        {
                            "name": "AddStaticColumnsAppointment"
                        },
                        {
                            "name": "UnionServiceAppointment"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\tId as string,\n\t\tRecordTypeId as string,\n\t\tWhoId as string,\n\t\tWhatId as string,\n\t\tWhoCount as integer,\n\t\tWhatCount as integer,\n\t\tActivityDate as timestamp,\n\t\tStatus as string,\n\t\tPriority as string,\n\t\tIsHighPriority as boolean,\n\t\tOwnerId as string,\n\t\tCurrencyIsoCode as string,\n\t\tType as string,\n\t\tIsDeleted as boolean,\n\t\tAccountId as string,\n\t\tIsClosed as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tIsArchived as boolean,\n\t\tCallDurationInSeconds as integer,\n\t\tCallType as string,\n\t\tCallDisposition as string,\n\t\tCallObject as string,\n\t\tReminderDateTime as timestamp,\n\t\tIsReminderSet as boolean,\n\t\tRecurrenceActivityId as string,\n\t\tIsRecurrence as boolean,\n\t\tRecurrenceStartDateOnly as timestamp,\n\t\tRecurrenceEndDateOnly as timestamp,\n\t\tRecurrenceTimeZoneSidKey as string,\n\t\tRecurrenceType as string,\n\t\tRecurrenceInterval as integer,\n\t\tRecurrenceDayOfWeekMask as integer,\n\t\tRecurrenceDayOfMonth as integer,\n\t\tRecurrenceInstance as string,\n\t\tRecurrenceMonthOfYear as string,\n\t\tRecurrenceRegeneratedType as string,\n\t\tTaskSubtype as string,\n\t\tCompletedDateTime as timestamp,\n\t\tCenter_Name__c as string,\n\t\tCompleted_Date__c as timestamp,\n\t\tExternal_ID__c as string,\n\t\tLead__c as string,\n\t\tPerson_Account__c as string,\n\t\tRecording_Link__c as string,\n\t\tResult__c as string,\n\t\tSPRecordingOrTranscriptURL__c as string,\n\t\tService_Appointment__c as string,\n\t\tService_Territory_Caller_Id__c as string,\n\t\tTaskWhoIds as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSCampaign\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tMasterRecordId as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tSalutation as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tName as string,\n\t\tRecordTypeId as string,\n\t\tTitle as string,\n\t\tCompany as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tPhone as string,\n\t\tMobilePhone as string,\n\t\tFax as string,\n\t\tEmail as string,\n\t\tWebsite as string,\n\t\tPhotoUrl as string,\n\t\tDescription as string,\n\t\tLeadSource as string,\n\t\tStatus as string,\n\t\tIndustry as string,\n\t\tRating as string,\n\t\tCurrencyIsoCode as string,\n\t\tAnnualRevenue as decimal(38,18),\n\t\tNumberOfEmployees as integer,\n\t\tOwnerId as string,\n\t\tHasOptedOutOfEmail as boolean,\n\t\tIsConverted as boolean,\n\t\tConvertedDate as timestamp,\n\t\tConvertedAccountId as string,\n\t\tConvertedContactId as string,\n\t\tConvertedOpportunityId as string,\n\t\tIsUnreadByOwner as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tDoNotCall as boolean,\n\t\tHasOptedOutOfFax as boolean,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tLastTransferDate as timestamp,\n\t\tJigsaw as string,\n\t\tJigsawContactId as string,\n\t\tEmailBouncedReason as string,\n\t\tEmailBouncedDate as timestamp,\n\t\tet4ae5__HasOptedOutOfMobile__c as boolean,\n\t\tet4ae5__Mobile_Country_Code__c as string,\n\t\tDisc__c as string,\n\t\tDoNotContact__c as boolean,\n\t\tDoNotEmail__c as boolean,\n\t\tDoNotMail__c as boolean,\n\t\tDoNotText__c as boolean,\n\t\tEthnicity__c as string,\n\t\tExternal_Id__c as string,\n\t\tGender__c as string,\n\t\tHairLossExperience__c as string,\n\t\tHairLossFamily__c as string,\n\t\tHairLossOrVolume__c as string,\n\t\tHairLossProductOther__c as string,\n\t\tHairLossProductUsed__c as string,\n\t\tHairLossSpot__c as string,\n\t\tHardCopyPreferred__c as boolean,\n\t\tLanguage__c as string,\n\t\tLudwigScale__c as string,\n\t\tMaritalStatus__c as string,\n\t\tNorwoodScale__c as string,\n\t\tReferral_Code_Expiration_Date__c as timestamp,\n\t\tReferral_Code__c as string,\n\t\tService_Territory__c as string,\n\t\tSolutionOffered__c as string,\n\t\tText_Reminer_Opt_In__c as boolean,\n\t\tAge__c as decimal(38,18),\n\t\tBirthdate__c as timestamp,\n\t\tLead_Qualifier__c as string,\n\t\tLead_Rescheduler__c as string,\n\t\tPromo_Code__c as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSLead\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tMasterRecordId as string,\n\t\tName as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tSalutation as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tType as string,\n\t\tRecordTypeId as string,\n\t\tParentId as string,\n\t\tBillingStreet as string,\n\t\tBillingCity as string,\n\t\tBillingState as string,\n\t\tBillingPostalCode as string,\n\t\tBillingCountry as string,\n\t\tBillingStateCode as string,\n\t\tBillingCountryCode as string,\n\t\tBillingLatitude as decimal(38,18),\n\t\tBillingLongitude as decimal(38,18),\n\t\tBillingGeocodeAccuracy as string,\n\t\tShippingStreet as string,\n\t\tShippingCity as string,\n\t\tShippingState as string,\n\t\tShippingPostalCode as string,\n\t\tShippingCountry as string,\n\t\tShippingStateCode as string,\n\t\tShippingCountryCode as string,\n\t\tShippingLatitude as decimal(38,18),\n\t\tShippingLongitude as decimal(38,18),\n\t\tShippingGeocodeAccuracy as string,\n\t\tPhone as string,\n\t\tWebsite as string,\n\t\tPhotoUrl as string,\n\t\tIndustry as string,\n\t\tNumberOfEmployees as integer,\n\t\tDescription as string,\n\t\tCurrencyIsoCode as string,\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tPersonContactId as string,\n\t\tIsPersonAccount as boolean,\n\t\tPersonMailingStreet as string,\n\t\tPersonMailingCity as string,\n\t\tPersonMailingState as string,\n\t\tPersonMailingPostalCode as string,\n\t\tPersonMailingCountry as string,\n\t\tPersonMailingStateCode as string,\n\t\tPersonMailingCountryCode as string,\n\t\tPersonMailingLatitude as decimal(38,18),\n\t\tPersonMailingLongitude as decimal(38,18),\n\t\tPersonMailingGeocodeAccuracy as string,\n\t\tPersonMobilePhone as string,\n\t\tPersonEmail as string,\n\t\tPersonTitle as string,\n\t\tPersonDepartment as string,\n\t\tPersonLastCURequestDate as timestamp,\n\t\tPersonLastCUUpdateDate as timestamp,\n\t\tPersonEmailBouncedReason as string,\n\t\tPersonEmailBouncedDate as timestamp,\n\t\tJigsaw as string,\n\t\tJigsawCompanyId as string,\n\t\tAccountSource as string,\n\t\tSicDesc as string,\n\t\tOperatingHoursId as string,\n\t\tActive__c as boolean,\n\t\tCompany__c as string,\n\t\tConectCreationDate__c as timestamp,\n\t\tConectLastUpdate__c as timestamp,\n\t\tExternal_Id__c as string,\n\t\tCount_Close_Won_Opportunities__c as decimal(38,18),\n\t\tCustomer_Status__c as string,\n\t\tDisc__pc as string,\n\t\tDoNotContact__pc as boolean,\n\t\tDoNotEmail__pc as boolean,\n\t\tDoNotMail__pc as boolean,\n\t\tDoNotText__pc as boolean,\n\t\tEthnicity__pc as string,\n\t\tGender__pc as string,\n\t\tHairLossExperience__pc as string,\n\t\tHairLossFamily__pc as string,\n\t\tHairLossOrVolume__pc as string,\n\t\tHairLossProductOther__pc as string,\n\t\tHairLossProductUsed__pc as string,\n\t\tHairLossSpot__pc as string,\n\t\tHardCopyPreferred__pc as boolean,\n\t\tLanguage__pc as string,\n\t\tMaritalStatus__pc as string,\n\t\tText_Reminder_Opt_In__pc as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSAccount\nsource(output(\n\t\tId as string,\n\t\tOwnerId as string,\n\t\tIsDeleted as boolean,\n\t\tAppointmentNumber as string,\n\t\tCurrencyIsoCode as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tParentRecordId as string,\n\t\tParentRecordType as string,\n\t\tAccountId as string,\n\t\tWorkTypeId as string,\n\t\tContactId as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tDescription as string,\n\t\tEarliestStartTime as timestamp,\n\t\tDueDate as timestamp,\n\t\tDuration as decimal(38,18),\n\t\tArrivalWindowStartTime as timestamp,\n\t\tArrivalWindowEndTime as timestamp,\n\t\tStatus as string,\n\t\tSchedStartTime as timestamp,\n\t\tSchedEndTime as timestamp,\n\t\tActualStartTime as timestamp,\n\t\tActualEndTime as timestamp,\n\t\tActualDuration as decimal(38,18),\n\t\tDurationType as string,\n\t\tDurationInMinutes as decimal(38,18),\n\t\tServiceTerritoryId as string,\n\t\tSubject as string,\n\t\tParentRecordStatusCategory as string,\n\t\tStatusCategory as string,\n\t\tServiceNote as string,\n\t\tAppointmentType as string,\n\t\tEmail as string,\n\t\tPhone as string,\n\t\tCancellationReason as string,\n\t\tAdditionalInformation as string,\n\t\tComments as string,\n\t\tCenter_Type__c as string,\n\t\tExternal_Id__c as string,\n\t\tService_Appointment__c as string,\n\t\tWork_Type_Group__c as string,\n\t\tAppointment_Type__c as string,\n\t\tMeeting_Platform_Id__c as string,\n\t\tMeeting_Platform__c as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSServiceAppointment\nODSLead filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(Status)) ~> FilterLeadLastModified\nFilterLeadLastModified aggregate(groupBy(Status),\n\teach(match(name!='Status'), $$ = first($$))) ~> DistinctStatus\nDistinctStatus select(mapColumn(\n\t\tStatusName = Status\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectStatus\nSelectStatus derive(StatusGroup = 'Lead',\n\t\tIsActive = 1,\n\t\tSourceSystem = 'Salesforce') ~> AddStaticColumnsLead\nODSCampaign filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(Status)) ~> FilterCapaignLastModified\nFilterCapaignLastModified aggregate(groupBy(Status),\n\teach(match(name!='Status'), $$ = first($$))) ~> DistinctCampaignStatus\nDistinctCampaignStatus select(mapColumn(\n\t\tStatusName = Status\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectStatusCampaign\nSelectStatusCampaign derive(StatusGroup = 'Campaign',\n\t\tIsActive = 1,\n\t\tSourceSystem = 'Salesforce') ~> AddStaticColumns\nAddStaticColumns, AddStaticColumnsLead union(byName: true)~> UnionLead\nAddDateColumnsAndHash alterRow(upsertIf(true())) ~> AllowUpsert\nODSAccount filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(Customer_Status__c)) ~> FilterLastModifiedStatus\nFilterLastModifiedStatus select(mapColumn(\n\t\tStatusName = Customer_Status__c\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAccountStatus\nSelectAccountStatus aggregate(groupBy(StatusName),\n\teach(match(name!='StatusName'), $$ = first($$))) ~> DistinctAccountSource\nDistinctAccountSource derive(StatusGroup = 'Account',\n\t\tIsActive = 1,\n\t\tSourceSystem = 'Salesforce') ~> AddStaticColumnsAccount\nUnionLead, AddStaticColumnsAccount union(byName: true)~> UnionAccount\nUnionServiceAppointment derive(DWH_LastUpdateDate = currentTimestamp(),\n\t\tDWH_LoadDate = currentTimestamp(),\n\t\tHash = sha2(256, concat(StatusName, StatusGroup,SourceSystem))) ~> AddDateColumnsAndHash\nODSServiceAppointment filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(Status)) ~> FilterAppointmentLastModified\nFilterAppointmentLastModified select(mapColumn(\n\t\tStatusName = Status\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAppointmentStatus\nSelectAppointmentStatus aggregate(groupBy(StatusName),\n\teach(match(name!='StatusName'), $$ = first($$))) ~> DistinctAppointmentStatus\nDistinctAppointmentStatus derive(StatusGroup = 'ServiceAppointment',\n\t\tIsActive = 1,\n\t\tSourceSystem = 'Salesforce') ~> AddStaticColumnsAppointment\nUnionAccount, AddStaticColumnsAppointment union(byName: true)~> UnionServiceAppointment\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tStatusKey as integer,\n\t\tHash as string,\n\t\tStatusName as string,\n\t\tStatusGroup as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as integer,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Hash'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tHash,\n\t\tStatusName,\n\t\tStatusGroup,\n\t\tDWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive,\n\t\tSourceSystem\n\t)) ~> UpdateStatus"
                }
            },
            "dependsOn": []
        }
    ]
}