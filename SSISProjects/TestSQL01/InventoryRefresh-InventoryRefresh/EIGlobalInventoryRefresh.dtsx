<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/28/2017 2:37:44 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LT1041"
  DTS:CreatorName="SKYLINE\jlucas"
  DTS:DTSID="{1219EDAC-CA80-464F-97EE-6B74A193425B}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3025.34"
  DTS:LocaleID="1033"
  DTS:ObjectName="EIGlobalInventoryRefresh"
  DTS:PackageType="5"
  DTS:ProtectionLevel="5"
  DTS:VersionBuild="120"
  DTS:VersionGUID="{C4F27E17-5844-4133-95D2-9573FEE3772A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HCFM DB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{E982EFA2-67A2-4B8E-82A9-CB0D9F5D4829}"
      DTS:ObjectName="HCFM DB">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Data Source=" + @[$Package::HcfmDatabaseDataSource] + ";User ID=" + @[$Package::HcfmDatabaseUserId] + ";Initial Catalog=" + @[$Package::HcfmDatabaseInitialCatalog] + ";Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;"</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::HcfmDatabasePassword]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=HCTestSQL011;User ID=skyline;Initial Catalog=HairClubCMSDevSky;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"></DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HCFM Smtp]"
      DTS:CreationName="SMTP"
      DTS:Description="SMTP Access for Hair Club for Men"
      DTS:DTSID="{AAAC164B-74C1-4714-B33A-E611F79E5C09}"
      DTS:ObjectName="HCFM Smtp">
      <DTS:PropertyExpression
        DTS:Name="SmtpServer">@[$Package::HcfmSmtpConnectionString]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=hcsmtp.hcfm.com;UseWindowsAuthentication=False;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Email contact for new EI Global products"
      DTS:DTSID="{A559F44E-7C18-496E-BEA1-47678A7E2C7D}"
      DTS:ObjectName="EIGlobalNewProductEmailContact">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">WonderDog@TheWonderFrog</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Account to access EI Global RESTful web service"
      DTS:DTSID="{B745B8AC-9589-46C4-A49B-8F289458C180}"
      DTS:ObjectName="EIGlobalServiceAccount">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">HCFM_SSIS_Refresh_Dev</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="API Key to access EI Global RESTful web service"
      DTS:DTSID="{B5795B45-CEBB-4906-A70D-66CD53DB1DE4}"
      DTS:ObjectName="EIGlobalServiceAPIKey">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">mYcWdPVmLUgzwAgMhiZ5BgeBWv3vexvJ</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="URI to access EI Global RESTful web service"
      DTS:DTSID="{4AAC66BF-19FE-49D5-B259-B6EBCDBAC5E5}"
      DTS:ObjectName="EIGlobalServiceCoreURI">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">http://4pl.leansupplysolutions.com/testenv/api</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Password to access EI Global RESTful web service"
      DTS:DTSID="{0B86D299-B9F5-4F9B-AD86-E866A0D2C049}"
      DTS:ObjectName="EIGlobalServicePassword"
      DTS:Sensitive="True">
      <DTS:Property
        DTS:Name="ParameterValue">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="ParameterValue"></DTS:Property>
      </DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Username to access EI Global RESTful web service"
      DTS:DTSID="{EBCC7B39-309B-4A25-A381-E9C552321B5D}"
      DTS:ObjectName="EIGlobalServiceUserName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">AndrePtak</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Database connection data source"
      DTS:DTSID="{D31019A8-4AB4-44D0-94EF-13B1B3C5A55B}"
      DTS:ObjectName="HcfmDatabaseDataSource">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">HCTestSQL011</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Database connection initial catalog"
      DTS:DTSID="{79D4C914-725C-4718-99D2-52C683B2D1DE}"
      DTS:ObjectName="HcfmDatabaseInitialCatalog"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">HairClubCMSDevSky</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Database connection password"
      DTS:DTSID="{04656ABD-704F-4557-8E66-813DBDB1D1E8}"
      DTS:ObjectName="HcfmDatabasePassword"
      DTS:Required="True"
      DTS:Sensitive="True">
      <DTS:Property
        DTS:Name="ParameterValue">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="ParameterValue"></DTS:Property>
      </DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Database connection user id"
      DTS:DTSID="{D906BDFB-6616-4581-82CD-356ADB11CC6D}"
      DTS:ObjectName="HcfmDatabaseUserId"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">skyline</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="SMTP connection to use"
      DTS:DTSID="{177A0593-5D16-4DC9-AD81-2D62319ED472}"
      DTS:ObjectName="HcfmSmtpConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">hcsmtp.hcfm.com</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:Description="Tells package to log messages when running."
      DTS:DTSID="{C806F160-78D5-4014-9CB4-DD4FCB521797}"
      DTS:ObjectName="IsDebugMode">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">-1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:Description="Tells the package if it should send emails for new product SKUs"
      DTS:DTSID="{167204E1-ECF2-4990-B85D-87481BAFD8D6}"
      DTS:ObjectName="IsDisableEmail">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">-1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:Description="Whether to test communication with a new product"
      DTS:DTSID="{15562F9C-41C4-478F-9487-3A259568AE5F}"
      DTS:ObjectName="TestCommunicationWithNewProduct">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5FFCF144-8DEB-49E5-AE51-921742096C84}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EIGlobalCenterId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3C89DD23-A4B3-4AF7-8F29-7F8229352B04}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EIGlobalCenterNumber">
      <DTS:VariableValue
        DTS:DataType="3">101</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E1BB1AD2-90A7-4FB2-92D5-C773DFA21A37}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailBody">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6D666ABB-17ED-48EB-8F91-E99B083D8039}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailBodyHeader">
      <DTS:VariableValue
        DTS:DataType="8">The following new products were found in the warehouse inventory but are not yet configured.  Please configure them.  Thank you!{0}{0}</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8189EA46-50CA-4634-9624-8A2C50714163}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailLineItemFormat">
      <DTS:VariableValue
        DTS:DataType="8">{0} ({1}) x {2}{3}</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A4CD31DE-3EB8-4EE8-9A24-1C7E8BCEBA74}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedGetStatusCall">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C6556D4D-9A43-47FA-9CC8-3D2786EF87B8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LastUpdateUserName">
      <DTS:VariableValue
        DTS:DataType="8">SSISBatchUpdates</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EFE8C897-A00A-4185-887F-C7CF1F726B69}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NewProducts">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E8AA2578-0459-4442-AE77-F18440269D55}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NewProduct_ItemSKU">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{584778AE-5F8B-4DCD-95E9-DACB9DD32F28}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NewProduct_QuantityAvailable">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{69A04603-8B03-4B67-82A2-A0F63B6FC541}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NewProduct_Warehouse">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{987D6741-B92B-4137-927E-478F06885CDB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="OpenPurchaseOrders">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A8F285F0-BF03-4E7A-A1E4-D5A7F7141598}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SSISRunInstance">
      <DTS:VariableValue
        DTS:DataType="7">4/28/2017 3:06:00 PM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Set SSISRunInstance"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{403CE115-E9FF-47AB-BA43-F6EF73274746}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set SSISRunInstance"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E982EFA2-67A2-4B8E-82A9-CB0D9F5D4829}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="SELECT GetUTCDate() AS SSISRunInstance;"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="SSISRunInstance"
            SQLTask:DtsVariableName="User::SSISRunInstance" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Distribution Center Inventory"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{D5F58C15-A709-461D-AE20-D2D3EDDC18F1}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Distribution Center Inventory">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Update Distribution Center Inventory\Compile Inventory Differences"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C02172EA-85CD-4EAD-B86F-CF44CB3FE5D4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Compile Inventory Differences"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E982EFA2-67A2-4B8E-82A9-CB0D9F5D4829}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="EXECUTE [dbo].[dbaCompileInventoryDifferences] @SSISRunInstance=? ,@UserName=?,@EIGlobalCenterId=?,@TestCommunicationWithNewProduct=?;"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::NewProducts" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::SSISRunInstance"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::LastUpdateUserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="25" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::EIGlobalCenterId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="$Package::TestCommunicationWithNewProduct"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Update Distribution Center Inventory\Create Temp Tables - Inventory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Build temp tables to be used later"
          DTS:DTSID="{AF36E10E-C1E4-4830-BA73-6313172EE25B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Temp Tables - Inventory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E982EFA2-67A2-4B8E-82A9-CB0D9F5D4829}"
              SQLTask:SqlStatementSource="IF (OBJECT_ID('dbo.tmpInventorySalesCodeDistributorBefore') IS NULL) BEGIN&#xA;  CREATE TABLE tmpInventorySalesCodeDistributorBefore (&#xA;    [ItemSKU] nvarchar(50),&#xA;    [PackSKU] nvarchar(50),&#xA;    [QuantityAvailable] int,&#xA;    [SalesCodeID] int,&#xA;    [SSISRunInstance] datetime&#xA;  );&#xA;END&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Update Distribution Center Inventory\Drop temp table - Inventory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{712D36C0-7516-4557-9BB4-23CD04EB5D24}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Drop temp table - Inventory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::IsDebugMode]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E982EFA2-67A2-4B8E-82A9-CB0D9F5D4829}"
              SQLTask:SqlStatementSource="DECLARE @SSISRunInstance datetime;&#xA;SET @SSISRunInstance = ?;&#xA;&#xA;IF ((SELECT COUNT(*) FROM [tmpInventorySalesCodeDistributorBefore] WHERE [SSISRunInstance] &gt; @SSISRunInstance) &gt; 0) &#xA;BEGIN&#xA;&#x9;DELETE FROM &#xA;&#x9;&#x9;[tmpInventorySalesCodeDistributorBefore]&#xA;&#x9;WHERE &#xA;&#x9;&#x9;[SSISRunInstance] &lt;= @SSISRunInstance;&#xA;END&#xA;ELSE &#xA;BEGIN&#xA;&#x9;DROP TABLE [tmpInventorySalesCodeDistributorBefore];&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::SSISRunInstance"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Update Distribution Center Inventory\For each New Product"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:Disabled="True"
          DTS:DTSID="{C994668D-22AA-41A1-A498-4643680D0DC9}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="For each New Product">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{DF663706-FC26-4D6D-93CB-3883CD2E6A09}"
            DTS:ObjectName="{DF663706-FC26-4D6D-93CB-3883CD2E6A09}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::NewProducts" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::IsDisableEmail]</DTS:PropertyExpression>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Update Distribution Center Inventory\For each New Product\Build Email Body"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:Disabled="True"
              DTS:DTSID="{2E2CEDB2-EBC3-4934-A6B2-6D34CBAA331A}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Build Email Body"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="Disable">@[$Package::IsDisableEmail]</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_0e162c42f27d4e298f31a9d28171cd93"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::EmailBodyHeader,User::EmailLineItemFormat,User::NewProduct_ItemSKU,User::NewProduct_QuantityAvailable,User::NewProduct_Warehouse"
                  ReadWriteVariables="User::EmailBody">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e162c42f27d4e298f31a9d28171cd93.Properties.Settings.get_Default():ST_0e162c42f27d4e298f31a9d28171cd93.Properties.Sett" +
    "ings")]

namespace ST_0e162c42f27d4e298f31a9d28171cd93.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_0e162c42f27d4e298f31a9d28171cd93
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            //Get the newline to use
            string myNewline = Environment.NewLine;

            //Find the standard format string (default if not given)
            string lineFormat =
                RetrieveDefaultVariableValue(
                    "User::EmailLineItemFormat",
                    "{0} ({1}) x {2}{3}");

            //Set the header message for the query result if it is not set yet
            if ((Dts.Variables["User::EmailBody"] == null) ||
            (string.IsNullOrWhiteSpace(
                (string)(Dts.Variables["User::EmailBody"].Value))))
            {
                //User the header if it exists; else start with a blank
                Dts.Variables["User::EmailBody"].Value =
                    string.Format(
                        RetrieveDefaultVariableValue(
                            "User::EmailBodyHeader", string.Empty),
                        myNewline);

                //Also add a sample to the header
                Dts.Variables["User::EmailBody"].Value =
                    Dts.Variables["User::EmailBody"].Value +
                    "Sample: " + string.Format(lineFormat, 
                        "SKU", "Warehouse", "Quantity", myNewline);
            }

            //Apply the query result to each line from the resultset
            Dts.Variables["User::EmailBody"].Value =
                Dts.Variables["User::EmailBody"].Value +
                string.Format(lineFormat,
                    Dts.Variables["User::NewProduct_ItemSKU"].Value,
                    Dts.Variables["User::NewProduct_Warehouse"].Value,
                    Dts.Variables["User::NewProduct_QuantityAvailable"].Value,
                    myNewline);
            ;

            //Success
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        /// <summary>
        ///   Find the variable within the given collection...
        ///      If missing or empty, use the given default
        /// </summary>
        /// <param name="variableName">Variable name</param>
        /// <param name="defaultValue">Default value to use</param>
        /// <returns></returns>
        public string RetrieveDefaultVariableValue(string variableName,
                                                   string defaultValue)
        {
            //Validate inputs
            if (string.IsNullOrWhiteSpace(variableName))
                throw new ArgumentNullException("variableName");

            //If the variable isn't in the variable list, use the default
            if (!Dts.Variables.Contains(variableName))
                return defaultValue;

            //Find the specific variable... 
            //  if missing or whitespace, use the default, else use the string
            Variable variableValue = Dts.Variables[variableName];
            if ((variableValue == null) ||
                (string.IsNullOrWhiteSpace((string)variableValue.Value)))
            { return defaultValue; }
            else
            { return ((string)variableValue.Value); }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e162c42f27d4e298f31a9d28171cd93.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e162c42f27d4e298f31a9d28171cd93.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e162c42f27d4e298f31a9d28171cd93.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0e162c42f27d4e298f31a9d28171cd93.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0e162c42f27d4e298f31a9d28171cd93.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_0e162c42f27d4e298f31a9d28171cd93</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_0e162c42f27d4e298f31a9d28171cd93</msb:DisplayName>
		<msb:ProjectId>{6D4B65E0-5E4D-474D-86C5-8A2E95D75D1A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0e162c42f27d4e298f31a9d28171cd93.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0e162c42f27d4e298f31a9d28171cd93")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0e162c42f27d4e298f31a9d28171cd93")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_0e162c42f27d4e298f31a9d28171cd93.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{510bb68c-c98d-46c2-86d5-096dceab6282}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0e162c42f27d4e298f31a9d28171cd93</RootNamespace>
    <AssemblyName>ST_0e162c42f27d4e298f31a9d28171cd93</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <BinaryItem
                    Name="ST_0e162c42f27d4e298f31a9d28171cd93.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFzE+lsAAAAAAAAAAOAAAiELAQsAABQAAAAIAAAAAAAAzjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHgyAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1BIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
MgAAAAAAAEgAAAACAAUAoCMAANgOAAABAAAAAAAAAOgiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBwCkAQAAAgAAESgWAAAKCgJycwAAcHKnAABwKAkAAAYLAigXAAAK
bxgAAApyzQAAcG8ZAAAKFCgaAAAKLSkCKBcAAApvGAAACnLNAABwbxkAAApvGwAACnQgAAABKBwA
AAo5mAAAAAIoFwAACm8YAAAKcs0AAHBvGQAACgJy7QAAcH4dAAAKKAkAAAYGKB4AAApvHwAACgIo
FwAACm8YAAAKcs0AAHBvGQAACgIoFwAACm8YAAAKcs0AAHBvGQAACm8bAAAKchkBAHAHGo0BAAAB
DAgWcisBAHCiCBdyMwEAcKIIGHJHAQBwoggZBqIIKCAAAAooIQAACm8fAAAKAigXAAAKbxgAAApy
zQAAcG8ZAAAKAigXAAAKbxgAAApyzQAAcG8ZAAAKbxsAAAoHGo0BAAABDQkWAigXAAAKbxgAAApy
WQEAcG8ZAAAKbxsAAAqiCRcCKBcAAApvGAAACnKLAQBwbxkAAApvGwAACqIJGAIoFwAACm8YAAAK
csEBAHBvGQAACm8bAAAKogkZBqIJKCAAAAooIgAACm8fAAAKAigXAAAKFm8jAAAKKhMwAgBjAAAA
AwAAEQMoHAAACiwLcgcCAHBzJAAACnoCKBcAAApvGAAACgNvJQAACi0CBCoCKBcAAApvGAAACgNv
GQAACgoGFCgaAAAKLRIGbxsAAAp0IAAAASgcAAAKLAIEKgZvGwAACnQgAAABKh4CKCYAAAoqAAAA
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAMAQAACN+
AACcBAAAYAYAACNTdHJpbmdzAAAAAPwKAAAkAgAAI1VTACANAAAQAAAAI0dVSUQAAAAwDQAAqAEA
ACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACEAAAAFAAAABgAAAAoAAAADAAAA
JgAAAAIAAAAPAAAAAwAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDB
ALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgCOAnQCBgC5AqcCBgDQAqcCBgDtAqcC
BgAMA6cCBgAlA6cCBgA+A6cCBgBZA6cCBgB0A6cCBgCNA6cCBgDGA6YDBgDmA6YDBgAXBAQEBgA0
BLoABgA5BLoABgBdBKcCCgCJBHMECgCiBHMEBgC3BKYDDgDZBBQBBgD7BLoADgATBRQBEgBsBUwF
EgCEBUwFEgCWBUwFBgC2BboABgD9BboAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABr
ADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAALABEAfwETABEArAEXABEA9gE5AAYG
PAJNAFaARAJQAFaATAJQAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAAB
AJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY0gSPAAIA
vCAAAAAAhgAaAhsAAgBsIgAAAACGAB8CRwACANsiAAAAAIYYvAEbAAQAAAABAFQCAAABAFoCAAAC
AGcCOQC8AV4AQQC8AV4ASQC8AV4AUQC8AV4AWQC8AV4AYQC8AV4AaQC8AV4AcQC8AV4AeQC8AV4A
gQC8AV4AiQC8AWMAkQC8ARsAmQC8ARsACQC8ARsAoQBLBGgAoQBmBG8AKQC8AXQAuQC8AYAAyQC8
ARsAEQC8ARsA0QC8ARsA2QAHBZMAGQAlBZcA4QB2BZwA6QCNBaEA+QCgBacA8QCsBa8AAQG9BbMA
AQHQBbgAAQHWBbsA8QDdBcEAAQHWBcYAAQHnBc0AAQHnBdQA4QDuBWMACQG8AV4A6QATBuMAGQC8
ARsACAAUAFQACAAYAFkAKQCTAIYALgAbAGABLgAjAGABLgBjAIYBLgALAO0ALgATADcBLgAzADcB
LgArAGABLgA7AGYBLgBDAGABLgBbAH0BQwBrAFkASQCTAIYAYQCbAFkAgwCrAFkAewDaAOgAAgAB
AAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAAPca
BkwAAAAAAAB/AAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAA4AAAAA
AAAAAAAAAAoA9QAAAAAADgAAAAAAAAAAAAAACgAtBQAAAAAAAAAAAQAAABwGAAAFAAQAAAAAAAA8
TW9kdWxlPgBTVF8wZTE2MmM0MmYyN2Q0ZTI5OGYzMWE5ZDI4MTcxY2Q5My5kbGwAUmVzb3VyY2Vz
AFNUXzBlMTYyYzQyZjI3ZDRlMjk4ZjMxYTlkMjgxNzFjZDkzLlByb3BlcnRpZXMAU2V0dGluZ3MA
U2NyaXB0TWFpbgBTVF8wZTE2MmM0MmYyN2Q0ZTI5OGYzMWE5ZDI4MTcxY2Q5MwBTY3JpcHRSZXN1
bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNl
AEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNv
dXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFu
Y2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAFJldHJpZXZlRGVmYXVsdFZhcmlhYmxlVmFsdWUA
dmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAdmFyaWFibGVOYW1lAGRlZmF1bHRWYWx1ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0u
UmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2Vt
Ymx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUA
U3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tF
bnRyeVBvaW50QXR0cmlidXRlAEVudmlyb25tZW50AGdldF9OZXdMaW5lAFNjcmlwdE9iamVjdE1v
ZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0
ZW0ARHRzT2JqZWN0AG9wX0VxdWFsaXR5AGdldF9WYWx1ZQBTdHJpbmcASXNOdWxsT3JXaGl0ZVNw
YWNlAEVtcHR5AEZvcm1hdABzZXRfVmFsdWUAQ29uY2F0AHNldF9UYXNrUmVzdWx0AEFyZ3VtZW50
TnVsbEV4Y2VwdGlvbgBDb250YWlucwBTVF8wZTE2MmM0MmYyN2Q0ZTI5OGYzMWE5ZDI4MTcxY2Q5
My5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAABxUwBUAF8AMABlADEANgAyAGMANAAy
AGYAMgA3AGQANABlADIAOQA4AGYAMwAxAGEAOQBkADIAOAAxADcAMQBjAGQAOQAzAC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAzVQBzAGUAcgA6ADoARQBtAGEAaQBs
AEwAaQBuAGUASQB0AGUAbQBGAG8AcgBtAGEAdAAAJXsAMAB9ACAAKAB7ADEAfQApACAAeAAgAHsA
MgB9AHsAMwB9AAAfVQBzAGUAcgA6ADoARQBtAGEAaQBsAEIAbwBkAHkAACtVAHMAZQByADoAOgBF
AG0AYQBpAGwAQgBvAGQAeQBIAGUAYQBkAGUAcgAAEVMAYQBtAHAAbABlADoAIAAAB1MASwBVAAAT
VwBhAHIAZQBoAG8AdQBzAGUAABFRAHUAYQBuAHQAaQB0AHkAADFVAHMAZQByADoAOgBOAGUAdwBQ
AHIAbwBkAHUAYwB0AF8ASQB0AGUAbQBTAEsAVQAANVUAcwBlAHIAOgA6AE4AZQB3AFAAcgBvAGQA
dQBjAHQAXwBXAGEAcgBlAGgAbwB1AHMAZQAARVUAcwBlAHIAOgA6AE4AZQB3AFAAcgBvAGQAdQBj
AHQAXwBRAHUAYQBuAHQAaQB0AHkAQQB2AGEAaQBsAGEAYgBsAGUAABl2AGEAcgBpAGEAYgBsAGUA
TgBhAG0AZQAAAAAA73vpIpzpo0KDuZ+WXQJ+fwAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMg
AAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMBSACDg4OAgYIAwYRFAQA
AAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAA
AwAAAQMAAA4EIAAScQQgABJ1BSABEnkcBwACAhJ9En0DIAAcBAABAg4CBg4FAAIODhwEIAEBHAYA
Ag4OHRwGAAMOHBwcBQACDhwcCAcEDg4dHB0cBCABAhwEBwESeUkBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41KAEA
I1NUXzBlMTYyYzQyZjI3ZDRlMjk4ZjMxYTlkMjgxNzFjZDkzAAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMTcAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAACgMgAA
AAAAAAAAAAC+MgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsDIAAAAAAAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEABkz3GgAAAQAGTPcaPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAA
MAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADAAZQAxADYAMgBjADQAMgBmADIANwBkADQAZQAyADkAOABmADMAMQBhADkAZAAyADgAMQA3ADEA
YwBkADkAMwAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADkAMAAz
AC4AMQA5ADQANgAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADAA
ZQAxADYAMgBjADQAMgBmADIANwBkADQAZQAyADkAOABmADMAMQBhADkAZAAyADgAMQA3ADEAYwBk
ADkAMwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBs
AGUAbgBhAG0AZQAAAFMAVABfADAAZQAxADYAMgBjADQAMgBmADIANwBkADQAZQAyADkAOABmADMA
MQBhADkAZAAyADgAMQA3ADEAYwBkADkAMwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABTAFQAXwAwAGUAMQA2ADIAYwA0ADIAZgAyADcAZAA0AGUAMgA5ADgAZgAzADEA
YQA5AGQAMgA4ADEANwAxAGMAZAA5ADMAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAOQAwADMALgAxADkANAA2ADIAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwA
eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAOQAwADMALgAxADkANAA2ADIAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA0DIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{8867E100-E421-4487-BA31-B81AA2B7DC3E}"
              DTS:ObjectName="{8867E100-E421-4487-BA31-B81AA2B7DC3E}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::NewProduct_ItemSKU" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{432A73D0-FE6C-4AA1-ABE3-C8B1B2D66420}"
              DTS:ObjectName="{432A73D0-FE6C-4AA1-ABE3-C8B1B2D66420}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::NewProduct_QuantityAvailable" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{1774B010-3A88-4340-A4D5-FB9A8B8513C0}"
              DTS:ObjectName="{1774B010-3A88-4340-A4D5-FB9A8B8513C0}"
              DTS:ValueIndex="2"
              DTS:VariableName="User::NewProduct_Warehouse" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Update Distribution Center Inventory\Get Global EI CenterId"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{BBCADA4E-F74F-4C69-AFF3-FC93D69CEE03}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Global EI CenterId"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E982EFA2-67A2-4B8E-82A9-CB0D9F5D4829}"
              SQLTask:SqlStatementSource="SELECT CenterId FROM cfgCenter WHERE CenterNumber = ? AND IsActiveFlag = 1;&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::EIGlobalCenterId" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::EIGlobalCenterNumber"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Update Distribution Center Inventory\getBalance Service Load"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{D25EA5E6-D401-4EB3-B2E6-45EBF1E4A221}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="getBalance Service Load"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Inputs[Data Conversion Input].Columns[ItemSKU]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ItemSKU"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[ItemSKU]" />
                        <inputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Inputs[Data Conversion Input].Columns[QuantityAvailable]"
                          cachedDataType="i4"
                          cachedName="QuantityAvailable"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[QuantityAvailable]" />
                        <inputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Inputs[Data Conversion Input].Columns[Warehouse]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Warehouse"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[Warehouse]" />
                        <inputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Inputs[Data Conversion Input].Columns[AreaName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="AreaName"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[AreaName]" />
                        <inputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Inputs[Data Conversion Input].Columns[SSISRunInstance]"
                          cachedDataType="date"
                          cachedName="SSISRunInstance"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[SSISRunInstance]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ItemSKU]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ItemSKU]"
                          name="Copy of ItemSKU"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[ItemSKU]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of QuantityAvailable]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of QuantityAvailable]"
                          name="Copy of QuantityAvailable"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[QuantityAvailable]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Warehouse]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Warehouse]"
                          name="Copy of Warehouse"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[Warehouse]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AreaName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AreaName]"
                          name="Copy of AreaName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[AreaName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SSISRunInstance]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SSISRunInstance]"
                          name="Copy of SSISRunInstance"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[SSISRunInstance]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="getBalance"
                  version="11">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String EIGlobalServiceAccount
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EIGlobalServiceAccount"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String EIGlobalServiceAPIKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EIGlobalServiceAPIKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String EIGlobalServiceCoreURI
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EIGlobalServiceCoreURI"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String EIGlobalServicePassword
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EIGlobalServicePassword"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String EIGlobalServiceUserName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EIGlobalServiceUserName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean IsDebugMode
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["IsDebugMode"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public DateTime SSISRunInstance
    {
        get
        {
            return (DateTime)(ParentComponent.ReadOnlyVariables["SSISRunInstance"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using InventoryProxy.Utility;
using InventoryProxy.EIGlobal;
using System.Collections.Generic;
using InventoryProxy.EIGlobal.ResponseDto;
using System.Text;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    #region " GetBalance Web Service Call"

    /// <summary>Calls getBalance web service to retrieve the output records</summary>
    public override void CreateNewOutputRows()
    {
        bool fireAgain = true;

        try
        {
            //Call the web service to get the inventory details 
            //(get core URI from config variables)
            AccessConfigurationDto config =
                AccessConfiguration.BuildAccessConfigurationDto(
                    Variables.EIGlobalServiceCoreURI, 
                    Variables.EIGlobalServiceUserName,
                    Variables.EIGlobalServicePassword, 
                    Variables.EIGlobalServiceAPIKey,
                    Variables.EIGlobalServiceAccount);
            EIGlobalProxy proxy = new EIGlobalProxy(config, null, null);
            IEnumerable<WarehouseItemDto> serviceResult = proxy.GetBalance();


            //For each web service result, create an appropriate output record
            foreach (WarehouseItemDto item in serviceResult)
            {
                Output0Buffer.AddRow();
                Output0Buffer.ItemSKU = item.SKU;
                Output0Buffer.QuantityAvailable = item.Qty;
                Output0Buffer.Warehouse = item.WarehouseName;
                Output0Buffer.AreaName = item.AreaName;
                Output0Buffer.SSISRunInstance = Variables.SSISRunInstance;

                if (Variables.IsDebugMode)
                {
                    StringBuilder sb = new StringBuilder();
                    sb.Append("*** ");
                    sb.Append("serviceResult.item.AreaCode: '").Append(item.AreaCode).Append("',");
                    sb.Append("serviceResult.item.AreaName: '").Append(item.AreaName).Append("',");
                    sb.Append("serviceResult.item.SKU: '").Append(item.SKU).Append("',");
                    sb.Append("serviceResult.item.Qty: '").Append(item.Qty).Append("',");
                    sb.Append("serviceResult.item.WarehouseCode: '").Append(item.WarehouseCode).Append("',");
                    sb.Append("serviceResult.item.WarehouseName: '").Append(item.WarehouseName).Append("'");
                    sb.Append(" ***");
                    ComponentMetaData.FireInformation(0, "DEBUG::Get Balance Script", sb.ToString(), String.Empty, 0, ref fireAgain);
                }
            }

        }
        catch (Exception e)
        {
            FailComponent(e.ToString());
        }

    }

    /// <summary>
    /// Outputs error message
    /// </summary>
    /// <param name="errorMsg">Full error text</param>
    private void FailComponent(string errorMsg)
    {
        bool fail = false;
        IDTSComponentMetaData100 compMetadata = this.ComponentMetaData;
        compMetadata.FireError(1, "Error Getting Data From Webservice!", errorMsg, "", 0, out fail);
    }

    #endregion

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ItemSKU
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ItemSKU_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 QuantityAvailable
    {
        set
        {
            this[1] = value;
        }
    }
    public bool QuantityAvailable_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Warehouse
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Warehouse_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String AreaName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool AreaName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime SSISRunInstance
    {
        set
        {
            this[4] = value;
        }
    }
    public bool SSISRunInstance_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a2ca15a6e91e4710a9877c11b62ef8b0.Properties.Settings.get_Default():SC_a2ca15a6e91e4710a9877c11b62ef8b0.Properties.Sett" +
    "ings")]

namespace SC_a2ca15a6e91e4710a9877c11b62ef8b0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a2ca15a6e91e4710a9877c11b62ef8b0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_a2ca15a6e91e4710a9877c11b62ef8b0")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_a2ca15a6e91e4710a9877c11b62ef8b0</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_a2ca15a6e91e4710a9877c11b62ef8b0</msb:DisplayName>
		<msb:ProjectId>{7881176F-5D57-4989-99E3-73CB6A066314}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_a2ca15a6e91e4710a9877c11b62ef8b0.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_a2ca15a6e91e4710a9877c11b62ef8b0.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2F7EBBCB-0923-4461-AA5A-EDE82436297F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a2ca15a6e91e4710a9877c11b62ef8b0</RootNamespace>
    <AssemblyName>SC_a2ca15a6e91e4710a9877c11b62ef8b0</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="InventoryProxy">
      <HintPath>C:\_tfshc\HairClub_CMS\Trunk\SSIS\InventoryRefresh\InventoryRefresh\InventoryProxy.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\vc\hairclub\Trunk\SSIS\InventoryRefresh\InventoryRefresh\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http.Formatting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\vc\hairclub\Trunk\SSIS\InventoryRefresh\InventoryRefresh\System.Net.Http.Formatting.dll</HintPath>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a2ca15a6e91e4710a9877c11b62ef8b0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a2ca15a6e91e4710a9877c11b62ef8b0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a2ca15a6e91e4710a9877c11b62ef8b0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a2ca15a6e91e4710a9877c11b62ef8b0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a2ca15a6e91e4710a9877c11b62ef8b0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_a2ca15a6e91e4710a9877c11b62ef8b0.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAF/E+lsAAAAAAAAAAOAAAiELAQsAACQAAAAGAAAAAAAAbkMA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACBDAABLAAAAAGAAANgDAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdCMAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAANgDAAAAYAAAAAQAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
QwAAAAAAAEgAAAACAAUAsCYAAHAcAAABAAAAAAAAAPglAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMZAAAGfQEAAAQCAnMaAAAGfQIAAAQqBipu
AnsDAAAELBICewMAAARvFwAABgIUfQMAAAQqAAATMAUASQAAAAEAABEWCisuBAaUDgRyAQAAcCgO
AAAKMxkCBQaaAgQGlCgPAAAKDgRzCwAABn0DAAAEBhdYCgYDMs4CbwUAAAYCbwIAAAYCKAMAAAYq
BioeAigRAAAKKh4CKBIAAAoqABswBwAfAgAAAgAAERcKAnsCAAAEbx0AAAYCewIAAARvHwAABgJ7
AgAABG8eAAAGAnsCAAAEbxwAAAYCewIAAARvGwAABigTAAAKCwcUFHMUAAAKDAhvFQAACg0JbxYA
AAoTBziVAQAAEQdvFwAAChMEAnsDAAAEbxYAAAYCewMAAAQRBG8YAAAKbwwAAAYCewMAAAQRBG8Z
AAAKbw4AAAYCewMAAAQRBG8aAAAKbxAAAAYCewMAAAQRBG8bAAAKbxIAAAYCewMAAAQCewIAAARv
IQAABm8UAAAGAnsCAAAEbyAAAAY5EwEAAHMcAAAKEwURBXITAABwbx0AAAomEQVyHQAAcG8dAAAK
EQRvHgAACm8dAAAKclsAAHBvHQAACiYRBXJhAABwbx0AAAoRBG8bAAAKbx0AAApyWwAAcG8dAAAK
JhEFcp8AAHBvHQAAChEEbxgAAApvHQAACnJbAABwbx0AAAomEQVy0wAAcG8dAAAKEQRvGQAACm8f
AAAKclsAAHBvHQAACiYRBXIHAQBwbx0AAAoRBG8gAAAKbx0AAApyWwAAcG8dAAAKJhEFck8BAHBv
HQAAChEEbxoAAApvHQAACnKXAQBwbx0AAAomEQVymwEAcG8dAAAKJgIoIQAAChZypQEAcBEFbyIA
AAp+IwAAChYSAG8kAAAKEQdvJQAACjpf/v//3gwRBywHEQdvJgAACtzeERMGAhEGbyIAAAooCQAA
Bt4AKgBBNAAAAgAAAFcAAACoAQAA/wEAAAwAAAAAAAAAAAAAAAIAAAALAgAADQIAABEAAAAlAAAB
EzAHAB8AAAADAAARFgoCKCEAAAoLBxdy2QEAcANyIQIAcBYSAG8nAAAKKh4CKAEAAAYqKgIDBAUo
KAAACiomAhYDKCkAAAoqWgMsCAIWKCoAAAoqciMCAHBzKwAACno6AhcDjCcAAAEoKQAACipaAywI
AhcoKgAACipyIwIAcHMrAAAKeiYCGAMoKQAACipaAywIAhgoKgAACipyIwIAcHMrAAAKeiYCGQMo
KQAACipaAywIAhkoKgAACipyIwIAcHMrAAAKejoCGgOMBwAAASgpAAAKKloDLAgCGigqAAAKKnIj
AgBwcysAAAp6HgIoLAAACioeAigtAAAKKh4CKC4AAAoqOgIoLwAACgIDfQQAAAQqOgIoLwAACgID
fQUAAAQqlgJ7BQAABG8wAAAKcsACAHBvMQAACigyAAAKbzMAAAp0IgAAASqWAnsFAAAEbzAAAApy
7gIAcG8xAAAKKDIAAApvMwAACnQiAAABKpYCewUAAARvMAAACnIaAwBwbzEAAAooMgAACm8zAAAK
dCIAAAEqlgJ7BQAABG8wAAAKckgDAHBvMQAACigyAAAKbzMAAAp0IgAAASqWAnsFAAAEbzAAAApy
eAMAcG8xAAAKKDIAAApvMwAACnQiAAABKpYCewUAAARvMAAACnKoAwBwbzEAAAooMgAACm8zAAAK
pSwAAAEqlgJ7BQAABG8wAAAKcsADAHBvMQAACigyAAAKbzMAAAqlBwAAASoeAigvAAAKKgAAABMw
AgAtAAAABAAAEX4GAAAELSBy4AMAcNAHAAACKDUAAApvNgAACnM3AAAKCgaABgAABH4GAAAEKhp+
BwAABCoeAoAHAAAEKhp+CAAABCoucycAAAaACAAABCoeAig6AAAKKgAAAAAAtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAFwIAAAjfgAAyAgAAPQMAAAjU3Ry
aW5ncwAAAAC8FQAAVAQAACNVUwAQGgAAEAAAACNHVUlEAAAAIBoAAFACAAAjQmxvYgAAAAAAAAAC
AAABVxWiCQkBAAAA+iUzABYAAAEAAAAzAAAACAAAAAgAAAAoAAAAFQAAADoAAAAPAAAABAAAAAQA
AAAUAAAAFQAAAAIAAAABAAAABwAAAAEAAAAAAAoAAQAAAAAABgDvAM4ABgD/AM4ACgAcARUBDgA4
ASMBEgCZAc4ABgCoAc4ACgCRAhUBCgDVBMQECgAGBfEECgDsBdIFCgAXBgUGCgAuBgUGCgBLBgUG
CgBqBgUGCgCDBgUGCgCcBgUGCgC3BgUGCgDSBgUGCgDrBgUGCgAkBwQHCgBEBwQHBgCjB84AFgDw
B9kHFgAECNkHFgBPCDcIFgBdCNkHFgByCNkHFgCtCIgICgDiCMcIFgAUCfAICgAwCccICgCTCYcJ
GgAUCusJCgBMChUBCgB8CmkKCgCRChUBCgClChUBCgDKChUBCgDkChUBHgA1Cw0LHgBcCw0LBwB1
CwAAHgClCw0LCgDRCxUBCgDsC9kLCgAJDBUBCgAODBUBCgAyDAUGDgBeDEgMDgB3DEgMCgCMDAQH
AAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABAAAAACAAEAAYAAQAQAEsAAAAJAAQACwAB
ABAAWQAAAA0ABAAZAAEAEABlAAAADQAFABoAAAAQAG8AeQANAAYAIgAAARAAqAB5ABEACAAmAAYA
WQATAAYAZQAXAAYASwAfAAEAiANjAAEAiANjABEA5QR2ABEAEgV6ABEAVgWYAFAgAAAAAIYYUAEb
AAEAcCAAAAAAxgFWARsAAQByIAAAAACBAGQBGwABAJAgAAAAAMYAtgEjAAEA5SAAAAAAxgHCARsA
BQDnIAAAAADGANYBGwAFAO8gAAAAAMYA4QEbAAUA+CAAAAAAxgDCARsABQBYIwAAAACBAO0BLwAF
AIMjAAAAAIYYUAEbAAYAiyMAAAAAhhhQATQABgCWIwAAAACGCPsBLwAJAKAjAAAAAIYIBwI+AAoA
tyMAAAAAhggaAkMACwDGIwAAAACGCDACPgAMAN0jAAAAAIYITQIvAA0A5yMAAAAAhghbAj4ADgD+
IwAAAACGCHACLwAPAAgkAAAAAIYIfQI+ABAAHyQAAAAAhgiaAkgAEQAuJAAAAACGCK4CPgASAEUk
AAAAAIYAyQIbABMATSQAAAAAhgDQAhsAEwBVJAAAAACGAN8CTgATAF0kAAAAAIYYUAFnABMAbCQA
AAAAhhhQAWcAFAB7JAAAAACGCJgDbQAVAKEkAAAAAIYIswNtABUAxyQAAAAAhgjNA20AFQDtJAAA
AACGCOgDbQAVABMlAAAAAIYIBARtABUAOSUAAAAAhgggBE4AFQBfJQAAAACGCDAEcQAVAIUlAAAA
AIMYUAEbABUAkCUAAAAAkwgiBX4AFQDJJQAAAACTCDYFgwAVANAlAAAAAJMIQgWIABUA2CUAAAAA
lghmBZwAFgDrJQAAAACGGFABGwAWAN8lAAAAAJEYpwyTARYAAAABAHoFAAACAIIFAAADAIwFAAAE
AJQFAAABAJ4FAAABAKcFAAACAK4FAAADAJQFAAABAMIFAAABAMIFAAABAMIFAAABAMIFAAABAMIF
AAABAMIFAAABAMIFAAABAMIFAAABAMIFAAABAMIFAAABAMgFAAABAMgFAAABAMIFUQBQAS8AWQBQ
AS8AYQBQAS8AaQBQAS8AcQBQAS8AeQBQAS8AgQBQAS8AiQBQAS8AkQBQAS8AmQBQAS8AoQBQAUMA
qQBQARsACQBQARsACQCGB6YACQCSB60AsQBQARsACQDWARsACQDhARsAuQAbCMUAyQBQAc8AyQAl
CdkADAA+CekAFABMCfkA8QBYCW0A8QBgCf4A8QBoCW0A8QB6CW0AAQFQARsAAQGhCQIB8QCoCW0A
AQGhCQkB8QC1CW0ACQAtChABGQBDCm0AEQFTChYBCQFZChkBGQGICk4AIQGdChsACQGvChkBEQBQ
ATQAEQC5CkcBEQDCCkMAMQFQAS8AEQDJAhsAEQDQAhsAEQDfAk4AGQBQARsACQBGC00BQQFsC1MB
CQCQC1oBSQG9C2ABaQFQARsAcQEgDGcBcQE7DHABQQBQAXYBiQFQAYMBmQFQARsAIQBQARsALgAb
AAoCLgBjADACLgALAJcBLgATAOEBLgAjAAoCLgArAAoCLgAzAOEBLgA7ABACLgBDAAoCLgBbACcC
YwCDALcA4wCjAbcAAQHLAbcASQLDAYoBaQLDAYoBswAkAUABfgEEAAEABgALAAcAEgAIABQAAADr
AlIAAADzAlYAAAACA1oAAAAUA1YAAAAtA1IAAAA3A1YAAABIA1IAAABRA1YAAABhA14AAABxA1YA
AABEBFIAAABbBFIAAABxBFIAAACIBFIAAACgBFIAAAC4BFYAAABhA14AAADVBI4AAABOBZMAAABy
BaEAAQAMAAMAAQANAAUAAQAOAAcAAQAPAAkAAQAQAAsAAQARAA0AAQASAA8AAQATABEAAQAUABMA
AQAVABUAAgAbABcAAgAcABkAAgAdABsAAgAeAB0AAgAfAB8AAgAgACEAAgAhACMAAgAjACUAAgAk
ACcAAQAlACcAAgAmACkA4gDyAASAAAABAAAAAAAAAAAAAAAAAGIHAAAOAAAAAAAAAAAAAAABALEA
AAAAAAQAAAAAAAAAAAAAAAoADAEAAAAABAAAAAAAAAAAAAAACgAVAQAAAAAOAAAAAAAAAAAAAAAB
AHgBAAAAAAEAAAABAAAAAAAAALwAygcAAAAADgAAAAAAAAAAAAAAAQDHCQAAAAAOAAAAAAAAAAAA
AAABAOoKAAAAAAAAAAABAAAArgwAAAAAAAAAPE1vZHVsZT4AU0NfYTJjYTE1YTZlOTFlNDcxMGE5
ODc3YzExYjYyZWY4YjAuZGxsAFVzZXJDb21wb25lbnQAU2NyaXB0TWFpbgBPdXRwdXQwQnVmZmVy
AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfYTJjYTE1YTZlOTFlNDcxMGE5ODc3
YzExYjYyZWY4YjAuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2Ny
aXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBvbmVudABTY3Jp
cHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNo
ZWQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0
TmFtZU1hcABQcmltZU91dHB1dABDcmVhdGVOZXdPdXRwdXRSb3dzAFByZUV4ZWN1dGUAUG9zdEV4
ZWN1dGUARmFpbENvbXBvbmVudABzZXRfSXRlbVNLVQBzZXRfSXRlbVNLVV9Jc051bGwAc2V0X1F1
YW50aXR5QXZhaWxhYmxlAHNldF9RdWFudGl0eUF2YWlsYWJsZV9Jc051bGwAc2V0X1dhcmVob3Vz
ZQBzZXRfV2FyZWhvdXNlX0lzTnVsbABzZXRfQXJlYU5hbWUAc2V0X0FyZWFOYW1lX0lzTnVsbABE
YXRlVGltZQBzZXRfU1NJU1J1bkluc3RhbmNlAHNldF9TU0lTUnVuSW5zdGFuY2VfSXNOdWxsAEFk
ZFJvdwBTZXRFbmRPZlJvd3NldABFbmRPZlJvd3NldABJdGVtU0tVAEl0ZW1TS1VfSXNOdWxsAFF1
YW50aXR5QXZhaWxhYmxlAFF1YW50aXR5QXZhaWxhYmxlX0lzTnVsbABXYXJlaG91c2UAV2FyZWhv
dXNlX0lzTnVsbABBcmVhTmFtZQBBcmVhTmFtZV9Jc051bGwAU1NJU1J1bkluc3RhbmNlAFNTSVNS
dW5JbnN0YW5jZV9Jc051bGwAUGFyZW50Q29tcG9uZW50AGdldF9FSUdsb2JhbFNlcnZpY2VBY2Nv
dW50AGdldF9FSUdsb2JhbFNlcnZpY2VBUElLZXkAZ2V0X0VJR2xvYmFsU2VydmljZUNvcmVVUkkA
Z2V0X0VJR2xvYmFsU2VydmljZVBhc3N3b3JkAGdldF9FSUdsb2JhbFNlcnZpY2VVc2VyTmFtZQBn
ZXRfSXNEZWJ1Z01vZGUAZ2V0X1NTSVNSdW5JbnN0YW5jZQBFSUdsb2JhbFNlcnZpY2VBY2NvdW50
AEVJR2xvYmFsU2VydmljZUFQSUtleQBFSUdsb2JhbFNlcnZpY2VDb3JlVVJJAEVJR2xvYmFsU2Vy
dmljZVBhc3N3b3JkAEVJR2xvYmFsU2VydmljZVVzZXJOYW1lAElzRGVidWdNb2RlAFN5c3RlbS5S
ZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9u
AEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1
bHQAT3V0cHV0cwBPdXRwdXRJRHMAQnVmZmVycwBPdXRwdXRNYXAAZXJyb3JNc2cAQnVmZmVyAEJ1
ZmZlckNvbHVtbkluZGV4ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJp
YnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ19hMmNhMTVhNmU5MWU0NzEwYTk4
NzdjMTFiNjJlZjhiMABHZXRPdXRwdXRJRABHZXRDb2x1bW5JbmRleGVzAFNTSVNTY3JpcHRDb21w
b25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEludmVudG9yeVByb3h5AEludmVudG9yeVByb3h5LlV0
aWxpdHkAQWNjZXNzQ29uZmlndXJhdGlvbgBBY2Nlc3NDb25maWd1cmF0aW9uRHRvAEJ1aWxkQWNj
ZXNzQ29uZmlndXJhdGlvbkR0bwBJbnZlbnRvcnlQcm94eS5FSUdsb2JhbABFSUdsb2JhbFByb3h5
AElBY2Nlc3NDb25maWd1cmF0aW9uAElSZXN0ZnVsU2VydmljZUNsaWVudABJbnZlbnRvcnlQcm94
eS5FSUdsb2JhbC5QYXJhbWV0ZXJEdG8ASUVJR2xvYmFsUGFyYW1ldGVyQnVpbGRlcgBTeXN0ZW0u
Q29sbGVjdGlvbnMuR2VuZXJpYwBJRW51bWVyYWJsZWAxAEludmVudG9yeVByb3h5LkVJR2xvYmFs
LlJlc3BvbnNlRHRvAFdhcmVob3VzZUl0ZW1EdG8AR2V0QmFsYW5jZQBJRW51bWVyYXRvcmAxAEdl
dEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQAZ2V0X1NLVQBnZXRfUXR5AGdldF9XYXJlaG91c2VOYW1l
AGdldF9BcmVhTmFtZQBTeXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAEFwcGVuZABnZXRfQXJlYUNv
ZGUAZ2V0X1dhcmVob3VzZUNvZGUATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29tcG9uZW50TWV0
YURhdGExMDAAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAFRvU3RyaW5nAFN0cmluZwBFbXB0eQBGaXJl
SW5mb3JtYXRpb24AU3lzdGVtLkNvbGxlY3Rpb25zAElFbnVtZXJhdG9yAE1vdmVOZXh0AElEaXNw
b3NhYmxlAERpc3Bvc2UARXhjZXB0aW9uAEZpcmVFcnJvcgBzZXRfSXRlbQBTZXROdWxsAEludmFs
aWRPcGVyYXRpb25FeGNlcHRpb24ASW50MzIATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1l
V3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIASURUU1ZhcmlhYmxl
czEwMABnZXRfUmVhZE9ubHlWYXJpYWJsZXMASURUU1ZhcmlhYmxlMTAwAGdldF9JdGVtAFNjcmlw
dENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElEVFNFdmFsdWF0b3JD
b250ZXh0MTAwAEdldFZhbHVlV2l0aENvbnRleHQAQm9vbGVhbgBTeXN0ZW0uRGlhZ25vc3RpY3MA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2Vu
ZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ19hMmNhMTVhNmU5MWU0NzEwYTk4NzdjMTFiNjJlZjhi
MC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAABFPAHUAdABwAHUAdAAgADAAAAkq
ACoAKgAgAAA9cwBlAHIAdgBpAGMAZQBSAGUAcwB1AGwAdAAuAGkAdABlAG0ALgBBAHIAZQBhAEMA
bwBkAGUAOgAgACcAAQUnACwAAT1zAGUAcgB2AGkAYwBlAFIAZQBzAHUAbAB0AC4AaQB0AGUAbQAu
AEEAcgBlAGEATgBhAG0AZQA6ACAAJwABM3MAZQByAHYAaQBjAGUAUgBlAHMAdQBsAHQALgBpAHQA
ZQBtAC4AUwBLAFUAOgAgACcAATNzAGUAcgB2AGkAYwBlAFIAZQBzAHUAbAB0AC4AaQB0AGUAbQAu
AFEAdAB5ADoAIAAnAAFHcwBlAHIAdgBpAGMAZQBSAGUAcwB1AGwAdAAuAGkAdABlAG0ALgBXAGEA
cgBlAGgAbwB1AHMAZQBDAG8AZABlADoAIAAnAAFHcwBlAHIAdgBpAGMAZQBSAGUAcwB1AGwAdAAu
AGkAdABlAG0ALgBXAGEAcgBlAGgAbwB1AHMAZQBOAGEAbQBlADoAIAAnAAEDJwABCSAAKgAqACoA
ADNEAEUAQgBVAEcAOgA6AEcAZQB0ACAAQgBhAGwAYQBuAGMAZQAgAFMAYwByAGkAcAB0AABHRQBy
AHIAbwByACAARwBlAHQAdABpAG4AZwAgAEQAYQB0AGEAIABGAHIAbwBtACAAVwBlAGIAcwBlAHIA
dgBpAGMAZQAhAAABAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8A
dAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2
AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAt
RQBJAEcAbABvAGIAYQBsAFMAZQByAHYAaQBjAGUAQQBjAGMAbwB1AG4AdAAAK0UASQBHAGwAbwBi
AGEAbABTAGUAcgB2AGkAYwBlAEEAUABJAEsAZQB5AAAtRQBJAEcAbABvAGIAYQBsAFMAZQByAHYA
aQBjAGUAQwBvAHIAZQBVAFIASQAAL0UASQBHAGwAbwBiAGEAbABTAGUAcgB2AGkAYwBlAFAAYQBz
AHMAdwBvAHIAZAAAL0UASQBHAGwAbwBiAGEAbABTAGUAcgB2AGkAYwBlAFUAcwBlAHIATgBhAG0A
ZQAAF0kAcwBEAGUAYgB1AGcATQBvAGQAZQAAH1MAUwBJAFMAUgB1AG4ASQBuAHMAdABhAG4AYwBl
AABxUwBDAF8AYQAyAGMAYQAxADUAYQA2AGUAOQAxAGUANAA3ADEAMABhADkAOAA3ADcAYwAxADEA
YgA2ADIAZQBmADgAYgAwAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAAAAHsjsN9Jt/dEuH4mGxvArIoACImEXc2AgMyRCLd6XFYZNOCJAwYSFAMGEhgDIAABAwYSEAsg
BAEIHQgdEhUSGQQgAQEOCSADARIVHQgSGQQgAQECBCABAQgFIAEBER0DIAACAygADgMoAAIDKAAI
BCgAER0DBhIFBSABARIFAyAADgQgABEdAwYSIQMGEiUEAAASIQQAABIlBQABARIlBAgAEiEECAAS
JQMGEiAEAAASIAQIABIgBgACCBIZDgUgAR0ICAMHAQgEAQAAAAiqpIepjBMfVgkABRJhDg4ODg4J
IAMBEmkSbRJxCCAAFRJ1ARJ5BhUSdQESeQggABUSfQETAAYVEn0BEnkEIAATAAMgAAgGIAESgIEO
BiABEoCBCAUgABKAhQIGDgogBgEIDg4OCBACGwcIAhJhEmUVEnUBEnkSeRKAgRKAlRUSfQESeQYH
AgISgIUFIAIBCBwFIAASgKEGIAESgKUcBQAAEoCpBiABHBKArQgAARKAuRGAvQUgABKAwQcgAgEO
EoDBBAcBEiEGIAEBEYDJCAEAAgAAAAAAAwAAAUkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
NQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41KAEAI1NDX2EyY2Ex
NWE2ZTkxZTQ3MTBhOTg3N2MxMWI2MmVmOGIwAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcA
AAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEASEMAAAAAAAAAAAAAXkMA
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBDAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
gAMAAAAAAAAAAAAAgAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BOACAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAALwCAAABADAAMAAwADAAMAA0AGIA
MAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBhADIAYwBh
ADEANQBhADYAZQA5ADEAZQA0ADcAMQAwAGEAOQA4ADcANwBjADEAMQBiADYAMgBlAGYAOABiADAA
AAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJ
AG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGEAMgBjAGEAMQA1AGEANgBlADkAMQBlADQA
NwAxADAAYQA5ADgANwA3AGMAMQAxAGIANgAyAGUAZgA4AGIAMAAuAGQAbABsAAAASAASAAEATABl
AGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAA
MQA3AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGEAMgBj
AGEAMQA1AGEANgBlADkAMQBlADQANwAxADAAYQA5ADgANwA3AGMAMQAxAGIANgAyAGUAZgA4AGIA
MAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBhADIAYwBh
ADEANQBhADYAZQA5ADEAZQA0ADcAMQAwAGEAOQA4ADcANwBjADEAMQBiADYAMgBlAGYAOABiADAA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABwMwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_a2ca15a6e91e4710a9877c11b62ef8b0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::SSISRunInstance,$Package::EIGlobalServiceAccount,$Package::EIGlobalServiceAPIKey,$Package::EIGlobalServiceCoreURI,$Package::EIGlobalServicePassword,$Package::EIGlobalServiceUserName,$Package::IsDebugMode</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">38</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[ItemSKU]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[ItemSKU]"
                          name="ItemSKU" />
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[QuantityAvailable]"
                          dataType="i4"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[QuantityAvailable]"
                          name="QuantityAvailable" />
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[Warehouse]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[Warehouse]"
                          name="Warehouse" />
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[AreaName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[AreaName]"
                          name="AreaName" />
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[SSISRunInstance]"
                          dataType="date"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0].Columns[SSISRunInstance]"
                          name="SSISRunInstance" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="tmpInventorySalesCodeDistributorAfter"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[datSalesCodeDistributorSnapshot]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[HCFM DB]"
                      connectionManagerRefId="Package.ConnectionManagers[HCFM DB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].Columns[Copy of ItemSKU]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of ItemSKU"
                          externalMetadataColumnId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].ExternalColumns[ItemSKU]"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ItemSKU]" />
                        <inputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].Columns[Copy of QuantityAvailable]"
                          cachedDataType="i4"
                          cachedName="Copy of QuantityAvailable"
                          externalMetadataColumnId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].ExternalColumns[QuantityAvailable]"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of QuantityAvailable]" />
                        <inputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].Columns[Copy of Warehouse]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Warehouse"
                          externalMetadataColumnId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].ExternalColumns[Warehouse]"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Warehouse]" />
                        <inputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].Columns[Copy of AreaName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of AreaName"
                          externalMetadataColumnId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].ExternalColumns[AreaName]"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AreaName]" />
                        <inputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].Columns[Copy of SSISRunInstance]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Copy of SSISRunInstance"
                          externalMetadataColumnId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].ExternalColumns[SSISRunInstance]"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SSISRunInstance]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].ExternalColumns[ItemSKU]"
                          dataType="wstr"
                          length="50"
                          name="ItemSKU" />
                        <externalMetadataColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].ExternalColumns[QuantityAvailable]"
                          dataType="i4"
                          name="QuantityAvailable" />
                        <externalMetadataColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].ExternalColumns[Warehouse]"
                          dataType="wstr"
                          length="50"
                          name="Warehouse" />
                        <externalMetadataColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].ExternalColumns[AreaName]"
                          dataType="wstr"
                          length="50"
                          name="AreaName" />
                        <externalMetadataColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].ExternalColumns[SSISRunInstance]"
                          dataType="dbTimeStamp"
                          name="SSISRunInstance" />
                        <externalMetadataColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].ExternalColumns[SalesCodeDistributorSnapshotID]"
                          dataType="i4"
                          name="SalesCodeDistributorSnapshotID" />
                        <externalMetadataColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].ExternalColumns[ItemSalesCodeID]"
                          dataType="i4"
                          name="ItemSalesCodeID" />
                        <externalMetadataColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input].ExternalColumns[PackSalesCodeID]"
                          dataType="i4"
                          name="PackSalesCodeID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Update Distribution Center Inventory\getBalance Service Load.Paths[Data Conversion Output]"
                  endId="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Update Distribution Center Inventory\getBalance Service Load.Paths[Output 0]"
                  endId="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion.Inputs[Data Conversion Input]"
                  name="Output 0"
                  startId="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Update Distribution Center Inventory\Notify on new products"
          DTS:CreationName="Microsoft.SendMailTask"
          DTS:Description="Send Mail Task"
          DTS:Disabled="True"
          DTS:DTSID="{BA3A426F-A13C-4086-BDE2-B0E733E91459}"
          DTS:ExecutableType="Microsoft.SendMailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Notify on new products"
          DTS:TaskContact="Send Mail Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">(ISNULL(@[User::EmailBody])) || (LEN(@[User::EmailBody]) &lt;= 0)</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="MessageSource">@[User::EmailBody]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="ToLine">@[$Package::EIGlobalNewProductEmailContact]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{AAAC164B-74C1-4714-B33A-E611F79E5C09}"
              SendMailTask:From="EKaitz@hcfm.com"
              SendMailTask:To="WonderDog@TheWonderFrog"
              SendMailTask:Subject="Attention: New products found at EI Global" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Update Distribution Center Inventory\Take Before Snapshot"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8C04E82A-6E6E-4C0F-BE61-37BA576C8844}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Take Before Snapshot"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E982EFA2-67A2-4B8E-82A9-CB0D9F5D4829}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="DECLARE @SSISRunInstance datetime;&#xA;SET @SSISRunInstance = ?&#xA;&#xA;INSERT INTO &#xA;&#x9;tmpInventorySalesCodeDistributorBefore ([ItemSKU], [PackSKU], [QuantityAvailable], [SalesCodeID], [SSISRunInstance])&#xA;SELECT &#xA;&#x9;[ItemSKU], &#xA;&#x9;[PackSKU], &#xA;&#x9;[QuantityAvailable],&#xA;&#x9;[SalesCodeID], &#xA;&#x9;@SSISRunInstance&#xA;FROM &#xA;&#x9;[cfgSalesCodeDistributor]&#xA;WHERE &#xA;&#x9;[cfgSalesCodeDistributor].[CenterID] = ?;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::SSISRunInstance"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::EIGlobalCenterId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{4A5A5510-822A-4976-A019-AC52D041E169}"
          DTS:From="Package\Update Distribution Center Inventory\Create Temp Tables - Inventory"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Update Distribution Center Inventory\Get Global EI CenterId" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{6552CF0C-6EEC-4F2D-B8E5-6683C44E3727}"
          DTS:From="Package\Update Distribution Center Inventory\Take Before Snapshot"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Update Distribution Center Inventory\getBalance Service Load" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{83283DF8-95F6-44E1-B46F-90C889EF5336}"
          DTS:From="Package\Update Distribution Center Inventory\getBalance Service Load"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Update Distribution Center Inventory\Compile Inventory Differences" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{0F431EAF-E975-4B56-B122-77A46DC6BE06}"
          DTS:From="Package\Update Distribution Center Inventory\Compile Inventory Differences"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Update Distribution Center Inventory\For each New Product" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{D55858A8-45B3-408A-9521-CC66C4D81406}"
          DTS:From="Package\Update Distribution Center Inventory\For each New Product"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Update Distribution Center Inventory\Notify on new products" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{FE4B2413-7FEC-420B-8CD4-5295CF3349B3}"
          DTS:From="Package\Update Distribution Center Inventory\Notify on new products"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Update Distribution Center Inventory\Drop temp table - Inventory" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{D9FF4FEE-AAA0-4891-BBCA-7868CF6C7CEE}"
          DTS:From="Package\Update Distribution Center Inventory\Get Global EI CenterId"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Update Distribution Center Inventory\Take Before Snapshot" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Purchase Order Status"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{B1B62534-FEC2-4081-8BB9-6F8864552F70}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Purchase Order Status">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{58F6F6F1-CED6-4726-888E-976D4842DEB3}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="CurrentOrderHandle">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Update Purchase Order Status\Compile Purchase Order Updates"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{EE3DCDDF-6635-496E-B200-B19FFE930F67}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Compile Purchase Order Updates"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E982EFA2-67A2-4B8E-82A9-CB0D9F5D4829}"
              SQLTask:SqlStatementSource="--Set standard run instance and last update username, allocated code&#xA;DECLARE @SSISRunInstance datetime;&#xA;DECLARE @UserName nvarchar(25);&#xA;DECLARE @EIGlobalCenterId bigint;&#xA;SET @SSISRunInstance = ?;&#xA;SET @UserName = ?;&#xA;SET @EIGlobalCenterId = ?;&#xA;&#xA; -- (1) Update status if PO Number/DistributorOrderReference mismatch&#xA;UPDATE&#xA;&#x9;ipos&#xA;SET&#xA;&#x9;EIGlobalStatus = EIGlobalStatus + ' ** DistributorOrderReference mismatch (' + OrderId + ') **'&#xA;FROM &#xA;&#x9;[tmpInventoryPurchaseOrderStatus] ipos&#xA;INNER JOIN &#xA;&#x9;[datDistributorPurchaseOrder] dpo ON COALESCE(dpo.[PurchaseOrderNumber], '') = ipos.[PONumber] AND COALESCE(dpo.[DistributorOrderReference], '') &lt;&gt; ipos.[OrderId]&#xA;WHERE &#xA;&#x9;[SSISRunInstance] = @SSISRunInstance&#xA;&#x9;AND dpo.[PurchaseOrderNumber] IS NOT NULL;&#xA;&#xA;&#xA; -- (2) Get rid of items that match&#xA;DELETE &#xA;&#x9;ipos&#xA;FROM &#xA;&#x9;[tmpInventoryPurchaseOrderStatus] ipos&#xA;INNER JOIN &#xA;&#x9;[datDistributorPurchaseOrder] dpo ON COALESCE(dpo.[PurchaseOrderNumber], '') = ipos.[PONumber] AND COALESCE(dpo.[StatusAtDistributor], '') = ipos.[EIGlobalStatus]&#xA;WHERE &#xA;&#x9;[SSISRunInstance] = @SSISRunInstance;&#xA;&#xA;&#xA; --(3) Transaction, only if something else hasn't come in since&#xA; IF ((SELECT COUNT(1) FROM [tmpInventoryPurchaseOrderStatus] WHERE [SSISRunInstance] &gt; @SSISRunInstance) = 0) &#xA; BEGIN&#xA;&#x9;BEGIN TRANSACTION PO_Updates;&#xA;&#xA;&#x9;--(3A) Update the PO status table with the new status at distributor&#xA;&#x9;UPDATE &#xA;&#x9;&#x9;[datDistributorPurchaseOrder]&#xA;&#x9;SET &#xA;&#x9;&#x9;[StatusAtDistributor] = [tmpInventoryPurchaseOrderStatus].[EIGlobalStatus],&#xA;&#x9;&#x9;[TrackingNumber] = [tmpInventoryPurchaseOrderStatus].[TrackingNumber],&#xA;&#x9;&#x9;[Carrier] = [tmpInventoryPurchaseOrderStatus].[Carrier],&#xA;&#x9;&#x9;[LastUpdate] = @SSISRunInstance,&#xA;&#x9;&#x9;[LastUpdateUser] = @UserName&#xA;&#x9;FROM &#xA;&#x9;&#x9;[datDistributorPurchaseOrder]&#xA;&#x9;INNER JOIN &#xA;&#x9;&#x9;[tmpInventoryPurchaseOrderStatus] ON [tmpInventoryPurchaseOrderStatus].[PONumber] = COALESCE([datDistributorPurchaseOrder].[PurchaseOrderNumber], '')&#xA;&#x9;WHERE &#xA;&#x9;&#x9;[datDistributorPurchaseOrder].[DistributorCenterID] = @EIGlobalCenterId&#xA;&#x9;&#x9;AND [tmpInventoryPurchaseOrderStatus].[SSISRunInstance] = @SSISRunInstance;&#xA;&#xA;&#x9;--(3B-C) If something else hasn't come in since, commit; else, rollback&#xA;&#x9;IF ((SELECT COUNT(1) FROM [tmpInventoryPurchaseOrderStatus] WHERE [SSISRunInstance] &gt; @SSISRunInstance) = 0) &#xA;&#x9;BEGIN&#xA;&#x9;&#x9;COMMIT TRANSACTION PO_Updates;&#xA;&#x9;END&#xA;&#x9;ELSE &#xA;&#x9;BEGIN&#xA;&#x9;&#x9;ROLLBACK TRANSACTION PO_Updates;&#xA;&#x9;END&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::SSISRunInstance"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::LastUpdateUserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="25" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::EIGlobalCenterId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Update Purchase Order Status\Create temp tables - PO"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4F7368BD-D0CC-43D4-8697-67D8EA4C3497}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create temp tables - PO"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E982EFA2-67A2-4B8E-82A9-CB0D9F5D4829}"
              SQLTask:SqlStatementSource="IF (OBJECT_ID('dbo.tmpInventoryPurchaseOrderStatus') IS NULL) BEGIN&#xA;  CREATE TABLE tmpInventoryPurchaseOrderStatus (&#xA;    [PONumber] nvarchar(50),&#xA;    [OrderId] nvarchar(50),&#xA;    [OrderStatus] nvarchar(30),&#xA;    [ShipmentStatus] nvarchar(30),&#xA;    [EIGlobalStatus] nvarchar(100),&#xA;    [SSISRunInstance] datetime,&#xA;    [IsError] bit,&#xA;    [TrackingNumber] nvarchar(100),&#xA;    [Carrier] nvarchar(100)&#xA;  )&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Update Purchase Order Status\Drop temp tables - PO"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{F7031C4C-31E4-4944-BE1C-CF35565E9ADA}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Drop temp tables - PO"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::IsDebugMode]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E982EFA2-67A2-4B8E-82A9-CB0D9F5D4829}"
              SQLTask:SqlStatementSource="DECLARE @SSISRunInstance datetime;&#xA;SET @SSISRunInstance = ?;&#xA;&#xA;IF ((SELECT COUNT(*) FROM [tmpInventoryPurchaseOrderStatus]&#xA;      WHERE [SSISRunInstance] &gt; @SSISRunInstance) &gt; 0) BEGIN&#xA;  DELETE FROM [tmpInventoryPurchaseOrderStatus]&#xA;   WHERE [SSISRunInstance] &lt;= @SSISRunInstance&#xA;END&#xA;ELSE BEGIN&#xA;  DROP TABLE [tmpInventoryPurchaseOrderStatus]&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::SSISRunInstance"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Update Purchase Order Status\Foreach active purchase order"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{B8A9712E-07A1-409E-A277-3C70FFCA9724}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach active purchase order">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{6E1F0F49-CBF1-4AD3-88DE-A77E32D2718C}"
            DTS:ObjectName="{6E1F0F49-CBF1-4AD3-88DE-A77E32D2718C}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::OpenPurchaseOrders" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{DD29F00F-7AE6-4E9A-9DCA-7D0967346E83}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="getStatus service load"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion"
                      componentClassID="Microsoft.DataConvert"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Inputs[Data Conversion Input].Columns[OrderId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OrderId"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[OrderId]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Inputs[Data Conversion Input].Columns[OrderStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="30"
                              cachedName="OrderStatus"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[OrderStatus]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Inputs[Data Conversion Input].Columns[ShipmentStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="30"
                              cachedName="ShipmentStatus"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[ShipmentStatus]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Inputs[Data Conversion Input].Columns[EIGlobalStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="EIGlobalStatus"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[EIGlobalStatus]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Inputs[Data Conversion Input].Columns[SSISRunInstance]"
                              cachedDataType="dbTimeStamp"
                              cachedName="SSISRunInstance"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[SSISRunInstance]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Inputs[Data Conversion Input].Columns[PONumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PONumber"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[PONumber]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Inputs[Data Conversion Input].Columns[IsError]"
                              cachedDataType="bool"
                              cachedName="IsError"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[IsError]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of OrderStatus]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="30"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of OrderStatus]"
                              name="Copy of OrderStatus"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[OrderStatus]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ShipmentStatus]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="30"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ShipmentStatus]"
                              name="Copy of ShipmentStatus"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[ShipmentStatus]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EIGlobalStatus]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EIGlobalStatus]"
                              name="Copy of EIGlobalStatus"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[EIGlobalStatus]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SSISRunInstance]"
                              dataType="date"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SSISRunInstance]"
                              name="Copy of SSISRunInstance"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[SSISRunInstance]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of OrderId]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of OrderId]"
                              name="Copy of OrderId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[OrderId]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PONumber]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PONumber]"
                              name="Copy of PONumber"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[PONumber]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of IsError]"
                              dataType="bool"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of IsError]"
                              name="Copy of IsError"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[IsError]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="getStatus"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String CurrentOrderHandle
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CurrentOrderHandle"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String EIGlobalServiceAccount
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EIGlobalServiceAccount"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String EIGlobalServiceAPIKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EIGlobalServiceAPIKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String EIGlobalServiceCoreURI
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EIGlobalServiceCoreURI"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String EIGlobalServicePassword
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EIGlobalServicePassword"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String EIGlobalServiceUserName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EIGlobalServiceUserName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean IsDebugMode
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["IsDebugMode"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public DateTime SSISRunInstance
    {
        get
        {
            return (DateTime)(ParentComponent.ReadOnlyVariables["SSISRunInstance"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean FailedGetStatusCall
    {
        get
        {
            return (Boolean)(ParentComponent.ReadWriteVariables["FailedGetStatusCall"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["FailedGetStatusCall"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using InventoryProxy.Utility;
using InventoryProxy.EIGlobal;
using InventoryProxy.EIGlobal.ResponseDto;
using System.Text;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    #region " GetStatus Web Service Call"

    /// <summary>Calls getStatus web service to retrieve the output records</summary>
    public override void CreateNewOutputRows()
    {
        try
        {
            bool fireAgain = true;

            if (Variables.IsDebugMode)
            {
                ComponentMetaData.FireInformation(0, "DEBUG::Get Status Script", "*** CurrentOrderHandle: '" + Variables.CurrentOrderHandle + "'. ***", String.Empty, 0, ref fireAgain);
            }
            
            //Call the web service to get the inventory details 
            //(get core URI from config variables)
            AccessConfigurationDto config =
                AccessConfiguration.BuildAccessConfigurationDto(
                    Variables.EIGlobalServiceCoreURI, 
                    Variables.EIGlobalServiceUserName,
                    Variables.EIGlobalServicePassword, 
                    Variables.EIGlobalServiceAPIKey,
                    Variables.EIGlobalServiceAccount);
            EIGlobalProxy proxy = new EIGlobalProxy(config, null, null);
            OrderStatusDto serviceResult = null;
            try
            {
                serviceResult = proxy.GetStatus(Variables.CurrentOrderHandle);
            }
            catch (JsonResponseException ex) {
                //Variables.FailedGetStatusCall = true;
                String exMessage = 
                                    "Problems with JSON, on message: '" +
                                    ex.OriginalJsonResponse.JsonPlaintext + "'" +
                                    "... \n\n\n ...Message: " + ex.Message +
                                    "... \n ...going to: " +
                                    proxy.Configuration.ToDescriptiveString();

                ComponentMetaData.FireWarning(0, "Get Status Script", "*** Exception thrown calling proxy.GetStatus(): " + exMessage + "***", String.Empty, 0);
                //    throw new InvalidOperationException(
                //        "Problems with JSON, on message: '" +
                //            ex.OriginalJsonResponse.JsonPlaintext + "'" +
                //            "... \n\n\n ...Message: " + ex.Message +
                //            "... \n ...going to: " +
                //            proxy.Configuration.ToDescriptiveString(), ex);
            }


            if (serviceResult != null) // GetStatus call was successful
            {
                if (Variables.IsDebugMode)
                {
                    StringBuilder sb = new StringBuilder();
                    sb.Append("*** ");
                    sb.Append("serviceResult.OrderId: '").Append(serviceResult.OrderId).Append("',");
                    sb.Append("serviceResult.OrderStatus: '").Append(serviceResult.OrderStatus).Append("',");
                    sb.Append("serviceResult.ShipmentStatus: '").Append(serviceResult.ShipmentStatus).Append("',");
                    sb.Append("serviceResult.TrackingNo: '").Append(serviceResult.TrackingNo).Append("',");
                    sb.Append("serviceResult.Carrier: '").Append(serviceResult.Carrier).Append("',");
                    sb.Append(" ***");
                    ComponentMetaData.FireInformation(0, "DEBUG::Get Status Script", sb.ToString(), String.Empty, 0, ref fireAgain);
                }

                //Create an appropriate output record
                Output0Buffer.AddRow();
                Output0Buffer.PONumber = Variables.CurrentOrderHandle;
                Output0Buffer.OrderId = serviceResult.OrderId;
                Output0Buffer.OrderStatus = serviceResult.OrderStatus;
                Output0Buffer.ShipmentStatus = serviceResult.ShipmentStatus;
                Output0Buffer.TrackingNo = serviceResult.TrackingNo;
                Output0Buffer.Carrier = serviceResult.Carrier;
                //Output0Buffer.EIGlobalStatus = "Order Status: " + serviceResult.OrderStatus + ", Shipment Status: " + serviceResult.ShipmentStatus;
                Output0Buffer.EIGlobalStatus = serviceResult.OrderStatus;
                Output0Buffer.SSISRunInstance = Variables.SSISRunInstance;
                Output0Buffer.IsError = false;

                // If shipping status is SCHEDULED, set status to Shipped To Center.
                if (serviceResult.ShipmentStatus == "SCHEDULED")
                {
                    Output0Buffer.EIGlobalStatus = "Shipped To Center";
                }
            }
            else // GetStatus call failed
            {
                if (Variables.IsDebugMode)
                {
                    ComponentMetaData.FireWarning(0, "Get Status Script", "*** serviceResult is null. ***", String.Empty, 0);
                }

                //Create an appropriate output record
                Output0Buffer.AddRow();
                Output0Buffer.PONumber = Variables.CurrentOrderHandle;
                Output0Buffer.OrderId = String.Empty;
                Output0Buffer.OrderStatus = String.Empty;
                Output0Buffer.ShipmentStatus = String.Empty;
                Output0Buffer.TrackingNo = String.Empty;
                Output0Buffer.Carrier = String.Empty;
                Output0Buffer.EIGlobalStatus = "*** Error getting status from Distributor. ***";
                Output0Buffer.SSISRunInstance = Variables.SSISRunInstance;
                Output0Buffer.IsError = true;

            }

        }
        catch (Exception e)
        {
            FailComponent(e.ToString());
        }

    }

    /// <summary>
    /// Outputs error message
    /// </summary>
    /// <param name="errorMsg">Full error text</param>
    private void FailComponent(string errorMsg)
    {
        bool fail = false;
        IDTSComponentMetaData100 compMetadata = this.ComponentMetaData;
        compMetadata.FireError(1, "Error Getting Data From Webservice!", errorMsg, "", 0, out fail);
    }

    #endregion

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String PONumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool PONumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OrderId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool OrderId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OrderStatus
    {
        set
        {
            this[2] = value;
        }
    }
    public bool OrderStatus_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ShipmentStatus
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ShipmentStatus_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EIGlobalStatus
    {
        set
        {
            this[4] = value;
        }
    }
    public bool EIGlobalStatus_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime SSISRunInstance
    {
        set
        {
            this[5] = value;
        }
    }
    public bool SSISRunInstance_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsError
    {
        set
        {
            this[6] = value;
        }
    }
    public bool IsError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TrackingNo
    {
        set
        {
            this[7] = value;
        }
    }
    public bool TrackingNo_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Carrier
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Carrier_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_189621aef06f432a8ce9434e6884e742.Properties.Settings.get_Default():SC_189621aef06f432a8ce9434e6884e742.Properties.Sett" +
    "ings")]

namespace SC_189621aef06f432a8ce9434e6884e742.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_189621aef06f432a8ce9434e6884e742")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_189621aef06f432a8ce9434e6884e742")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_189621aef06f432a8ce9434e6884e742</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_189621aef06f432a8ce9434e6884e742</msb:DisplayName>
		<msb:ProjectId>{A6E22652-7D7D-4280-876D-5F8ADD684C31}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_189621aef06f432a8ce9434e6884e742.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_189621aef06f432a8ce9434e6884e742.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FA7BE562-8251-4973-9F1F-6C493AA5BCED}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_189621aef06f432a8ce9434e6884e742</RootNamespace>
    <AssemblyName>SC_189621aef06f432a8ce9434e6884e742</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="InventoryProxy">
      <HintPath>C:\_tfshc\HairClub_CMS\Trunk\SSIS\InventoryRefresh\InventoryRefresh\InventoryProxy.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\vc\hairclub\Trunk\SSIS\InventoryRefresh\InventoryRefresh\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http.Formatting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\vc\hairclub\Trunk\SSIS\InventoryRefresh\InventoryRefresh\System.Net.Http.Formatting.dll</HintPath>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_189621aef06f432a8ce9434e6884e742.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_189621aef06f432a8ce9434e6884e742.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_189621aef06f432a8ce9434e6884e742.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_189621aef06f432a8ce9434e6884e742.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_189621aef06f432a8ce9434e6884e742.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_189621aef06f432a8ce9434e6884e742.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGLE+lsAAAAAAAAAAOAAAiELAQsAACwAAAAGAAAAAAAAPksA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPBKAABLAAAAAGAAANgDAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARCsAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAANgDAAAAYAAAAAQAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
SwAAAAAAAEgAAAACAAUAWCkAAJghAAABAAAAAAAAAKAoAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMhAAAGfQEAAAQCAnMiAAAGfQIAAAQqBipu
AnsDAAAELBICewMAAARvHwAABgIUfQMAAAQqAAATMAUASQAAAAEAABEWCisuBAaUDgRyAQAAcCgO
AAAKMxkCBQaaAgQGlCgPAAAKDgRzCwAABn0DAAAEBhdYCgYDMs4CbwUAAAYCbwIAAAYCKAMAAAYq
BioeAigRAAAKKh4CKBIAAAoqABswBwDXAwAAAgAAERcKAnsCAAAEbykAAAYsMwIoEwAAChZyEwAA
cHJFAABwAnsCAAAEbyMAAAZyeQAAcCgUAAAKfhUAAAoWEgBvFgAACgJ7AgAABG8mAAAGAnsCAAAE
bygAAAYCewIAAARvJwAABgJ7AgAABG8lAAAGAnsCAAAEbyQAAAYoFwAACgsHFBRzGAAACgwUDQgC
ewIAAARvIwAABm8ZAAAKDd2CAAAAEwQcjRgAAAETCBEIFnKHAABwohEIFxEEbxoAAApvGwAACqIR
CBhyywAAcKIRCBkRBG8cAAAKohEIGnL3AABwohEIGwhvHQAACigeAAAKohEIKB8AAAoTBQIoEwAA
ChZyHwEAcHJDAQBwEQVypQEAcCgUAAAKfhUAAAoWbyAAAAreAAk5zgEAAAJ7AgAABG8pAAAGOesA
AABzIQAAChMGEQZyrQEAcG8iAAAKJhEGcrcBAHBvIgAACglvIwAACm8iAAAKcukBAHBvIgAACiYR
BnLvAQBwbyIAAAoJbyQAAApvIgAACnLpAQBwbyIAAAomEQZyKQIAcG8iAAAKCW8lAAAKbyIAAApy
6QEAcG8iAAAKJhEGcmkCAHBvIgAACglvJgAACm8iAAAKcukBAHBvIgAACiYRBnKhAgBwbyIAAAoJ
bycAAApvIgAACnLpAQBwbyIAAAomEQZy0wIAcG8iAAAKJgIoEwAAChZyEwAAcBEGbygAAAp+FQAA
ChYSAG8WAAAKAnsDAAAEbx4AAAYCewMAAAQCewIAAARvIwAABm8MAAAGAnsDAAAECW8jAAAKbw4A
AAYCewMAAAQJbyQAAApvEAAABgJ7AwAABAlvJQAACm8SAAAGAnsDAAAECW8mAAAKbxoAAAYCewMA
AAQJbycAAApvHAAABgJ7AwAABAlvJAAACm8UAAAGAnsDAAAEAnsCAAAEbyoAAAZvFgAABgJ7AwAA
BBZvGAAABglvJQAACnLdAgBwKCkAAAo54QAAAAJ7AwAABHLxAgBwbxQAAAY4zAAAAAJ7AgAABG8p
AAAGLBwCKBMAAAoWch8BAHByFQMAcH4VAAAKFm8gAAAKAnsDAAAEbx4AAAYCewMAAAQCewIAAARv
IwAABm8MAAAGAnsDAAAEfhUAAApvDgAABgJ7AwAABH4VAAAKbxAAAAYCewMAAAR+FQAACm8SAAAG
AnsDAAAEfhUAAApvGgAABgJ7AwAABH4VAAAKbxwAAAYCewMAAARyUwMAcG8UAAAGAnsDAAAEAnsC
AAAEbyoAAAZvFgAABgJ7AwAABBdvGAAABt4REwcCEQdvKAAACigJAAAG3gAqAEE0AAAAAAAAigAA
ABcAAAChAAAAggAAACAAAAEAAAAAAAAAAMUDAADFAwAAEQAAACIAAAETMAcAHwAAAAMAABEWCgIo
EwAACgsHF3KxAwBwA3L5AwBwFhIAbyoAAAoqHgIoAQAABioqAgMEBSgrAAAKKiYCFgMoLAAACipa
AywIAhYoLQAACipy+wMAcHMuAAAKeiYCFwMoLAAACipaAywIAhcoLQAACipy+wMAcHMuAAAKeiYC
GAMoLAAACipaAywIAhgoLQAACipy+wMAcHMuAAAKeiYCGQMoLAAACipaAywIAhkoLQAACipy+wMA
cHMuAAAKeiYCGgMoLAAACipaAywIAhooLQAACipy+wMAcHMuAAAKejoCGwOMBwAAASgsAAAKKloD
LAgCGygtAAAKKnL7AwBwcy4AAAp6OgIcA4wmAAABKCwAAAoqWgMsCAIcKC0AAAoqcvsDAHBzLgAA
CnomAh0DKCwAAAoqWgMsCAIdKC0AAAoqcvsDAHBzLgAACnomAh4DKCwAAAoqWgMsCAIeKC0AAAoq
cvsDAHBzLgAACnoeAigvAAAKKh4CKDAAAAoqHgIoMQAACio6AigyAAAKAgN9BAAABCo6AigyAAAK
AgN9BQAABCqWAnsFAAAEbzMAAApymAQAcG80AAAKKDUAAApvNgAACnQYAAABKpYCewUAAARvMwAA
CnK+BABwbzQAAAooNQAACm82AAAKdBgAAAEqlgJ7BQAABG8zAAAKcuwEAHBvNAAACig1AAAKbzYA
AAp0GAAAASqWAnsFAAAEbzMAAApyGAUAcG80AAAKKDUAAApvNgAACnQYAAABKpYCewUAAARvMwAA
CnJGBQBwbzQAAAooNQAACm82AAAKdBgAAAEqlgJ7BQAABG8zAAAKcnYFAHBvNAAACig1AAAKbzYA
AAp0GAAAASqWAnsFAAAEbzMAAApypgUAcG80AAAKKDUAAApvNgAACqUmAAABKpYCewUAAARvMwAA
CnK+BQBwbzQAAAooNQAACm82AAAKpQcAAAEqlgJ7BQAABG83AAAKct4FAHBvNAAACig1AAAKbzYA
AAqlJgAAASqGAnsFAAAEbzcAAApy3gUAcG80AAAKA4wmAAABbzgAAAoqHgIoMgAACioAEzACAC0A
AAAEAAARfgYAAAQtIHIGBgBw0AcAAAIoOgAACm87AAAKczwAAAoKBoAGAAAEfgYAAAQqGn4HAAAE
Kh4CgAcAAAQqGn4IAAAEKi5zMgAABoAIAAAEKh4CKD8AAAoqAAAAAAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAtAkAACN+AAAgCgAApA4AACNTdHJpbmdz
AAAAAMQYAAB4BgAAI1VTADwfAAAQAAAAI0dVSUQAAABMHwAATAIAACNCbG9iAAAAAAAAAAIAAAFX
FaIBCQEAAAD6JTMAFgAAAQAAADEAAAAIAAAACAAAADMAAAAeAAAAPwAAAA8AAAAEAAAABAAAAB4A
AAAgAAAAAQAAAAcAAAABAAAAAAAKAAEAAAAAAAYA7wDOAAYA/wDOAAoAHAEVAQ4AOAEjARIAmQHO
AAYAqAHOAAoAvAIVAQoAPwYuBgoAcAZbBgoAVgc8BwoAgQdvBwoAmAdvBwoAtQdvBwoA1AdvBwoA
7QdvBwoABghvBwoAIQhvBwoAPAhvBwoAVQhvBwoAjghuCAoArghuCAYADQnOABYAgQlYCQoAsAkV
ARoA+gnjCRoADgrjCRoAWQpBChoAZwrjCRoAfArjCRoAtwqSChoA9QrRChoADgvjCRoAJAvjCQoA
XwsVARoAhwvjCQoA0gvGCwoAYQwVAQoAewwVAR4AzgymDB4A9QymDAcADg0AAB4APg2mDAoAng2L
DQoAuw0VAQoAwA0VAQoA5A1vBw4AEA76DQ4AKQ76DQoAPg5uCAAAAAABAAAAAAABAAEAAQAQADIA
AAAFAAEAAQABABAAQAAAAAgABAAGAAEAEABLAAAACQAEAAsAAQAQAFkAAAANAAQAIQABABAAZQAA
AA0ABQAiAAAAEABvAHkADQAGAC0AAAEQAKgAeQARAAgAMQAGAFkAEwAGAGUAFwAGAEsAHwABAIQE
WgABAIQEWgARAE8GbQARAHwGcQARAMAGjwBQIAAAAACGGFABGwABAHAgAAAAAMYBVgEbAAEAciAA
AAAAgQBkARsAAQCQIAAAAADGALYBIwABAOUgAAAAAMYBwgEbAAUA5yAAAAAAxgDWARsABQDvIAAA
AADGAOEBGwAFAPggAAAAAMYAwgEbAAUAECUAAAAAgQDtAS8ABQA7JQAAAACGGFABGwAGAEMlAAAA
AIYYUAE0AAYATiUAAAAAhgj7AS8ACQBYJQAAAACGCAgCPgAKAG8lAAAAAIYIHAIvAAsAeSUAAAAA
hggoAj4ADACQJQAAAACGCDsCLwANAJolAAAAAIYISwI+AA4AsSUAAAAAhghiAi8ADwC7JQAAAACG
CHUCPgAQANIlAAAAAIYIjwIvABEA3CUAAAAAhgiiAj4AEgDzJQAAAACGCMUCQwATAAImAAAAAIYI
2QI+ABQAGSYAAAAAhgj0Aj4AFQAoJgAAAACGCAADPgAWAD8mAAAAAIYIEwMvABcASSYAAAAAhggi
Az4AGABgJgAAAACGCDgDLwAZAGomAAAAAIYIRAM+ABoAgSYAAAAAhgBXAxsAGwCJJgAAAACGAF4D
GwAbAJEmAAAAAIYAbQNJABsAmSYAAAAAhhhQAV4AGwCoJgAAAACGGFABXgAcALcmAAAAAIYIlARk
AB0A3SYAAAAAhgirBGQAHQADJwAAAACGCMYEZAAdACknAAAAAIYI4ARkAB0ATycAAAAAhgj7BGQA
HQB1JwAAAACGCBcFZAAdAJsnAAAAAIYIMwVJAB0AwScAAAAAhghDBWgAHQDnJwAAAACGCFcFSQAd
AA0oAAAAAIYIbwU+AB0ALygAAAAAgxhQARsAHgA4KAAAAACTCIwGdQAeAHEoAAAAAJMIoAZ6AB4A
eCgAAAAAkwisBn8AHgCAKAAAAACWCNAGkwAfAJMoAAAAAIYYUAEbAB8AhygAAAAAkRhZDo8BHwAA
AAEA5AYAAAIA7AYAAAMA9gYAAAQA/gYAAAEACAcAAAEAEQcAAAIAGAcAAAMA/gYAAAEALAcAAAEA
LAcAAAEALAcAAAEALAcAAAEALAcAAAEALAcAAAEALAcAAAEALAcAAAEALAcAAAEALAcAAAEALAcA
AAEALAcAAAEALAcAAAEALAcAAAEALAcAAAEALAcAAAEALAcAAAEALAcAAAEAMgcAAAEAMgcAAAEA
LAcAAAEALAdRAFABLwBZAFABLwBhAFABLwBpAFABLwBxAFABLwB5AFABLwCBAFABLwCJAFABLwCR
AFABLwCZAFABLwChAFABnQCpAFABGwAJAFABGwAJAPAIogAJAPwIqQCxAFABGwAJANYBGwAJAOEB
GwAJAJoJuADBALcJvQDBAL4JxAC5AMQJxwDJACUK2wDZAFAB5QDZAAQL7wABATQL9QAJAU0LZAAR
AWkLZADZAHUL+wAZAaYLAAHBALcJBgG5ALoLDAEhAVABGwAhAeALFQH5AOcLZAD5APMLZAD5AAMM
ZAD5ABYMZAD5ACUMZAAZADEMZADBADoMHAG5AEYMxwARAFABNAARAFAMPgERAFkMnQApAVABLwAR
AFcDGwARAF4DGwARAG0DSQAZAFABGwAJAN8MRAE5AQUNSgEJACkNUQFBAVYNVwEJAGoNRAFBAYEN
XgFZAVABGwBhAdINYwFhAe0NbAFBAFABcgF5AVABfwGJAVABGwAhAFABGwAuABsABgIuAGMALAIu
AAsAkwEuABMA3QEuACMABgIuACsABgIuADMA3QEuADsADAIuAEMABgIuAFsAIwJjAIMAswDjAMsB
swABAfMBswCJA+sBhgGpA+sBhgGvACIBOAF6AQQAAQAGABMABwAcAAgAHgAAAHkDTQAAAIIDUQAA
AJIDTQAAAJoDUQAAAKkDTQAAALUDUQAAAMgDTQAAANcDUQAAAO0DTQAAAPwDUQAAABIEVQAAACIE
UQAAADkEUQAAAEEEUQAAAFAETQAAAFsEUQAAAG0ETQAAAHUEUQAAAIcFTQAAAJoFTQAAALEFTQAA
AMcFTQAAAN4FTQAAAPYFTQAAAA4GUQAAABIEVQAAABoGUQAAAD8GhQAAALgGigAAANwGmAABAAwA
AwABAA0ABQABAA4ABwABAA8ACQABABAACwABABEADQABABIADwABABMAEQABABQAEwABABUAFQAB
ABYAFwABABcAGQABABgAGwABABkAHQABABoAHwABABsAIQABABwAIwABAB0AJQACACMAJwACACQA
KQACACUAKwACACYALQACACcALwACACgAMQACACkAMwACACoANQABACwANwACACsANwACAC4AOQAC
AC8AOwABADAAOwACADEAPQAEgAAAAQAAAAAAAAAAAAAAAADMCAAADgAAAAAAAAAAAAAAAQCxAAAA
AAAEAAAAAAAAAAAAAAAKAAwBAAAAAAQAAAAAAAAAAAAAAAoAFQEAAAAADgAAAAAAAAAAAAAAAQB4
AQAAAAAOAAAAAAAAAAAAAAABADQJAAAAAAEAAAABAAAAAAAAANIA1AkAAAAADgAAAAAAAAAAAAAA
AQCDDAAAAAAAAAAAAQAAAGAOAAAAAAAAADxNb2R1bGU+AFNDXzE4OTYyMWFlZjA2ZjQzMmE4Y2U5
NDM0ZTY4ODRlNzQyLmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4AT3V0cHV0MEJ1ZmZlcgBD
b25uZWN0aW9ucwBWYXJpYWJsZXMAUmVzb3VyY2VzAFNDXzE4OTYyMWFlZjA2ZjQzMmE4Y2U5NDM0
ZTY4ODRlNzQyLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlw
dABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRDb21wb25lbnQAU2NyaXB0
QnVmZmVyAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UALmN0b3IARmluaXNoT3V0cHV0cwBNYXJrT3V0cHV0c0ZpbmlzaGVk
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91dHB1dE5h
bWVNYXAAUHJpbWVPdXRwdXQAQ3JlYXRlTmV3T3V0cHV0Um93cwBQcmVFeGVjdXRlAFBvc3RFeGVj
dXRlAEZhaWxDb21wb25lbnQAc2V0X1BPTnVtYmVyAHNldF9QT051bWJlcl9Jc051bGwAc2V0X09y
ZGVySWQAc2V0X09yZGVySWRfSXNOdWxsAHNldF9PcmRlclN0YXR1cwBzZXRfT3JkZXJTdGF0dXNf
SXNOdWxsAHNldF9TaGlwbWVudFN0YXR1cwBzZXRfU2hpcG1lbnRTdGF0dXNfSXNOdWxsAHNldF9F
SUdsb2JhbFN0YXR1cwBzZXRfRUlHbG9iYWxTdGF0dXNfSXNOdWxsAERhdGVUaW1lAHNldF9TU0lT
UnVuSW5zdGFuY2UAc2V0X1NTSVNSdW5JbnN0YW5jZV9Jc051bGwAc2V0X0lzRXJyb3IAc2V0X0lz
RXJyb3JfSXNOdWxsAHNldF9UcmFja2luZ05vAHNldF9UcmFja2luZ05vX0lzTnVsbABzZXRfQ2Fy
cmllcgBzZXRfQ2Fycmllcl9Jc051bGwAQWRkUm93AFNldEVuZE9mUm93c2V0AEVuZE9mUm93c2V0
AFBPTnVtYmVyAFBPTnVtYmVyX0lzTnVsbABPcmRlcklkAE9yZGVySWRfSXNOdWxsAE9yZGVyU3Rh
dHVzAE9yZGVyU3RhdHVzX0lzTnVsbABTaGlwbWVudFN0YXR1cwBTaGlwbWVudFN0YXR1c19Jc051
bGwARUlHbG9iYWxTdGF0dXMARUlHbG9iYWxTdGF0dXNfSXNOdWxsAFNTSVNSdW5JbnN0YW5jZQBT
U0lTUnVuSW5zdGFuY2VfSXNOdWxsAElzRXJyb3IASXNFcnJvcl9Jc051bGwAVHJhY2tpbmdObwBU
cmFja2luZ05vX0lzTnVsbABDYXJyaWVyAENhcnJpZXJfSXNOdWxsAFBhcmVudENvbXBvbmVudABn
ZXRfQ3VycmVudE9yZGVySGFuZGxlAGdldF9FSUdsb2JhbFNlcnZpY2VBY2NvdW50AGdldF9FSUds
b2JhbFNlcnZpY2VBUElLZXkAZ2V0X0VJR2xvYmFsU2VydmljZUNvcmVVUkkAZ2V0X0VJR2xvYmFs
U2VydmljZVBhc3N3b3JkAGdldF9FSUdsb2JhbFNlcnZpY2VVc2VyTmFtZQBnZXRfSXNEZWJ1Z01v
ZGUAZ2V0X1NTSVNSdW5JbnN0YW5jZQBnZXRfRmFpbGVkR2V0U3RhdHVzQ2FsbABzZXRfRmFpbGVk
R2V0U3RhdHVzQ2FsbABDdXJyZW50T3JkZXJIYW5kbGUARUlHbG9iYWxTZXJ2aWNlQWNjb3VudABF
SUdsb2JhbFNlcnZpY2VBUElLZXkARUlHbG9iYWxTZXJ2aWNlQ29yZVVSSQBFSUdsb2JhbFNlcnZp
Y2VQYXNzd29yZABFSUdsb2JhbFNlcnZpY2VVc2VyTmFtZQBJc0RlYnVnTW9kZQBGYWlsZWRHZXRT
dGF0dXNDYWxsAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5
c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQAT3V0cHV0cwBPdXRwdXRJRHMAQnVmZmVycwBPdXRwdXRNYXAA
ZXJyb3JNc2cAQnVmZmVyAEJ1ZmZlckNvbHVtbkluZGV4ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZs
ZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlW
ZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ18x
ODk2MjFhZWYwNmY0MzJhOGNlOTQzNGU2ODg0ZTc0MgBHZXRPdXRwdXRJRABHZXRDb2x1bW5JbmRl
eGVzAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldy
YXBwZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBTdHJp
bmcAQ29uY2F0AEVtcHR5AEZpcmVJbmZvcm1hdGlvbgBJbnZlbnRvcnlQcm94eQBJbnZlbnRvcnlQ
cm94eS5VdGlsaXR5AEFjY2Vzc0NvbmZpZ3VyYXRpb24AQWNjZXNzQ29uZmlndXJhdGlvbkR0bwBC
dWlsZEFjY2Vzc0NvbmZpZ3VyYXRpb25EdG8ASW52ZW50b3J5UHJveHkuRUlHbG9iYWwARUlHbG9i
YWxQcm94eQBJQWNjZXNzQ29uZmlndXJhdGlvbgBJUmVzdGZ1bFNlcnZpY2VDbGllbnQASW52ZW50
b3J5UHJveHkuRUlHbG9iYWwuUGFyYW1ldGVyRHRvAElFSUdsb2JhbFBhcmFtZXRlckJ1aWxkZXIA
SW52ZW50b3J5UHJveHkuRUlHbG9iYWwuUmVzcG9uc2VEdG8AT3JkZXJTdGF0dXNEdG8AR2V0U3Rh
dHVzAEpzb25SZXNwb25zZUV4Y2VwdGlvbgBKc29uUmVzcG9uc2VEdG8AZ2V0X09yaWdpbmFsSnNv
blJlc3BvbnNlAGdldF9Kc29uUGxhaW50ZXh0AEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBnZXRfQ29u
ZmlndXJhdGlvbgBJQWNjZXNzQ29uZmlndXJhdGlvbkV4dGVuc2lvbnMAVG9EZXNjcmlwdGl2ZVN0
cmluZwBGaXJlV2FybmluZwBTeXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAEFwcGVuZABnZXRfT3Jk
ZXJJZABnZXRfT3JkZXJTdGF0dXMAZ2V0X1NoaXBtZW50U3RhdHVzAGdldF9UcmFja2luZ05vAGdl
dF9DYXJyaWVyAFRvU3RyaW5nAG9wX0VxdWFsaXR5AEZpcmVFcnJvcgBzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AQm9vbGVhbgBNaWNyb3NvZnQuU3FsU2VydmVyLkRU
U1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRT
VmFyaWFibGVzMTAwAGdldF9SZWFkT25seVZhcmlhYmxlcwBJRFRTVmFyaWFibGUxMDAAZ2V0X0l0
ZW0AU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASURUU0V2
YWx1YXRvckNvbnRleHQxMDAAR2V0VmFsdWVXaXRoQ29udGV4dABnZXRfUmVhZFdyaXRlVmFyaWFi
bGVzAHNldF9WYWx1ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdl
dF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBT
Q18xODk2MjFhZWYwNmY0MzJhOGNlOTQzNGU2ODg0ZTc0Mi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMAAAARTwB1AHQAcAB1AHQAIAAwAAAxRABFAEIAVQBHADoAOgBHAGUAdAAgAFMAdABh
AHQAdQBzACAAUwBjAHIAaQBwAHQAADMqACoAKgAgAEMAdQByAHIAZQBuAHQATwByAGQAZQByAEgA
YQBuAGQAbABlADoAIAAnAAENJwAuACAAKgAqACoAAUNQAHIAbwBiAGwAZQBtAHMAIAB3AGkAdABo
ACAASgBTAE8ATgAsACAAbwBuACAAbQBlAHMAcwBhAGcAZQA6ACAAJwABKycALgAuAC4AIAAKAAoA
CgAgAC4ALgAuAE0AZQBzAHMAYQBnAGUAOgAgAAEnLgAuAC4AIAAKACAALgAuAC4AZwBvAGkAbgBn
ACAAdABvADoAIAAAI0cAZQB0ACAAUwB0AGEAdAB1AHMAIABTAGMAcgBpAHAAdAAAYSoAKgAqACAA
RQB4AGMAZQBwAHQAaQBvAG4AIAB0AGgAcgBvAHcAbgAgAGMAYQBsAGwAaQBuAGcAIABwAHIAbwB4
AHkALgBHAGUAdABTAHQAYQB0AHUAcwAoACkAOgAgAAAHKgAqACoAAAkqACoAKgAgAAAxcwBlAHIA
dgBpAGMAZQBSAGUAcwB1AGwAdAAuAE8AcgBkAGUAcgBJAGQAOgAgACcAAQUnACwAATlzAGUAcgB2
AGkAYwBlAFIAZQBzAHUAbAB0AC4ATwByAGQAZQByAFMAdABhAHQAdQBzADoAIAAnAAE/cwBlAHIA
dgBpAGMAZQBSAGUAcwB1AGwAdAAuAFMAaABpAHAAbQBlAG4AdABTAHQAYQB0AHUAcwA6ACAAJwAB
N3MAZQByAHYAaQBjAGUAUgBlAHMAdQBsAHQALgBUAHIAYQBjAGsAaQBuAGcATgBvADoAIAAnAAEx
cwBlAHIAdgBpAGMAZQBSAGUAcwB1AGwAdAAuAEMAYQByAHIAaQBlAHIAOgAgACcAAQkgACoAKgAq
AAATUwBDAEgARQBEAFUATABFAEQAACNTAGgAaQBwAHAAZQBkACAAVABvACAAQwBlAG4AdABlAHIA
AD0qACoAKgAgAHMAZQByAHYAaQBjAGUAUgBlAHMAdQBsAHQAIABpAHMAIABuAHUAbABsAC4AIAAq
ACoAKgAAXSoAKgAqACAARQByAHIAbwByACAAZwBlAHQAdABpAG4AZwAgAHMAdABhAHQAdQBzACAA
ZgByAG8AbQAgAEQAaQBzAHQAcgBpAGIAdQB0AG8AcgAuACAAKgAqACoAAEdFAHIAcgBvAHIAIABH
AGUAdAB0AGkAbgBnACAARABhAHQAYQAgAEYAcgBvAG0AIABXAGUAYgBzAGUAcgB2AGkAYwBlACEA
AAEAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAA
cwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAg
AHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AACVDAHUAcgByAGUA
bgB0AE8AcgBkAGUAcgBIAGEAbgBkAGwAZQAALUUASQBHAGwAbwBiAGEAbABTAGUAcgB2AGkAYwBl
AEEAYwBjAG8AdQBuAHQAACtFAEkARwBsAG8AYgBhAGwAUwBlAHIAdgBpAGMAZQBBAFAASQBLAGUA
eQAALUUASQBHAGwAbwBiAGEAbABTAGUAcgB2AGkAYwBlAEMAbwByAGUAVQBSAEkAAC9FAEkARwBs
AG8AYgBhAGwAUwBlAHIAdgBpAGMAZQBQAGEAcwBzAHcAbwByAGQAAC9FAEkARwBsAG8AYgBhAGwA
UwBlAHIAdgBpAGMAZQBVAHMAZQByAE4AYQBtAGUAABdJAHMARABlAGIAdQBnAE0AbwBkAGUAAB9T
AFMASQBTAFIAdQBuAEkAbgBzAHQAYQBuAGMAZQAAJ0YAYQBpAGwAZQBkAEcAZQB0AFMAdABhAHQA
dQBzAEMAYQBsAGwAAHFTAEMAXwAxADgAOQA2ADIAMQBhAGUAZgAwADYAZgA0ADMAMgBhADgAYwBl
ADkANAAzADQAZQA2ADgAOAA0AGUANwA0ADIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAAIvXrrNScmtLiTYyktXBkAwACImEXc2AgMyRCLd6XFYZNOCJAwYSFAMGEhgD
IAABAwYSEAsgBAEIHQgdEhUSGQQgAQEOCSADARIVHQgSGQQgAQECBSABAREdAyAAAgMoAA4DKAAC
BCgAER0DBhIFBSABARIFAyAADgQgABEdAwYSIQMGEiUEAAASIQQAABIlBQABARIlBAgAEiEECAAS
JQMGEiAEAAASIAQIABIgBCABAQgGAAIIEhkOBSABHQgIAwcBCAQBAAAABCAAEl0GAAMODg4OAgYO
CiAGAQgODg4IEAIIqqSHqYwTH1YJAAUSaQ4ODg4OCSADARJxEnUSeQUgARJ9DgUgABKAhQQgABJx
BQABDhJxBQABDh0OCCAFAQgODg4IBiABEoCRDgUAAgIODhUHCQISaRJtEn0SgIEOEoCREoCJHQ4F
BwICEl0FIAIBCBwFIAASgJ0GIAESgKEcBQAAEoClBiABHBKAqQQgAQEcCAABEoCxEYC1BSAAEoC5
ByACAQ4SgLkEBwESIQYgAQERgMEIAQACAAAAAAADAAABSQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUoAQAjU0Nf
MTg5NjIxYWVmMDZmNDMyYThjZTk0MzRlNjg4NGU3NDIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAxNwAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAYSwAAAAAAAAAA
AAAuSwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIEsAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACAAwAA
AAAAAAAAAACAAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE4AIA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAvAIAAAEAMAAwADAAMAAwADQAYgAwAAAA
cAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADEAOAA5ADYAMgAx
AGEAZQBmADAANgBmADQAMwAyAGEAOABjAGUAOQA0ADMANABlADYAOAA4ADQAZQA3ADQAMgAAADAA
CAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0
AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMQA4ADkANgAyADEAYQBlAGYAMAA2AGYANAAzADIA
YQA4AGMAZQA5ADQAMwA0AGUANgA4ADgANABlADcANAAyAC4AZABsAGwAAABIABIAAQBMAGUAZwBh
AGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADcA
AAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMQA4ADkANgAy
ADEAYQBlAGYAMAA2AGYANAAzADIAYQA4AGMAZQA5ADQAMwA0AGUANgA4ADgANABlADcANAAyAC4A
ZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADEAOAA5ADYAMgAx
AGEAZQBmADAANgBmADQAMwAyAGEAOABjAGUAOQA0ADMANABlADYAOAA4ADQAZQA3ADQAMgAAADQA
CAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBB
AHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAEA7AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_189621aef06f432a8ce9434e6884e742</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::CurrentOrderHandle,User::SSISRunInstance,$Package::EIGlobalServiceAccount,$Package::EIGlobalServiceAPIKey,$Package::EIGlobalServiceCoreURI,$Package::EIGlobalServicePassword,$Package::EIGlobalServiceUserName,$Package::IsDebugMode</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::FailedGetStatusCall</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">D5</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[PONumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[PONumber]"
                              name="PONumber" />
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[OrderId]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[OrderId]"
                              name="OrderId" />
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[OrderStatus]"
                              codePage="1252"
                              dataType="str"
                              length="30"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[OrderStatus]"
                              name="OrderStatus" />
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[ShipmentStatus]"
                              codePage="1252"
                              dataType="str"
                              length="30"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[ShipmentStatus]"
                              name="ShipmentStatus" />
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[EIGlobalStatus]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[EIGlobalStatus]"
                              name="EIGlobalStatus" />
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[SSISRunInstance]"
                              dataType="dbTimeStamp"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[SSISRunInstance]"
                              name="SSISRunInstance" />
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[IsError]"
                              dataType="bool"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[IsError]"
                              name="IsError" />
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[TrackingNo]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[TrackingNo]"
                              name="TrackingNo" />
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[Carrier]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[Carrier]"
                              name="Carrier" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="tmpInventoryPurchaseOrderStatus"
                      usesDispositions="true"
                      validateExternalMetadata="False"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[tmpInventoryPurchaseOrderStatus]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[HCFM DB]"
                          connectionManagerRefId="Package.ConnectionManagers[HCFM DB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].Columns[Copy of OrderStatus]"
                              cachedDataType="wstr"
                              cachedLength="30"
                              cachedName="Copy of OrderStatus"
                              externalMetadataColumnId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[OrderStatus]"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of OrderStatus]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].Columns[Copy of ShipmentStatus]"
                              cachedDataType="wstr"
                              cachedLength="30"
                              cachedName="Copy of ShipmentStatus"
                              externalMetadataColumnId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[ShipmentStatus]"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ShipmentStatus]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].Columns[Copy of EIGlobalStatus]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="Copy of EIGlobalStatus"
                              externalMetadataColumnId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[EIGlobalStatus]"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EIGlobalStatus]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].Columns[Copy of SSISRunInstance]"
                              cachedDataType="date"
                              cachedName="Copy of SSISRunInstance"
                              externalMetadataColumnId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[SSISRunInstance]"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SSISRunInstance]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].Columns[Copy of PONumber]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="Copy of PONumber"
                              externalMetadataColumnId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[PONumber]"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PONumber]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].Columns[Copy of OrderId]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="Copy of OrderId"
                              externalMetadataColumnId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[OrderId]"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of OrderId]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].Columns[Copy of IsError]"
                              cachedDataType="bool"
                              cachedName="Copy of IsError"
                              externalMetadataColumnId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[IsError]"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of IsError]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].Columns[TrackingNo]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="TrackingNo"
                              externalMetadataColumnId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[TrackingNumber]"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[TrackingNo]" />
                            <inputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].Columns[Carrier]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="Carrier"
                              externalMetadataColumnId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[Carrier]"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0].Columns[Carrier]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[OrderStatus]"
                              dataType="wstr"
                              length="30"
                              name="OrderStatus" />
                            <externalMetadataColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[ShipmentStatus]"
                              dataType="wstr"
                              length="30"
                              name="ShipmentStatus" />
                            <externalMetadataColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[EIGlobalStatus]"
                              dataType="wstr"
                              length="100"
                              name="EIGlobalStatus" />
                            <externalMetadataColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[SSISRunInstance]"
                              dataType="dbTimeStamp"
                              name="SSISRunInstance" />
                            <externalMetadataColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[PONumber]"
                              dataType="wstr"
                              length="50"
                              name="PONumber" />
                            <externalMetadataColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[OrderId]"
                              dataType="wstr"
                              length="50"
                              name="OrderId" />
                            <externalMetadataColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[IsError]"
                              dataType="bool"
                              name="IsError" />
                            <externalMetadataColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[TrackingNumber]"
                              dataType="wstr"
                              length="100"
                              name="TrackingNumber" />
                            <externalMetadataColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input].ExternalColumns[Carrier]"
                              dataType="wstr"
                              length="100"
                              name="Carrier" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load.Paths[Data Conversion Output]"
                      endId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus.Inputs[OLE DB Destination Input]"
                      name="Data Conversion Output"
                      startId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load.Paths[Output 0]"
                      endId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion.Inputs[Data Conversion Input]"
                      name="Output 0"
                      startId="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus.Outputs[Output 0]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{3D14A3FE-69FE-44E6-AA05-AC7E8DEC3C2F}"
              DTS:ObjectName="{3D14A3FE-69FE-44E6-AA05-AC7E8DEC3C2F}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::CurrentOrderHandle" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Update Purchase Order Status\Pull orders active at distributor"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8DB44EF1-15CA-4399-A4CE-2928709B32BF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Pull orders active at distributor"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E982EFA2-67A2-4B8E-82A9-CB0D9F5D4829}"
              SQLTask:SqlStatementSource="--Determine the center to pull for&#xA;DECLARE @EIGlobalCenterId bigint;&#xA;SET @EIGlobalCenterId = ?;&#xA;&#xA;--Pull all purchase orders currently active for that distributor center&#xA;SELECT &#xA;&#x9;dpo.[PurchaseOrderNumber] AS OrderHandle&#xA;FROM &#xA;&#x9;[datDistributorPurchaseOrder] dpo&#xA;INNER JOIN &#xA;&#x9;[lkpDistributorPurchaseOrderStatus] dpos ON dpos.[DistributorPurchaseOrderStatusID] = dpo.[DistributorPurchaseOrderStatusID]&#xA;WHERE &#xA;&#x9;dpos.[IsActiveAtDistributor] = 1&#xA;&#x9;AND dpo.[DistributorCenterID] = @EIGlobalCenterId&#xA;&#x9;AND dpo.[PurchaseOrderNumber] IS NOT NULL;"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::OpenPurchaseOrders" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::EIGlobalCenterId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Update Purchase Order Status.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D50C33DD-DE94-4DF6-BB6E-47289CF6A4F5}"
          DTS:From="Package\Update Purchase Order Status\Create temp tables - PO"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Update Purchase Order Status\Pull orders active at distributor" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Update Purchase Order Status.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{F7164E81-AA97-47AC-A0B6-7DF94A2AB108}"
          DTS:From="Package\Update Purchase Order Status\Pull orders active at distributor"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Update Purchase Order Status\Foreach active purchase order" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Update Purchase Order Status.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{CE0D5F46-8DFE-4B63-B3ED-48709BF7DBEE}"
          DTS:From="Package\Update Purchase Order Status\Foreach active purchase order"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Update Purchase Order Status\Compile Purchase Order Updates" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Update Purchase Order Status.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{467A72DE-CBD2-469D-B5FE-37AC7084C9D0}"
          DTS:From="Package\Update Purchase Order Status\Compile Purchase Order Updates"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Update Purchase Order Status\Drop temp tables - PO" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ValidatePackage"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{8D364EEE-723D-4B11-A9AA-B454A4E6CD5C}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ValidatePackage"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_34f9144be6ca473d9d69dc3f091fa432"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::FailedGetStatusCall">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_34f9144be6ca473d9d69dc3f091fa432.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{27741c2d-d2fc-4803-840c-fb426ea2db55}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_34f9144be6ca473d9d69dc3f091fa432</RootNamespace>
    <AssemblyName>ST_34f9144be6ca473d9d69dc3f091fa432</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_34f9144be6ca473d9d69dc3f091fa432.Properties.Settings.get_Default():ST_34f9144be6ca473d9d69dc3f091fa432.Properties.Sett" +
    "ings")]

namespace ST_34f9144be6ca473d9d69dc3f091fa432.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_34f9144be6ca473d9d69dc3f091fa432
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            bool FailedGetStatusCall = (bool)Dts.Variables["User::FailedGetStatusCall"].Value;
            if (FailedGetStatusCall)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
                FailComponent("One or more calls to GetStatus have failed.  Please see Integration Services Catalog messages for more details.");
            }

			Dts.TaskResult = (int)ScriptResults.Success;
		}
       
        
        /// <summary>
        /// Outputs error message
        /// </summary>
        /// <param name="errorMsg">Full error text</param>
        private void FailComponent(string errorMsg)
        {
            Dts.Events.FireError(1, "Error Getting Status From Webservice!", errorMsg, "", 0);
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_34f9144be6ca473d9d69dc3f091fa432</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_34f9144be6ca473d9d69dc3f091fa432</msb:DisplayName>
		<msb:ProjectId>{1AD13291-1765-400D-8919-7670F8D7819D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_34f9144be6ca473d9d69dc3f091fa432.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_34f9144be6ca473d9d69dc3f091fa432")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_34f9144be6ca473d9d69dc3f091fa432")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_34f9144be6ca473d9d69dc3f091fa432.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_34f9144be6ca473d9d69dc3f091fa432.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_34f9144be6ca473d9d69dc3f091fa432.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_34f9144be6ca473d9d69dc3f091fa432.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_34f9144be6ca473d9d69dc3f091fa432.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_34f9144be6ca473d9d69dc3f091fa432.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGbE+lsAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAzi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIAvAABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1A8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
LwAAAAAAAEgAAAACAAUA8CEAAJANAAABAAAAAAAAADghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgBHAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKpR4A
AAEKBiwXAigWAAAKF28aAAAKAnKnAABwKAkAAAYCKBYAAAoWbxoAAAoqfgIoFgAACm8bAAAKF3KI
AQBwA3LUAQBwFm8cAAAKJioeAigdAAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAA5AMAACN+AABQBAAA7AUAACNTdHJpbmdzAAAAADwKAADYAQAAI1VT
ABQMAAAQAAAAI0dVSUQAAAAkDAAAbAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAA
AQAAAB8AAAAFAAAABgAAAAoAAAACAAAAHQAAAAIAAAAPAAAAAgAAAAIAAAADAAAABAAAAAEAAAAE
AAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsB
BgBuAlQCBgCZAocCBgCwAocCBgDNAocCBgDsAocCBgAFA4cCBgAeA4cCBgA5A4cCBgBUA4cCBgBt
A4cCBgCmA4YDBgDGA4YDBgD3A+QDBgAUBLoABgAZBLoABgA9BIcCCgBpBFMECgCCBFMEBgCXBIYD
DgC5BBQBDgDbBBQBEgA0BRQFEgBMBRQFBgBoBboADgB/BRQBAAAAAAEAAAAAAAEAAQAAABAAMgA8
AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAALABEAfwETABEA
rAEXABEA9gE5AAYGLQJMAFaANQJPAFaAPQJPAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCR
IAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcg
AAAAAJEYsgSJAAIAvCAAAAAAhgAaAhsAAgAPIQAAAACBAB8CRwACAC8hAAAAAIYYvAEbAAMAAAAB
AEUCAAABAEsCOQC8AUcAQQC8AUcASQC8AUcAUQC8AUcAWQC8AUcAYQC8AUcAaQC8AUcAcQC8AUcA
eQC8AUcAgQC8AUcAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQArBGIAoQBGBGkAKQC8AW4AuQC8
AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDtBI0A2QA+BZIA4QBVBZcA6QBeBZ0A2QBwBV0A2QCTBaUA
+QCeBaoAGQC8ARsACAAUAFMACAAYAFgAKQCTAIAALgAbACYBLgAjACYBLgBjAEwBLgALALMALgAT
AP0ALgAzAP0ALgArACYBLgA7ACwBLgBDACYBLgBbAEMBQwBrAFgASQCTAIAAYQCbAFgAgwCrAFgA
dQChAAIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAA
AAEAAAD3GgtMAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAA
AAAOAAAAAAAAAAAAAAAKAPUAAAAAAA4AAAAAAAAAAAAAAAoA9QQAAAAAAAAAAAEAAACoBQAABQAE
AAAAADxNb2R1bGU+AFNUXzM0ZjkxNDRiZTZjYTQ3M2Q5ZDY5ZGMzZjA5MWZhNDMyLmRsbABSZXNv
dXJjZXMAU1RfMzRmOTE0NGJlNmNhNDczZDlkNjlkYzNmMDkxZmE0MzIuUHJvcGVydGllcwBTZXR0
aW5ncwBTY3JpcHRNYWluAFNUXzM0ZjkxNDRiZTZjYTQ3M2Q5ZDY5ZGMzZjA5MWZhNDMyAFNjcmlw
dFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2Rl
bEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0
X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJ
bnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4ARmFpbENvbXBvbmVudAB2YWx1ZV9fAFN1
Y2Nlc3MARmFpbHVyZQB2YWx1ZQBlcnJvck1zZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9i
amVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUA
Z2V0X0l0ZW0AZ2V0X1ZhbHVlAEJvb2xlYW4Ac2V0X1Rhc2tSZXN1bHQARXZlbnRzT2JqZWN0V3Jh
cHBlcgBnZXRfRXZlbnRzAEZpcmVFcnJvcgBTVF8zNGY5MTQ0YmU2Y2E0NzNkOWQ2OWRjM2YwOTFm
YTQzMi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAABxUwBUAF8AMwA0AGYAOQAxADQA
NABiAGUANgBjAGEANAA3ADMAZAA5AGQANgA5AGQAYwAzAGYAMAA5ADEAZgBhADQAMwAyAC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAzVQBzAGUAcgA6ADoARgBhAGkA
bABlAGQARwBlAHQAUwB0AGEAdAB1AHMAQwBhAGwAbAAAgN9PAG4AZQAgAG8AcgAgAG0AbwByAGUA
IABjAGEAbABsAHMAIAB0AG8AIABHAGUAdABTAHQAYQB0AHUAcwAgAGgAYQB2AGUAIABmAGEAaQBs
AGUAZAAuACAAIABQAGwAZQBhAHMAZQAgAHMAZQBlACAASQBuAHQAZQBnAHIAYQB0AGkAbwBuACAA
UwBlAHIAdgBpAGMAZQBzACAAQwBhAHQAYQBsAG8AZwAgAG0AZQBzAHMAYQBnAGUAcwAgAGYAbwBy
ACAAbQBvAHIAZQAgAGQAZQB0AGEAaQBsAHMALgAAS0UAcgByAG8AcgAgAEcAZQB0AHQAaQBuAGcA
IABTAHQAYQB0AHUAcwAgAEYAcgBvAG0AIABXAGUAYgBzAGUAcgB2AGkAYwBlACEAAAEAAACFgTPs
FXXCRJtM+fujXVuXAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEB
EhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwEIAEBDgIGCAMGERQEAAAAAAQBAAAABCABAQgGAAES
URFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQUgARJ1HAMg
ABwDBwECBCAAEn0IIAUCCA4ODghJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNSgBACNTVF8zNGY5MTQ0YmU2Y2E0
NzNkOWQ2OWRjM2YwOTFmYTQzMgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4AAAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAKgvAAAAAAAAAAAAAL4vAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAACwLwAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQALTPcaAAABAAtM9xo/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AMwA0AGYAOQAxADQANABiAGUANgBjAGEANAA3ADMAZAA5AGQANgA5AGQAYwAzAGYAMAA5ADEA
ZgBhADQAMwAyAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAOQAw
ADMALgAxADkANAA2ADcAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
MwA0AGYAOQAxADQANABiAGUANgBjAGEANAA3ADMAZAA5AGQANgA5AGQAYwAzAGYAMAA5ADEAZgBh
ADQAMwAyAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADgAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AMwA0AGYAOQAxADQANABiAGUANgBjAGEANAA3ADMAZAA5AGQA
NgA5AGQAYwAzAGYAMAA5ADEAZgBhADQAMwAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADMANABmADkAMQA0ADQAYgBlADYAYwBhADQANwAzAGQAOQBkADYA
OQBkAGMAMwBmADAAOQAxAGYAYQA0ADMAMgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgA5ADAAMwAuADEAOQA0ADYANwAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA5ADAAMwAuADEAOQA0ADYANwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADQPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{7E6B152D-1ED8-4159-B88E-BCE4B969858D}"
      DTS:From="Package\Set SSISRunInstance"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Update Distribution Center Inventory" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{B9CEBA2F-F3E1-4215-B76F-21F7FFD19478}"
      DTS:From="Package\Update Distribution Center Inventory"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Update Purchase Order Status" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{09FF2CA2-B3C7-4FCF-8DC6-57D67A75440E}"
      DTS:From="Package\Update Purchase Order Status"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\ValidatePackage" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="178,42"
          Id="Package\Set SSISRunInstance"
          TopLeft="225.634925792547,22.6235303040603" />
        <NodeLayout
          Size="221,42"
          Id="Package\Update Distribution Center Inventory\Compile Inventory Differences"
          TopLeft="52.1904788957972,307.69020134641" />
        <NodeLayout
          Size="229,42"
          Id="Package\Update Distribution Center Inventory\Create Temp Tables - Inventory"
          TopLeft="34.2857167769452,19.5764729047729" />
        <NodeLayout
          Size="211,42"
          Id="Package\Update Distribution Center Inventory\Drop temp table - Inventory"
          TopLeft="49.700682969089,613.121573918309" />
        <NodeLayout
          Size="157,42"
          Id="Package\Update Distribution Center Inventory\For each New Product\Build Email Body"
          TopLeft="37.3714317827809,16.5490231684472" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="234,75"
          Size="234,118"
          Id="Package\Update Distribution Center Inventory\For each New Product"
          TopLeft="42.761907340718,388.572555368637" />
        <NodeLayout
          Size="185,42"
          Id="Package\Update Distribution Center Inventory\Get Global EI CenterId"
          TopLeft="59.4444444444445,95.1111111111111" />
        <NodeLayout
          Size="193,42"
          Id="Package\Update Distribution Center Inventory\getBalance Service Load"
          TopLeft="61.6190505189961,238.172553326652" />
        <NodeLayout
          Size="189,42"
          Id="Package\Update Distribution Center Inventory\Notify on new products"
          TopLeft="58.680274958745,544.982635492328" />
        <NodeLayout
          Size="182,42"
          Id="Package\Update Distribution Center Inventory\Take Before Snapshot"
          TopLeft="61.6190505189961,162.313728733349" />
        <EdgeLayout
          Id="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint]"
          TopLeft="150.365080610695,61.5764729047729">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.5346382063382"
              Start="0,0"
              End="0,26.0346382063382">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.0346382063382" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint 1]"
          TopLeft="155.369050518996,204.313728733349">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.858824593303"
              Start="0,0"
              End="0,26.358824593303">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.358824593303" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint 2]"
          TopLeft="160.404764707397,280.172553326652">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.517648019758"
              Start="0,0"
              End="0,20.017648019758">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.017648019758" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint 3]"
          TopLeft="161.226193118257,349.69020134641">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.882354022227"
              Start="0,0"
              End="0,31.382354022227">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.382354022227" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint 4]"
          TopLeft="156.521091149731,506.972555368637">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.0100801236906"
              Start="0,0"
              End="0,30.5100801236906">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5100801236906" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint 5]"
          TopLeft="154.190478963917,586.582635492328">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.538938425981"
              Start="0,0"
              End="0,19.038938425981">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.038938425981" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update Distribution Center Inventory.PrecedenceConstraints[Constraint 6]"
          TopLeft="152.28174748172,137.111111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.2026176222378"
              Start="0,0"
              End="0,17.7026176222378">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.7026176222378" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="396,710"
          Size="396,753"
          Id="Package\Update Distribution Center Inventory"
          TopLeft="115.000001907349,103.321570660856" />
        <NodeLayout
          Size="234,42"
          Id="Package\Update Purchase Order Status\Compile Purchase Order Updates"
          TopLeft="24.03810537494,320.752944837172" />
        <NodeLayout
          Size="192,42"
          Id="Package\Update Purchase Order Status\Create temp tables - PO"
          TopLeft="41.1809628097383,23.5764724185861" />
        <NodeLayout
          Size="184,42"
          Id="Package\Update Purchase Order Status\Drop temp tables - PO"
          TopLeft="48.8000105585371,398.635299394205" />
        <NodeLayout
          Size="182,42"
          Id="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load"
          TopLeft="32.7619154015368,23.0745134074245" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="245,87"
          Size="245,130"
          Id="Package\Update Purchase Order Status\Foreach active purchase order"
          TopLeft="21.18096246914,166.321572459748" />
        <NodeLayout
          Size="222,42"
          Id="Package\Update Purchase Order Status\Pull orders active at distributor"
          TopLeft="25.9428673121396,93.9294145817301" />
        <EdgeLayout
          Id="Package\Update Purchase Order Status.PrecedenceConstraints[Constraint]"
          TopLeft="137.161915060939,65.1764724185861">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.752942163144"
              Start="0,0"
              End="0,21.252942163144">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.252942163144" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update Purchase Order Status.PrecedenceConstraints[Constraint 1]"
          TopLeft="140.36191489064,135.52941458173">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.7921578780178"
              Start="0,0"
              End="0,23.2921578780178">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.2921578780178" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update Purchase Order Status.PrecedenceConstraints[Constraint 2]"
          TopLeft="142.20953392204,295.921572459748">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.8313723774243"
              Start="0,0"
              End="0,17.3313723774243">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.3313723774243" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update Purchase Order Status.PrecedenceConstraints[Constraint 3]"
          TopLeft="140.819057966739,362.352944837172">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.282354557033"
              Start="0,0"
              End="0,28.782354557033">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.782354557033" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="282,458"
          Size="282,501"
          Id="Package\Update Purchase Order Status"
          TopLeft="616.873025604387,235.941178615531" />
        <NodeLayout
          Size="155,42"
          Id="Package\ValidatePackage"
          TopLeft="1005.5,467.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="313.817463849948,64.6235303040603">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.6980403567956"
              Start="0,0"
              End="0,31.1980403567956">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.1980403567956" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="511.000001907349,483.131374638194">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="105.873023697038,0"
              Start="0,0"
              End="98.373023697038,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="98.373023697038,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="898.873025604387,487.470589307766">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="106.626974395613,0"
              Start="0,0"
              End="99.126974395613,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="99.126974395613,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Update Distribution Center Inventory\getBalance Service Load">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="262,42"
          Id="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter"
          TopLeft="147.428573939265,178.63529662294" />
        <NodeLayout
          Size="155,42"
          Id="Package\Update Distribution Center Inventory\getBalance Service Load\Data Conversion"
          TopLeft="205.714289217579,103.388236744099" />
        <NodeLayout
          Size="130,42"
          Id="Package\Update Distribution Center Inventory\getBalance Service Load\getBalance"
          TopLeft="211.857146311779,30.2000004375682" />
        <EdgeLayout
          Id="Package\Update Distribution Center Inventory\getBalance Service Load.Paths[Output 0]"
          TopLeft="280.035717764679,72.2000004375682">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.1882363065308"
              Start="0,0"
              End="0,23.6882363065308">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.6882363065308" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update Distribution Center Inventory\getBalance Service Load.Paths[Data Conversion Output]"
          TopLeft="280.971431578422,144.988236744099">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.647059878841"
              Start="0,0"
              End="0,26.147059878841">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.147059878841" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Update Distribution Center Inventory\getBalance Service Load\tmpInventorySalesCodeDistributorAfter">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="242,42"
          Id="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus"
          TopLeft="270.4,186.8" />
        <NodeLayout
          Size="155,42"
          Id="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\Data Conversion"
          TopLeft="320,112" />
        <NodeLayout
          Size="123,42"
          Id="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\getStatus"
          TopLeft="334.28571425652,44" />
        <EdgeLayout
          Id="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load.Paths[Output 0]"
          TopLeft="396.64285712826,86">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load.Paths[Data Conversion Output]"
          TopLeft="394.45,154">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.8"
              Start="0,0"
              End="0,25.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Update Purchase Order Status\Foreach active purchase order\getStatus service load\tmpInventoryPurchaseOrderStatus">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>