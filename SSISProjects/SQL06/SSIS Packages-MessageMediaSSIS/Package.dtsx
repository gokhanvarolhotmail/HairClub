<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/1/2016 10:36:00 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DESKTOP-6A0JOR2"
  DTS:CreatorName="DESKTOP-6A0JOR2\Edmund"
  DTS:DTSID="{34D4C3EC-3782-4F5F-8A22-BA8FA1B780E1}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.3436.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:ProtectionLevel="5"
  DTS:VersionBuild="102"
  DTS:VersionGUID="{89BB1A74-8328-4171-8CA9-6FEF8FFECE94}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:Description="Location of Exchange Server"
      DTS:DTSID="{0092AA42-32EC-4E3D-AAC6-C98D585228A2}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=HCSMTP.hcfm.com;UseWindowsAuthentication=True;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[TextMessagesFile]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{F967BA18-7F56-4D50-A8B0-B8DCBE3F81D4}"
      DTS:ObjectName="TextMessagesFile">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::sTextMessagesFilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="LeadMessageLogID"
              DTS:DTSID="{C3B0C7B9-8112-46DE-A09B-A8C88D8D9A39}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="10"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ActivityID"
              DTS:DTSID="{3377B136-955F-4F8B-918C-C22047914726}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="PhoneNumber"
              DTS:DTSID="{DF6828AE-17F7-4B5F-A4B9-F624BEEA95B3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="500"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="TextMessage"
              DTS:DTSID="{8FFDC3E4-D837-4357-A247-D3E95C5DEA4E}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0FEB12DF-31B1-4EB2-B14B-A776188ECFDF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="oDataSet">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3BAA7014-4751-462C-9C1D-16A09C55B5DA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sCopyFilePath">
      <DTS:VariableValue
        DTS:DataType="8">\\bocflssvr\Department\Contact Center\PRODUCTION\TEXTMESSAGING</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7C3C06BE-8C6E-4871-BA9D-0F3D8D60D375}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sExecutionGUID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC402DE7-FE71-435F-B511-6D43062CCA43}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sExportFilePath">
      <DTS:VariableValue
        DTS:DataType="8">\\sql06\Automated Tasks\Text Messages</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9D9DACE7-B2D6-49C2-9713-483269962270}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sTextMessagesFilePath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check for Errors and Send Email If Needed"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{087a912f-009d-4bd6-a81e-48c774dc738f}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check for Errors and Send Email If Needed"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B0769EAE-81EA-4115-9D3D-867D8B715EF1}"
          SQLTask:SqlStatementSource="EXEC spSvc_SendLeadTextErrorsBySessionID ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@SessionID"
            SQLTask:DtsVariableName="User::sExecutionGUID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Export Text Messages Data"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{d86904bb-0235-45cf-a453-257907f5e5be}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Export Text Messages Data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Export Text Messages Data\Text Messages Data"
              componentClassID="{165A526D-D5DE-47FF-96A6-F8274C19826B}"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Text Messages Data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">EXEC spSvc_GetLeadTextMessageReminders ?</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"@SessionID:Input",{7C3C06BE-8C6E-4871-BA9D-0F3D8D60D375};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Export Text Messages Data\Text Messages Data.Connections[OleDbConnection]"
                  connectionManagerID="{B0769EAE-81EA-4115-9D3D-867D8B715EF1}:external"
                  connectionManagerRefId="Project.ConnectionManagers[SQL05.HC_Marketing]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].Columns[LeadMessageLogID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].ExternalColumns[LeadMessageLogID]"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].Columns[LeadMessageLogID]"
                      name="LeadMessageLogID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].Columns[ActivityID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].ExternalColumns[ActivityID]"
                      length="10"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].Columns[ActivityID]"
                      name="ActivityID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].Columns[PhoneNumber]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].ExternalColumns[PhoneNumber]"
                      length="50"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].Columns[PhoneNumber]"
                      name="PhoneNumber"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].Columns[TextMessage]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].ExternalColumns[TextMessage]"
                      length="500"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].Columns[TextMessage]"
                      name="TextMessage"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].ExternalColumns[LeadMessageLogID]"
                      dataType="i4"
                      name="LeadMessageLogID" />
                    <externalMetadataColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].ExternalColumns[ActivityID]"
                      dataType="wstr"
                      length="10"
                      name="ActivityID" />
                    <externalMetadataColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].ExternalColumns[PhoneNumber]"
                      dataType="wstr"
                      length="50"
                      name="PhoneNumber" />
                    <externalMetadataColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].ExternalColumns[TextMessage]"
                      dataType="wstr"
                      length="500"
                      name="TextMessage" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Error Output].Columns[LeadMessageLogID]"
                      dataType="i4"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Error Output].Columns[LeadMessageLogID]"
                      name="LeadMessageLogID" />
                    <outputColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Error Output].Columns[ActivityID]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Error Output].Columns[ActivityID]"
                      name="ActivityID" />
                    <outputColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Error Output].Columns[PhoneNumber]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Error Output].Columns[PhoneNumber]"
                      name="PhoneNumber" />
                    <outputColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Error Output].Columns[TextMessage]"
                      dataType="wstr"
                      length="500"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Error Output].Columns[TextMessage]"
                      name="TextMessage" />
                    <outputColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Export Text Messages Data\Text Messages File"
              componentClassID="{8DA75FED-1B7C-407D-B2AD-2B24209CCCA4}"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Text Messages File">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Export Text Messages Data\Text Messages File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[TextMessagesFile]"
                  connectionManagerRefId="Package.ConnectionManagers[TextMessagesFile]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input].Columns[LeadMessageLogID]"
                      cachedDataType="i4"
                      cachedName="LeadMessageLogID"
                      externalMetadataColumnId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input].ExternalColumns[LeadMessageLogID]"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].Columns[LeadMessageLogID]" />
                    <inputColumn
                      refId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input].Columns[ActivityID]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ActivityID"
                      externalMetadataColumnId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input].ExternalColumns[ActivityID]"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].Columns[ActivityID]" />
                    <inputColumn
                      refId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input].Columns[PhoneNumber]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PhoneNumber"
                      externalMetadataColumnId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input].ExternalColumns[PhoneNumber]"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].Columns[PhoneNumber]" />
                    <inputColumn
                      refId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input].Columns[TextMessage]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="TextMessage"
                      externalMetadataColumnId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input].ExternalColumns[TextMessage]"
                      lineageId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output].Columns[TextMessage]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input].ExternalColumns[LeadMessageLogID]"
                      dataType="i4"
                      name="LeadMessageLogID" />
                    <externalMetadataColumn
                      refId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input].ExternalColumns[ActivityID]"
                      dataType="wstr"
                      length="10"
                      name="ActivityID" />
                    <externalMetadataColumn
                      refId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input].ExternalColumns[PhoneNumber]"
                      dataType="wstr"
                      length="50"
                      name="PhoneNumber" />
                    <externalMetadataColumn
                      refId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input].ExternalColumns[TextMessage]"
                      dataType="wstr"
                      length="500"
                      name="TextMessage" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Export Text Messages Data.Paths[OLE DB Source Output]"
              endId="Package\Export Text Messages Data\Text Messages File.Inputs[Flat File Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Export Text Messages Data\Text Messages Data.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Data For Current Session"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{04AD71E8-5D1B-435B-AD92-FC3797984C67}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Data For Current Session"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B0769EAE-81EA-4115-9D3D-867D8B715EF1}"
          SQLTask:SqlStatementSource="-- Return All Pending records for specific Session ID&#xA;SELECT  LML.LeadMessageLogID&#xA;,&#x9;&#x9;LML.BatchID&#xA;,&#x9;&#x9;LML.PhoneNumber&#xA;,       LML.TextMessage&#xA;FROM    datLeadMessageLog LML&#xA;&#x9;&#x9;INNER JOIN lkpTextMessageStatus TMS&#xA;&#x9;&#x9;&#x9;ON TMS.TextMessageStatusID = LML.TextMessageStatusID&#xA;WHERE   LML.SessionGUID = ?&#xA;&#x9;&#x9;AND TMS.TextMessageStatusDescriptionShort = 'PENDING'&#xA;ORDER BY LML.LeadMessageLogID"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::oDataSet" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@SessionID"
            SQLTask:DtsVariableName="User::sExecutionGUID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send Data to Message Media API"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Send Texts via Message Media API"
      DTS:DTSID="{1F48EF8D-ABA0-48B8-8B60-2FC57DD68BDF}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send Data to Message Media API"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_16993c4c5a2347bf96f841c6b0f635da"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::oDataSet,User::sExecutionGUID">
          <ProjectItem
            Name="ST_16993c4c5a2347bf96f841c6b0f635da.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5109937E-3550-46A9-8A7F-EE15BA94548D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_16993c4c5a2347bf96f841c6b0f635da</RootNamespace>
    <AssemblyName>ST_16993c4c5a2347bf96f841c6b0f635da</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Web.Services" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ServiceProxy\MessageMediaService.cs" />
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup />
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_16993c4c5a2347bf96f841c6b0f635da.Properties.Settings.get_Default():ST_16993c4c5a2347bf96f841c6b0f635da.Properties.Sett" +
    "ings")]

namespace ST_16993c4c5a2347bf96f841c6b0f635da.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ServiceProxy\MessageMediaService.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace ST_16993c4c5a2347bf96f841c6b0f635da.ServiceProxy
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "MessageMediaServiceBinding", Namespace = "http://xml.m4u.com.au/2009")]
    public partial class MessageMediaService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback sendMessagesOperationCompleted;

        private System.Threading.SendOrPostCallback checkUserOperationCompleted;

        private System.Threading.SendOrPostCallback checkRepliesOperationCompleted;

        private System.Threading.SendOrPostCallback checkReportsOperationCompleted;

        private System.Threading.SendOrPostCallback confirmRepliesOperationCompleted;

        private System.Threading.SendOrPostCallback confirmReportsOperationCompleted;

        private System.Threading.SendOrPostCallback deleteScheduledMessagesOperationCompleted;

        private System.Threading.SendOrPostCallback blockNumbersOperationCompleted;

        private System.Threading.SendOrPostCallback unblockNumbersOperationCompleted;

        private System.Threading.SendOrPostCallback getBlockedNumbersOperationCompleted;

        /// <remarks/>
        public MessageMediaService()
        {
            this.Url = "http://soap.m4u.com.au";
        }

        /// <remarks/>
        public event sendMessagesCompletedEventHandler sendMessagesCompleted;

        /// <remarks/>
        public event checkUserCompletedEventHandler checkUserCompleted;

        /// <remarks/>
        public event checkRepliesCompletedEventHandler checkRepliesCompleted;

        /// <remarks/>
        public event checkReportsCompletedEventHandler checkReportsCompleted;

        /// <remarks/>
        public event confirmRepliesCompletedEventHandler confirmRepliesCompleted;

        /// <remarks/>
        public event confirmReportsCompletedEventHandler confirmReportsCompleted;

        /// <remarks/>
        public event deleteScheduledMessagesCompletedEventHandler deleteScheduledMessagesCompleted;

        /// <remarks/>
        public event blockNumbersCompletedEventHandler blockNumbersCompleted;

        /// <remarks/>
        public event unblockNumbersCompletedEventHandler unblockNumbersCompleted;

        /// <remarks/>
        public event getBlockedNumbersCompletedEventHandler getBlockedNumbersCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xml.m4u.com.au/2009/sendMessages", RequestNamespace = "http://xml.m4u.com.au/2009", ResponseNamespace = "http://xml.m4u.com.au/2009", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public SendMessagesResultType sendMessages(AuthenticationType authentication, SendMessagesBodyType requestBody)
        {
            object[] results = this.Invoke("sendMessages", new object[] {
                    authentication,
                    requestBody});
            return ((SendMessagesResultType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsendMessages(AuthenticationType authentication, SendMessagesBodyType requestBody, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("sendMessages", new object[] {
                    authentication,
                    requestBody}, callback, asyncState);
        }

        /// <remarks/>
        public SendMessagesResultType EndsendMessages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SendMessagesResultType)(results[0]));
        }

        /// <remarks/>
        public void sendMessagesAsync(AuthenticationType authentication, SendMessagesBodyType requestBody)
        {
            this.sendMessagesAsync(authentication, requestBody, null);
        }

        /// <remarks/>
        public void sendMessagesAsync(AuthenticationType authentication, SendMessagesBodyType requestBody, object userState)
        {
            if ((this.sendMessagesOperationCompleted == null))
            {
                this.sendMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMessagesOperationCompleted);
            }
            this.InvokeAsync("sendMessages", new object[] {
                    authentication,
                    requestBody}, this.sendMessagesOperationCompleted, userState);
        }

        private void OnsendMessagesOperationCompleted(object arg)
        {
            if ((this.sendMessagesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMessagesCompleted(this, new sendMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xml.m4u.com.au/2009/checkUser", RequestNamespace = "http://xml.m4u.com.au/2009", ResponseNamespace = "http://xml.m4u.com.au/2009", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public CheckUserResultType checkUser(AuthenticationType authentication)
        {
            object[] results = this.Invoke("checkUser", new object[] {
                    authentication});
            return ((CheckUserResultType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegincheckUser(AuthenticationType authentication, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("checkUser", new object[] {
                    authentication}, callback, asyncState);
        }

        /// <remarks/>
        public CheckUserResultType EndcheckUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CheckUserResultType)(results[0]));
        }

        /// <remarks/>
        public void checkUserAsync(AuthenticationType authentication)
        {
            this.checkUserAsync(authentication, null);
        }

        /// <remarks/>
        public void checkUserAsync(AuthenticationType authentication, object userState)
        {
            if ((this.checkUserOperationCompleted == null))
            {
                this.checkUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckUserOperationCompleted);
            }
            this.InvokeAsync("checkUser", new object[] {
                    authentication}, this.checkUserOperationCompleted, userState);
        }

        private void OncheckUserOperationCompleted(object arg)
        {
            if ((this.checkUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkUserCompleted(this, new checkUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xml.m4u.com.au/2009/checkReplies", RequestNamespace = "http://xml.m4u.com.au/2009", ResponseNamespace = "http://xml.m4u.com.au/2009", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public CheckRepliesResultType checkReplies(AuthenticationType authentication, CheckRepliesBodyType requestBody)
        {
            object[] results = this.Invoke("checkReplies", new object[] {
                    authentication,
                    requestBody});
            return ((CheckRepliesResultType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegincheckReplies(AuthenticationType authentication, CheckRepliesBodyType requestBody, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("checkReplies", new object[] {
                    authentication,
                    requestBody}, callback, asyncState);
        }

        /// <remarks/>
        public CheckRepliesResultType EndcheckReplies(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CheckRepliesResultType)(results[0]));
        }

        /// <remarks/>
        public void checkRepliesAsync(AuthenticationType authentication, CheckRepliesBodyType requestBody)
        {
            this.checkRepliesAsync(authentication, requestBody, null);
        }

        /// <remarks/>
        public void checkRepliesAsync(AuthenticationType authentication, CheckRepliesBodyType requestBody, object userState)
        {
            if ((this.checkRepliesOperationCompleted == null))
            {
                this.checkRepliesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckRepliesOperationCompleted);
            }
            this.InvokeAsync("checkReplies", new object[] {
                    authentication,
                    requestBody}, this.checkRepliesOperationCompleted, userState);
        }

        private void OncheckRepliesOperationCompleted(object arg)
        {
            if ((this.checkRepliesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkRepliesCompleted(this, new checkRepliesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xml.m4u.com.au/2009/checkReports", RequestNamespace = "http://xml.m4u.com.au/2009", ResponseNamespace = "http://xml.m4u.com.au/2009", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public CheckReportsResultType checkReports(AuthenticationType authentication, CheckReportsBodyType requestBody)
        {
            object[] results = this.Invoke("checkReports", new object[] {
                    authentication,
                    requestBody});
            return ((CheckReportsResultType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegincheckReports(AuthenticationType authentication, CheckReportsBodyType requestBody, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("checkReports", new object[] {
                    authentication,
                    requestBody}, callback, asyncState);
        }

        /// <remarks/>
        public CheckReportsResultType EndcheckReports(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CheckReportsResultType)(results[0]));
        }

        /// <remarks/>
        public void checkReportsAsync(AuthenticationType authentication, CheckReportsBodyType requestBody)
        {
            this.checkReportsAsync(authentication, requestBody, null);
        }

        /// <remarks/>
        public void checkReportsAsync(AuthenticationType authentication, CheckReportsBodyType requestBody, object userState)
        {
            if ((this.checkReportsOperationCompleted == null))
            {
                this.checkReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckReportsOperationCompleted);
            }
            this.InvokeAsync("checkReports", new object[] {
                    authentication,
                    requestBody}, this.checkReportsOperationCompleted, userState);
        }

        private void OncheckReportsOperationCompleted(object arg)
        {
            if ((this.checkReportsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkReportsCompleted(this, new checkReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xml.m4u.com.au/2009/confirmReplies", RequestNamespace = "http://xml.m4u.com.au/2009", ResponseNamespace = "http://xml.m4u.com.au/2009", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public ConfirmRepliesResultType confirmReplies(AuthenticationType authentication, ConfirmRepliesBodyType requestBody)
        {
            object[] results = this.Invoke("confirmReplies", new object[] {
                    authentication,
                    requestBody});
            return ((ConfirmRepliesResultType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginconfirmReplies(AuthenticationType authentication, ConfirmRepliesBodyType requestBody, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("confirmReplies", new object[] {
                    authentication,
                    requestBody}, callback, asyncState);
        }

        /// <remarks/>
        public ConfirmRepliesResultType EndconfirmReplies(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ConfirmRepliesResultType)(results[0]));
        }

        /// <remarks/>
        public void confirmRepliesAsync(AuthenticationType authentication, ConfirmRepliesBodyType requestBody)
        {
            this.confirmRepliesAsync(authentication, requestBody, null);
        }

        /// <remarks/>
        public void confirmRepliesAsync(AuthenticationType authentication, ConfirmRepliesBodyType requestBody, object userState)
        {
            if ((this.confirmRepliesOperationCompleted == null))
            {
                this.confirmRepliesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmRepliesOperationCompleted);
            }
            this.InvokeAsync("confirmReplies", new object[] {
                    authentication,
                    requestBody}, this.confirmRepliesOperationCompleted, userState);
        }

        private void OnconfirmRepliesOperationCompleted(object arg)
        {
            if ((this.confirmRepliesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmRepliesCompleted(this, new confirmRepliesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xml.m4u.com.au/2009/confirmReports", RequestNamespace = "http://xml.m4u.com.au/2009", ResponseNamespace = "http://xml.m4u.com.au/2009", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public ConfirmReportsResultType confirmReports(AuthenticationType authentication, ConfirmReportsBodyType requestBody)
        {
            object[] results = this.Invoke("confirmReports", new object[] {
                    authentication,
                    requestBody});
            return ((ConfirmReportsResultType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginconfirmReports(AuthenticationType authentication, ConfirmReportsBodyType requestBody, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("confirmReports", new object[] {
                    authentication,
                    requestBody}, callback, asyncState);
        }

        /// <remarks/>
        public ConfirmReportsResultType EndconfirmReports(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ConfirmReportsResultType)(results[0]));
        }

        /// <remarks/>
        public void confirmReportsAsync(AuthenticationType authentication, ConfirmReportsBodyType requestBody)
        {
            this.confirmReportsAsync(authentication, requestBody, null);
        }

        /// <remarks/>
        public void confirmReportsAsync(AuthenticationType authentication, ConfirmReportsBodyType requestBody, object userState)
        {
            if ((this.confirmReportsOperationCompleted == null))
            {
                this.confirmReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmReportsOperationCompleted);
            }
            this.InvokeAsync("confirmReports", new object[] {
                    authentication,
                    requestBody}, this.confirmReportsOperationCompleted, userState);
        }

        private void OnconfirmReportsOperationCompleted(object arg)
        {
            if ((this.confirmReportsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmReportsCompleted(this, new confirmReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xml.m4u.com.au/2009/soap/deleteScheduledMessages", RequestNamespace = "http://xml.m4u.com.au/2009", ResponseNamespace = "http://xml.m4u.com.au/2009", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public DeleteScheduledMessagesResultType deleteScheduledMessages(AuthenticationType authentication, DeleteScheduledMessagesBodyType requestBody)
        {
            object[] results = this.Invoke("deleteScheduledMessages", new object[] {
                    authentication,
                    requestBody});
            return ((DeleteScheduledMessagesResultType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteScheduledMessages(AuthenticationType authentication, DeleteScheduledMessagesBodyType requestBody, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteScheduledMessages", new object[] {
                    authentication,
                    requestBody}, callback, asyncState);
        }

        /// <remarks/>
        public DeleteScheduledMessagesResultType EnddeleteScheduledMessages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeleteScheduledMessagesResultType)(results[0]));
        }

        /// <remarks/>
        public void deleteScheduledMessagesAsync(AuthenticationType authentication, DeleteScheduledMessagesBodyType requestBody)
        {
            this.deleteScheduledMessagesAsync(authentication, requestBody, null);
        }

        /// <remarks/>
        public void deleteScheduledMessagesAsync(AuthenticationType authentication, DeleteScheduledMessagesBodyType requestBody, object userState)
        {
            if ((this.deleteScheduledMessagesOperationCompleted == null))
            {
                this.deleteScheduledMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteScheduledMessagesOperationCompleted);
            }
            this.InvokeAsync("deleteScheduledMessages", new object[] {
                    authentication,
                    requestBody}, this.deleteScheduledMessagesOperationCompleted, userState);
        }

        private void OndeleteScheduledMessagesOperationCompleted(object arg)
        {
            if ((this.deleteScheduledMessagesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteScheduledMessagesCompleted(this, new deleteScheduledMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xml.m4u.com.au/2009/blockNumbers", RequestNamespace = "http://xml.m4u.com.au/2009", ResponseNamespace = "http://xml.m4u.com.au/2009", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public BlockNumbersResultType blockNumbers(AuthenticationType authentication, BlockNumbersBodyType requestBody)
        {
            object[] results = this.Invoke("blockNumbers", new object[] {
                    authentication,
                    requestBody});
            return ((BlockNumbersResultType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginblockNumbers(AuthenticationType authentication, BlockNumbersBodyType requestBody, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("blockNumbers", new object[] {
                    authentication,
                    requestBody}, callback, asyncState);
        }

        /// <remarks/>
        public BlockNumbersResultType EndblockNumbers(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BlockNumbersResultType)(results[0]));
        }

        /// <remarks/>
        public void blockNumbersAsync(AuthenticationType authentication, BlockNumbersBodyType requestBody)
        {
            this.blockNumbersAsync(authentication, requestBody, null);
        }

        /// <remarks/>
        public void blockNumbersAsync(AuthenticationType authentication, BlockNumbersBodyType requestBody, object userState)
        {
            if ((this.blockNumbersOperationCompleted == null))
            {
                this.blockNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnblockNumbersOperationCompleted);
            }
            this.InvokeAsync("blockNumbers", new object[] {
                    authentication,
                    requestBody}, this.blockNumbersOperationCompleted, userState);
        }

        private void OnblockNumbersOperationCompleted(object arg)
        {
            if ((this.blockNumbersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.blockNumbersCompleted(this, new blockNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xml.m4u.com.au/2009/unblockNumbers", RequestNamespace = "http://xml.m4u.com.au/2009", ResponseNamespace = "http://xml.m4u.com.au/2009", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public UnblockNumbersResultType unblockNumbers(AuthenticationType authentication, UnblockNumbersBodyType requestBody)
        {
            object[] results = this.Invoke("unblockNumbers", new object[] {
                    authentication,
                    requestBody});
            return ((UnblockNumbersResultType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginunblockNumbers(AuthenticationType authentication, UnblockNumbersBodyType requestBody, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("unblockNumbers", new object[] {
                    authentication,
                    requestBody}, callback, asyncState);
        }

        /// <remarks/>
        public UnblockNumbersResultType EndunblockNumbers(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((UnblockNumbersResultType)(results[0]));
        }

        /// <remarks/>
        public void unblockNumbersAsync(AuthenticationType authentication, UnblockNumbersBodyType requestBody)
        {
            this.unblockNumbersAsync(authentication, requestBody, null);
        }

        /// <remarks/>
        public void unblockNumbersAsync(AuthenticationType authentication, UnblockNumbersBodyType requestBody, object userState)
        {
            if ((this.unblockNumbersOperationCompleted == null))
            {
                this.unblockNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunblockNumbersOperationCompleted);
            }
            this.InvokeAsync("unblockNumbers", new object[] {
                    authentication,
                    requestBody}, this.unblockNumbersOperationCompleted, userState);
        }

        private void OnunblockNumbersOperationCompleted(object arg)
        {
            if ((this.unblockNumbersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unblockNumbersCompleted(this, new unblockNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xml.m4u.com.au/2009/getBlockedNumbers", RequestNamespace = "http://xml.m4u.com.au/2009", ResponseNamespace = "http://xml.m4u.com.au/2009", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public GetBlockedNumbersResultType getBlockedNumbers(AuthenticationType authentication, GetBlockedNumbersBodyType requestBody)
        {
            object[] results = this.Invoke("getBlockedNumbers", new object[] {
                    authentication,
                    requestBody});
            return ((GetBlockedNumbersResultType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetBlockedNumbers(AuthenticationType authentication, GetBlockedNumbersBodyType requestBody, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getBlockedNumbers", new object[] {
                    authentication,
                    requestBody}, callback, asyncState);
        }

        /// <remarks/>
        public GetBlockedNumbersResultType EndgetBlockedNumbers(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetBlockedNumbersResultType)(results[0]));
        }

        /// <remarks/>
        public void getBlockedNumbersAsync(AuthenticationType authentication, GetBlockedNumbersBodyType requestBody)
        {
            this.getBlockedNumbersAsync(authentication, requestBody, null);
        }

        /// <remarks/>
        public void getBlockedNumbersAsync(AuthenticationType authentication, GetBlockedNumbersBodyType requestBody, object userState)
        {
            if ((this.getBlockedNumbersOperationCompleted == null))
            {
                this.getBlockedNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBlockedNumbersOperationCompleted);
            }
            this.InvokeAsync("getBlockedNumbers", new object[] {
                    authentication,
                    requestBody}, this.getBlockedNumbersOperationCompleted, userState);
        }

        private void OngetBlockedNumbersOperationCompleted(object arg)
        {
            if ((this.getBlockedNumbersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBlockedNumbersCompleted(this, new getBlockedNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class AuthenticationType
    {

        private string userIdField;

        private string passwordField;

        /// <remarks/>
        public string userId
        {
            get
            {
                return this.userIdField;
            }
            set
            {
                this.userIdField = value;
            }
        }

        /// <remarks/>
        public string password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class GetBlockedNumbersResultType
    {

        private RecipientType[] recipientsField;

        private uint foundField;

        private uint returnedField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("recipient", IsNullable = false)]
        public RecipientType[] recipients
        {
            get
            {
                return this.recipientsField;
            }
            set
            {
                this.recipientsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint found
        {
            get
            {
                return this.foundField;
            }
            set
            {
                this.foundField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint returned
        {
            get
            {
                return this.returnedField;
            }
            set
            {
                this.returnedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class RecipientType
    {

        private uint uidField;

        private string valueField;

        public RecipientType()
        {
            this.uidField = ((uint)(0));
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(uint), "0")]
        public uint uid
        {
            get
            {
                return this.uidField;
            }
            set
            {
                this.uidField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class GetBlockedNumbersBodyType
    {

        private uint maximumRecipientsField;

        private bool maximumRecipientsFieldSpecified;

        /// <remarks/>
        public uint maximumRecipients
        {
            get
            {
                return this.maximumRecipientsField;
            }
            set
            {
                this.maximumRecipientsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maximumRecipientsSpecified
        {
            get
            {
                return this.maximumRecipientsFieldSpecified;
            }
            set
            {
                this.maximumRecipientsFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class UnblockNumbersResultType
    {

        private MessageErrorType[] errorsField;

        private uint unblockedField;

        private uint failedField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("error", IsNullable = false)]
        public MessageErrorType[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint unblocked
        {
            get
            {
                return this.unblockedField;
            }
            set
            {
                this.unblockedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint failed
        {
            get
            {
                return this.failedField;
            }
            set
            {
                this.failedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class MessageErrorType
    {

        private RecipientType[] recipientsField;

        private string contentField;

        private MessageErrorCodeType codeField;

        private uint sequenceNumberField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("recipient", IsNullable = false)]
        public RecipientType[] recipients
        {
            get
            {
                return this.recipientsField;
            }
            set
            {
                this.recipientsField = value;
            }
        }

        /// <remarks/>
        public string content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public MessageErrorCodeType code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint sequenceNumber
        {
            get
            {
                return this.sequenceNumberField;
            }
            set
            {
                this.sequenceNumberField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public enum MessageErrorCodeType
    {

        /// <remarks/>
        invalidRecipient,

        /// <remarks/>
        recipientBlocked,

        /// <remarks/>
        emptyMessageContent,

        /// <remarks/>
        messageLengthLimit,

        /// <remarks/>
        other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class UnblockNumbersBodyType
    {

        private RecipientType[] recipientsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("recipient", IsNullable = false)]
        public RecipientType[] recipients
        {
            get
            {
                return this.recipientsField;
            }
            set
            {
                this.recipientsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class BlockNumbersResultType
    {

        private MessageErrorType[] errorsField;

        private uint blockedField;

        private uint failedField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("error", IsNullable = false)]
        public MessageErrorType[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint blocked
        {
            get
            {
                return this.blockedField;
            }
            set
            {
                this.blockedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint failed
        {
            get
            {
                return this.failedField;
            }
            set
            {
                this.failedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class BlockNumbersBodyType
    {

        private RecipientType[] recipientsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("recipient", IsNullable = false)]
        public RecipientType[] recipients
        {
            get
            {
                return this.recipientsField;
            }
            set
            {
                this.recipientsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class DeleteScheduledMessagesResultType
    {

        private uint unscheduledField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint unscheduled
        {
            get
            {
                return this.unscheduledField;
            }
            set
            {
                this.unscheduledField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class MessageIdType
    {

        private uint messageIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint messageId
        {
            get
            {
                return this.messageIdField;
            }
            set
            {
                this.messageIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class DeleteScheduledMessagesBodyType
    {

        private MessageIdType[] messagesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("message", IsNullable = false)]
        public MessageIdType[] messages
        {
            get
            {
                return this.messagesField;
            }
            set
            {
                this.messagesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class ConfirmReportsResultType
    {

        private uint confirmedField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint confirmed
        {
            get
            {
                return this.confirmedField;
            }
            set
            {
                this.confirmedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class ConfirmReportsBodyType
    {

        private ConfirmItemType[] reportsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("report", IsNullable = false)]
        public ConfirmItemType[] reports
        {
            get
            {
                return this.reportsField;
            }
            set
            {
                this.reportsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class ConfirmItemType
    {

        private uint receiptIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint receiptId
        {
            get
            {
                return this.receiptIdField;
            }
            set
            {
                this.receiptIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class ConfirmRepliesResultType
    {

        private uint confirmedField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint confirmed
        {
            get
            {
                return this.confirmedField;
            }
            set
            {
                this.confirmedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class ConfirmRepliesBodyType
    {

        private ConfirmItemType[] repliesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("reply", IsNullable = false)]
        public ConfirmItemType[] replies
        {
            get
            {
                return this.repliesField;
            }
            set
            {
                this.repliesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class ReportType
    {

        private string recipientField;

        private System.DateTime timestampField;

        private uint uidField;

        private uint receiptIdField;

        private DeliveryStatusType statusField;

        /// <remarks/>
        public string recipient
        {
            get
            {
                return this.recipientField;
            }
            set
            {
                this.recipientField = value;
            }
        }

        /// <remarks/>
        public System.DateTime timestamp
        {
            get
            {
                return this.timestampField;
            }
            set
            {
                this.timestampField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint uid
        {
            get
            {
                return this.uidField;
            }
            set
            {
                this.uidField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint receiptId
        {
            get
            {
                return this.receiptIdField;
            }
            set
            {
                this.receiptIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DeliveryStatusType status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public enum DeliveryStatusType
    {

        /// <remarks/>
        delivered,

        /// <remarks/>
        pending,

        /// <remarks/>
        failed,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class CheckReportsResultType
    {

        private ReportType[] reportsField;

        private uint returnedField;

        private uint remainingField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("report", IsNullable = false)]
        public ReportType[] reports
        {
            get
            {
                return this.reportsField;
            }
            set
            {
                this.reportsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint returned
        {
            get
            {
                return this.returnedField;
            }
            set
            {
                this.returnedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint remaining
        {
            get
            {
                return this.remainingField;
            }
            set
            {
                this.remainingField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class CheckReportsBodyType
    {

        private uint maximumReportsField;

        private bool maximumReportsFieldSpecified;

        /// <remarks/>
        public uint maximumReports
        {
            get
            {
                return this.maximumReportsField;
            }
            set
            {
                this.maximumReportsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maximumReportsSpecified
        {
            get
            {
                return this.maximumReportsFieldSpecified;
            }
            set
            {
                this.maximumReportsFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class ReplyType
    {

        private string originField;

        private System.DateTime receivedField;

        private string contentField;

        private MessageFormatType formatField;

        private uint uidField;

        private uint receiptIdField;

        /// <remarks/>
        public string origin
        {
            get
            {
                return this.originField;
            }
            set
            {
                this.originField = value;
            }
        }

        /// <remarks/>
        public System.DateTime received
        {
            get
            {
                return this.receivedField;
            }
            set
            {
                this.receivedField = value;
            }
        }

        /// <remarks/>
        public string content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public MessageFormatType format
        {
            get
            {
                return this.formatField;
            }
            set
            {
                this.formatField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint uid
        {
            get
            {
                return this.uidField;
            }
            set
            {
                this.uidField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint receiptId
        {
            get
            {
                return this.receiptIdField;
            }
            set
            {
                this.receiptIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public enum MessageFormatType
    {

        /// <remarks/>
        SMS,

        /// <remarks/>
        voice,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class CheckRepliesResultType
    {

        private ReplyType[] repliesField;

        private uint returnedField;

        private uint remainingField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("reply", IsNullable = false)]
        public ReplyType[] replies
        {
            get
            {
                return this.repliesField;
            }
            set
            {
                this.repliesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint returned
        {
            get
            {
                return this.returnedField;
            }
            set
            {
                this.returnedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint remaining
        {
            get
            {
                return this.remainingField;
            }
            set
            {
                this.remainingField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class CheckRepliesBodyType
    {

        private uint maximumRepliesField;

        private bool maximumRepliesFieldSpecified;

        /// <remarks/>
        public uint maximumReplies
        {
            get
            {
                return this.maximumRepliesField;
            }
            set
            {
                this.maximumRepliesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maximumRepliesSpecified
        {
            get
            {
                return this.maximumRepliesFieldSpecified;
            }
            set
            {
                this.maximumRepliesFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class CheckUserResultType
    {

        private AccountDetailsType accountDetailsField;

        /// <remarks/>
        public AccountDetailsType accountDetails
        {
            get
            {
                return this.accountDetailsField;
            }
            set
            {
                this.accountDetailsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class AccountDetailsType
    {

        private string typeField;

        private uint creditLimitField;

        private uint creditRemainingField;

        public AccountDetailsType()
        {
            this.typeField = "daily";
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint creditLimit
        {
            get
            {
                return this.creditLimitField;
            }
            set
            {
                this.creditLimitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint creditRemaining
        {
            get
            {
                return this.creditRemainingField;
            }
            set
            {
                this.creditRemainingField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class SendMessagesResultType
    {

        private AccountDetailsType accountDetailsField;

        private MessageErrorType[] errorsField;

        private uint sentField;

        private uint scheduledField;

        private uint failedField;

        /// <remarks/>
        public AccountDetailsType accountDetails
        {
            get
            {
                return this.accountDetailsField;
            }
            set
            {
                this.accountDetailsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("error", IsNullable = false)]
        public MessageErrorType[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint sent
        {
            get
            {
                return this.sentField;
            }
            set
            {
                this.sentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint scheduled
        {
            get
            {
                return this.scheduledField;
            }
            set
            {
                this.scheduledField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint failed
        {
            get
            {
                return this.failedField;
            }
            set
            {
                this.failedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class MessageTagType
    {

        private string nameField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class MessageType
    {

        private string originField;

        private RecipientType[] recipientsField;

        private string contentField;

        private System.DateTime scheduledField;

        private bool scheduledFieldSpecified;

        private bool deliveryReportField;

        private byte validityPeriodField;

        private MessageTagType[] tagsField;

        private MessageFormatType formatField;

        private uint sequenceNumberField;

        private System.Xml.XmlAttribute[] anyAttrField;

        public MessageType()
        {
            this.deliveryReportField = false;
            this.validityPeriodField = ((byte)(169));
            this.formatField = MessageFormatType.SMS;
            this.sequenceNumberField = ((uint)(0));
        }

        /// <remarks/>
        public string origin
        {
            get
            {
                return this.originField;
            }
            set
            {
                this.originField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("recipient", IsNullable = false)]
        public RecipientType[] recipients
        {
            get
            {
                return this.recipientsField;
            }
            set
            {
                this.recipientsField = value;
            }
        }

        /// <remarks/>
        public string content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }

        /// <remarks/>
        public System.DateTime scheduled
        {
            get
            {
                return this.scheduledField;
            }
            set
            {
                this.scheduledField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scheduledSpecified
        {
            get
            {
                return this.scheduledFieldSpecified;
            }
            set
            {
                this.scheduledFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool deliveryReport
        {
            get
            {
                return this.deliveryReportField;
            }
            set
            {
                this.deliveryReportField = value;
            }
        }

        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "169")]
        public byte validityPeriod
        {
            get
            {
                return this.validityPeriodField;
            }
            set
            {
                this.validityPeriodField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("tag", IsNullable = false)]
        public MessageTagType[] tags
        {
            get
            {
                return this.tagsField;
            }
            set
            {
                this.tagsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(MessageFormatType.SMS)]
        public MessageFormatType format
        {
            get
            {
                return this.formatField;
            }
            set
            {
                this.formatField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(uint), "0")]
        public uint sequenceNumber
        {
            get
            {
                return this.sequenceNumberField;
            }
            set
            {
                this.sequenceNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr
        {
            get
            {
                return this.anyAttrField;
            }
            set
            {
                this.anyAttrField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class MessageListType
    {

        private MessageType[] messageField;

        private MessageSendModeType sendModeField;

        public MessageListType()
        {
            this.sendModeField = MessageSendModeType.normal;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("message")]
        public MessageType[] message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(MessageSendModeType.normal)]
        public MessageSendModeType sendMode
        {
            get
            {
                return this.sendModeField;
            }
            set
            {
                this.sendModeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public enum MessageSendModeType
    {

        /// <remarks/>
        dropAll,

        /// <remarks/>
        dropAllWithErrors,

        /// <remarks/>
        dropAllWithSuccess,

        /// <remarks/>
        normal,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xml.m4u.com.au/2009")]
    public partial class SendMessagesBodyType
    {

        private MessageListType messagesField;

        /// <remarks/>
        public MessageListType messages
        {
            get
            {
                return this.messagesField;
            }
            set
            {
                this.messagesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void sendMessagesCompletedEventHandler(object sender, sendMessagesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal sendMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SendMessagesResultType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SendMessagesResultType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void checkUserCompletedEventHandler(object sender, checkUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal checkUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CheckUserResultType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CheckUserResultType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void checkRepliesCompletedEventHandler(object sender, checkRepliesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkRepliesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal checkRepliesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CheckRepliesResultType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CheckRepliesResultType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void checkReportsCompletedEventHandler(object sender, checkReportsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal checkReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CheckReportsResultType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CheckReportsResultType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void confirmRepliesCompletedEventHandler(object sender, confirmRepliesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class confirmRepliesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal confirmRepliesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ConfirmRepliesResultType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ConfirmRepliesResultType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void confirmReportsCompletedEventHandler(object sender, confirmReportsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class confirmReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal confirmReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ConfirmReportsResultType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ConfirmReportsResultType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void deleteScheduledMessagesCompletedEventHandler(object sender, deleteScheduledMessagesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteScheduledMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal deleteScheduledMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DeleteScheduledMessagesResultType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DeleteScheduledMessagesResultType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void blockNumbersCompletedEventHandler(object sender, blockNumbersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class blockNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal blockNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BlockNumbersResultType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BlockNumbersResultType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void unblockNumbersCompletedEventHandler(object sender, unblockNumbersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unblockNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal unblockNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public UnblockNumbersResultType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((UnblockNumbersResultType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void getBlockedNumbersCompletedEventHandler(object sender, getBlockedNumbersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBlockedNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getBlockedNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public GetBlockedNumbersResultType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((GetBlockedNumbersResultType)(this.results[0]));
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_16993c4c5a2347bf96f841c6b0f635da</msb:CodeName>
		<msb:DisplayName>ST_16993c4c5a2347bf96f841c6b0f635da</msb:DisplayName>
		<msb:ProjectId>{6C6F4422-2719-4DCA-9043-EC728403E1A7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_16993c4c5a2347bf96f841c6b0f635da.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="ServiceProxy\MessageMediaService.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Folder Include="ServiceProxy"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Data.OleDb;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using ST_16993c4c5a2347bf96f841c6b0f635da.ServiceProxy;
#endregion

namespace ST_16993c4c5a2347bf96f841c6b0f635da
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        private DataTable dt;

        private bool IsInTestMode = false;

		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            Guid sessionID = new Guid((String)Dts.Variables["User::sExecutionGUID"].Value);

            //ClearUnsubscibes();
            //CheckBlockedNumbers();

            try
            {
                if (IsInTestMode)
                {
                    SendMessagesTest();
                    return;
                }

                FillDataSet();

                bool dataExists = true;
                int batchIndex = 1;

                while (dataExists)
                {
                    DataView dv = GetBatch(batchIndex);
                    dataExists = dv != null && dv.Count > 0;
                    if (dataExists)
                    {
                        SendMessages(dv, batchIndex, sessionID);
                        batchIndex++;
                    }
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                throw new Exception(string.Format("Failed for Session {0}", sessionID), ex);
            }
		}

        private void FillDataSet()
        {
            // Set up the DataAdapter to extract the data, and the DataTable object to capture those results
            OleDbDataAdapter da = new OleDbDataAdapter();
            dt = new DataTable();
            
            // Extract the data from the object variable into the table
            da.Fill(dt, Dts.Variables["User::oDataSet"].Value);
        }

        private DataView GetBatch(int batchIndex)
        {
            return dt.AsEnumerable().Where(x => x.Field<int>(1) == batchIndex).AsDataView();
        }

        private void SendMessages(DataView dv, int batchId, Guid sessionId)
        {
            var proxy = new MessageMediaService();
            var auth = new AuthenticationType
            {
                password = "w6P9DXCk",
                userId = "HairClub008"
            };

            SendMessagesBodyType msgLst = new SendMessagesBodyType();
            msgLst.messages = new MessageListType();
            msgLst.messages.message = new MessageType[dv.Count];
            
            var index = 0;
            foreach (DataRowView dr in dv)
            {
                MessageType msg = new MessageType
                {
                    content = dr.Row[3].ToString(),
                    recipients = new RecipientType[1]
                };
                msg.recipients[0] = new RecipientType
                {
                    uid = uint.Parse(dr.Row[0].ToString()),
                    Value = dr.Row[2].ToString(),
                };
                msg.deliveryReport = true;
                msg.validityPeriod = 5;
                msgLst.messages.message[index] = msg;
                index++;
            }
            
            var result = proxy.sendMessages(auth, msgLst);

            if (result != null)
            {
                if (result.errors != null && result.errors.Any())
                {
                    foreach (var err in result.errors)
                    {
                        var uidLst = string.Join(",", err.recipients.Select(x => x.uid.ToString()));

                        UpdateStatusByUIDs(err.code.ToString(), err.content, "DLVR-Fail", uidLst);
                    }
                }

                UpdateBatchStatusForPending(sessionId, batchId, "DLVR-Sucss", null, null);
            }
            else
            {
                UpdateBatchStatusForPending(sessionId, batchId, "DLVR-Fail", "NORESULT", "No result returned.");
            }
        }

        private void SendMessagesTest()
        {
            var proxy = new MessageMediaService();
            var auth = new AuthenticationType
            {
                password = "w6P9DXCk",
                userId = "HairClub008"
            };

            SendMessagesBodyType msgLst = new SendMessagesBodyType();
            msgLst.messages = new MessageListType();
            msgLst.messages.message = new MessageType[1];

            var index = 0;
            
            MessageType msg = new MessageType
            {
                content = "Test Message",
                recipients = new RecipientType[1]
            };
            msg.recipients[0] = new RecipientType
            {
                uid = 1,
                Value = "25",
            };
            msg.deliveryReport = true;
            msgLst.messages.message[index] = msg;                        

            var result = proxy.sendMessages(auth, msgLst);

            if (result != null)
            {
                if (result.errors != null && result.errors.Any())
                {
                    foreach (var err in result.errors)
                    {
                        var uidLst = string.Join(",", err.recipients.Select(x => x.uid.ToString()));

                        UpdateStatusByUIDs(err.code.ToString(), err.content, "DLVR-Fail", "4080");
                    }
                }

                //UpdateBatchStatusForPending(sessionId, batchId, "DLVR-Sucss", null, null);
            }
            else
            {
                //UpdateBatchStatusForPending(sessionId, batchId, "DLVR-Fail", "NORESULT", "No result returned.");
            }
        }

        private void UpdateBatchStatusForPending(Guid sessionId, int batchId, string status, string errorCode, string errorVerbiage)
        {
            string con = "Data Source=SQL05;Initial Catalog=HC_Marketing;Integrated Security=True;";            

            using (SqlConnection conn = new SqlConnection(con))
            {
                using (SqlCommand cmd = new SqlCommand())
                {
                    conn.Open();
                    cmd.Connection = conn;
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.CommandText = "[dbo].[spSvc_UpdateLeadTextBatchStatusForPending]";

                    cmd.Parameters.AddWithValue("SessionID", sessionId);
                    cmd.Parameters.AddWithValue("BatchID", batchId);
                    cmd.Parameters.AddWithValue("TextMessageStatusDescriptionShort", status);
                    cmd.Parameters.AddWithValue("ErrorCode", errorCode);
                    cmd.Parameters.AddWithValue("ErrorVerbiage", errorVerbiage);                    

                    cmd.ExecuteNonQuery();
                }
            }
        }

        private void UpdateStatusByUIDs(string errorCode, string errorVerbiage, string status, string uidList)
        {
            string con = "Data Source=SQL05;Initial Catalog=HC_Marketing;Integrated Security=True;";

            using (SqlConnection conn = new SqlConnection(con))
            {
                using (SqlCommand cmd = new SqlCommand())
                {
                    conn.Open();
                    cmd.Connection = conn;
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.CommandText = "[dbo].[spSvc_UpdateLeadTextStatusByUIDs]";

                    cmd.Parameters.AddWithValue("ErrorCode", errorCode);
                    cmd.Parameters.AddWithValue("ErrorVerbiage", errorVerbiage);
                    cmd.Parameters.AddWithValue("TextMessageStatusDescriptionShort", status);
                    cmd.Parameters.AddWithValue("UIDList", uidList);

                    cmd.ExecuteNonQuery();
                }
            }
        }

        private void ClearUnsubscibes()
        {
            Console.WriteLine("Clearing blocked numbers.");

            var proxy = new MessageMediaService();
            var auth = new AuthenticationType
            {
                password = "w6P9DXCk",
                userId = "HairClub008"
            };

            var req = new GetBlockedNumbersBodyType();
            req.maximumRecipientsSpecified = false;


            var response = proxy.getBlockedNumbers(auth, req);
            if (response.recipients != null && response.recipients.Any())
            {
                var unblockReq = new UnblockNumbersBodyType();
                unblockReq.recipients = new RecipientType[response.recipients.Length];
                for (int i = 0; i < response.recipients.Length; i++)
                {
                    Console.WriteLine("Unblocking recipient {response.recipients[i].Value}");
                    unblockReq.recipients[i] = response.recipients[i];
                }
                var unblockResponse = proxy.unblockNumbers(auth, unblockReq);
                Console.WriteLine("{unblockResponse.unblocked} Unblocked!");
            }
            else
            {
                Console.WriteLine("No blocked messages to remove.");
            }
            Console.ReadLine();
        }

        public void CheckBlockedNumbers()
        {
            Console.WriteLine("Checking Blocked Numbers.");

            var proxy = new MessageMediaService();
            var auth = new AuthenticationType
            {
                password = "w6P9DXCk",
                userId = "HairClub008"
            };

            var req = new GetBlockedNumbersBodyType();
            req.maximumRecipientsSpecified = false;


            var response = proxy.getBlockedNumbers(auth, req);
            if (response.recipients != null && response.recipients.Any())
            {
                foreach (var recipient in response.recipients)
                {
                    Console.WriteLine("{recipient.Value} Unsubscribed!");
                }
            }
            else
            {
                Console.WriteLine("No blocked numbers exist.");
            }

            Console.ReadLine();
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_16993c4c5a2347bf96f841c6b0f635da")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_16993c4c5a2347bf96f841c6b0f635da")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_16993c4c5a2347bf96f841c6b0f635da.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_16993c4c5a2347bf96f841c6b0f635da.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_16993c4c5a2347bf96f841c6b0f635da.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_16993c4c5a2347bf96f841c6b0f635da.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_16993c4c5a2347bf96f841c6b0f635da.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_16993c4c5a2347bf96f841c6b0f635da.dll">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
cpgEAHBvWgAACghvWwAACnJoBABwA29cAAAKJghvWwAACnJ8BABwBG9cAAAKJghvWwAACnIkBABw
BW9cAAAKJghvWwAACnLqBABwDgRvXAAACiYIb10AAAom3goILAYIb1AAAArc3goHLAYHb1AAAArc
KgABHAAAAgATAHGEAAoAAAAAAgANAIOQAAoAAAAAEzAEANMAAAAWAAARcvoEAHAoXgAACnMBAAAG
CnNXAAAGEwYRBnJNAgBwb1YAAAYRBnJfAgBwb1QAAAYRBgtzaAAABgwIFm9nAAAGBgcIb0wAAAYN
CW9YAAAGLHIJb1gAAAYoEAAAKyxlc3sAAAYTBBEECW9YAAAGjmmNBQAAAm96AAAGFhMFKyNyLgUA
cCheAAAKEQRveQAABhEFCW9YAAAGEQWaohEFF1gTBREFCW9YAAAGjmky0QYHEQRvRgAABiZylgUA
cCheAAAKKwpy5AUAcCheAAAKKF8AAAomKgATMAMAmwAAABcAABFyIgYAcCheAAAKcwEAAAYKc1cA
AAYTBBEEck0CAHBvVgAABhEEcl8CAHBvVAAABhEEC3NoAAAGDAgWb2cAAAYGBwhvTAAABg0Jb1gA
AAYsOglvWAAABigQAAArLC0Jb1gAAAYTBRYTBisWEQURBpomclYGAHAoXgAAChEGF1gTBhEGEQWO
aTLiKwpylgYAcCheAAAKKF8AAAomKh4CKGAAAAoqALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAM
AAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAsNgAAI34AAJg2AABYJwAAI1N0cmluZ3MAAAAA8F0AAMwG
AAAjVVMAvGQAABAAAAAjR1VJRAAAAMxkAACoHQAAI0Jsb2IAAAAAAAAAAgAAAVcdtgkJCwAAAPol
MwAWAAABAAAAUwAAAD0AAACGAAAAVwEAAHsBAABgAAAAEAAAABIBAAAXAAAAAQAAAAoAAAAqAAAA
WAAAALgAAAACAAAAAQAAAAkAAAABAAAAAgAAABAAAAAAAAoAAQAAAAAABgCVBncGCgC8BrUGCgDD
BrUGCgDIBrUGDgDwBtoGDgAdBwgHEgB9B1QHCgCqB5kHCgBUDLUGCgBhDLUGCgCyFbUGFgA/GjQa
CgDyG7UGCgAfHA4cCgBQHDscGgDQHMQcGgD7HMQcCgANHbUGFgCzHZodCgCcHoIeCgDHHrUeCgDe
HrUeCgD7HrUeCgAaH7UeCgAzH7UeCgBMH7UeCgBnH7UeCgCCH7UeCgCbH7UeCgDUH7QfCgD0H7Qf
DgAqIBIgCgBUIEEgDgBxINoGBgCLIGMGBgCmIHcGCgDAILUGCgDRIJkHBgD0IHcGBgAcIXcGBgBn
IXcGCgB9IbUGFgCTIZodFgCkIZodFgC6IZodDgDQIdoGCgDmIbUGFgDrIZodFgD8IZodFgAPIpod
CgBCIkEgCgBfIrUGCgCDIrUeDgCZItoGDgCyItoGCgDHIrQfEgDpIlQHEgALI1QHHgBkI0QjHgB8
I0QjCgCOI7UGGgDHI7UjGgDwI8QcIgAnJMQcIgA/JMQcIgBTJMQcCgB6JLUGIgCBJMQcCgDuJLUG
CgARJf4kGgA3JcQcCgBaJbUGJgCGJXolCgCsJZElGgAeJggmGgAsJggmGgBKJjcmGgBrJjcmGgB1
JsQcGgChJggmGgDHJggmCgDhJrUGCgD3JrUGAAAAAAEAAAAAAAEAAQABABAAMgBGAAUAAQABAAEg
EAB3AEYACQAVAFMAASAQAIoARgAJABcAWAABIBAApgBGAAkAGgBfAAEgEAC0AEYACQAcAGQAASAQ
AM4ARgAJAB4AaQABIBAA5wBGAAkAIQBwAAEhAAD4AEYADQAlAHkAASAQAA0BRgAJACsAeQABIBAA
JAFGAAkALAB8AAEgEAA7AUYACQAvAIMAASAQAFABRgAJADAAhgABIBAAcgFGAAkAMQCJAAEgEACA
AUYACQAyAIwAASAQAKABRgAJADMAjwABIBAAuQFGAAkANACSAAEgEADQAUYACQA1AJUAASAQAOAB
RgAJADYAmAABIBAA+QFGAAkANwCbAAEgEAAQAkYACQA4AJ4AASEAABsCRgANAD0AqQABIBAALgJG
AAkAQQCpAAEgEABFAkYACQBEALAAASAQAFoCRgAJAEYAtQABIQAAZAJGAA0ATADCAAEgEAB2AkYA
CQBPAMIAASAQAI0CRgAJAFIAyQABIBAAogJGAAkAVADOAAEgEAC2AkYACQBVANEAASAQAMkCRgAJ
AFgA2AABIBAA4AJGAAkAXQDjAAEgEADvAkYACQBfAOgAASAQAPsCRgAJAGoA/wABIQAACwNGAA0A
bAAEAQEgEAAfA0YACQBxAAQBAQEAADQDRgARAHIABwEBABAAVgNGABUAcgALAQEBAAB1A0YAEQBz
AA0BAQAQAJQDRgAVAHMAEQEBAQAAsANGABEAdAATAQEAEADSA0YAFQB0ABcBAQEAAPEDRgARAHUA
GQEBABAAEwRGABUAdQAdAQEBAAAyBEYAEQB2AB8BAQAQAFYERgAVAHYAIwEBAQAAdwRGABEAdwAl
AQEAEACbBEYAFQB3ACkBAQEAALwERgARAHgAKwEBABAA6QRGABUAeAAvAQEBAAATBUYAEQB5ADEB
AQAQADUFRgAVAHkANQEBAQAAVAVGABEAegA3AQEAEAB4BUYAFQB6ADsBAQEAAJkFRgARAHsAPQEB
ABAAwAVGABUAewBBAQAAEADkBe4FCQB8AEMBAAEQAB0G7gUZAH4ARwEBABAAJgYxBh0AfwBKAQMB
AABVBgAADQCDAFYBAwEQAN0jAAAJAIYAVgEBAL0HHAABANwHHAABAPgHHAABABcIHAABADYIHAAB
AFcIHAABAHgIHAABAKIIHAABAMEIHAABAOIIHAABAAwJJAABAFkJMAABAJ0JPAABAOoJSAABADcK
VAABAIoKYAABAN0KbAABAEsLeAABAJgLhAABAOsLkAABAKEQXwIBAK0QXwIBAPsQbwIBAAsRdAIB
ABYRdAIBAIoRdAIBAJMRXwIBAMwRdAIBAOMRlwIBAJoSpwIBAKYSdAIBALUSdAIBAPsQbwIBACET
XwIBAC4TvwIBADgTdAIGBrgT0wJWgMATvwJWgNETvwJWgOITvwJWgPYTvwJWgAkUvwIBAPsQbwIB
AJoSpwIBAA8UdAIBALUSdAIBAPsQbwIBADwUdAIBAHkUdAIBAK4U7wIBAN8UdAIBABQVBwMBAEEV
dAIBAN8UdAIBAHYVBwMBAKMVXwIBALsVHwMBAIoRdAIBAEEVdAIBAMoVIwMGBrgT0wJWgD8WIwNW
gEkWIwNWgBoTIwMBABQVRwMBABYRdAIBAFEWdAIBAIYWdAIBAJoWlwIBADwXXwIBAEgXHwMBACET
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
AwDiHQAABADrHQAAAQD2HQAAAQDHHQAAAgDWHQAAAQDHHQAAAgDWHQAAAwACHgAAAQAMHgAAAAAA
AAAAAQDHHQAAAgDWHQAAAQDHHQAAAgDWHQAAAwDiHQAABADrHQAAAQD2HQAAAQDHHQAAAgDWHQAA
AQDHHQAAAgDWHQAAAwACHgAAAQAMHgAAAAAAAAAAAQDHHQAAAgDWHQAAAQDHHQAAAgDWHQAAAwDi
HQAABADrHQAAAQD2HQAAAQDHHQAAAgDWHQAAAQDHHQAAAgDWHQAAAwACHgAAAQAMHgAAAAAAAAAA
AQDHHQAAAgDWHQAAAQDHHQAAAgDWHQAAAwDiHQAABADrHQAAAQD2HQAAAQDHHQAAAgDWHQAAAQDH
HQAAAgDWHQAAAwACHgAAAQAMHgAAAAAAAAAAAQDHHQAAAgDWHQAAAQDHHQAAAgDWHQAAAwDiHQAA
BADrHQAAAQD2HQAAAQDHHQAAAgDWHQAAAQDHHQAAAgDWHQAAAwACHgAAAQAMHgAAAAAAAAAAAQDH
HQAAAgDWHQAAAQDHHQAAAgDWHQAAAwDiHQAABADrHQAAAQD2HQAAAQDHHQAAAgDWHQAAAQDHHQAA
AgDWHQAAAwACHgAAAQAMHgAAAAAAAAAAAQDHHQAAAgDWHQAAAQDHHQAAAgDWHQAAAwDiHQAABADr
HQAAAQD2HQAAAQDHHQAAAgDWHQAAAQDHHQAAAgDWHQAAAwACHgAAAQAMHgAAAAAAAAAAAQDHHQAA
AgDWHQAAAQDHHQAAAgDWHQAAAwDiHQAABADrHQAAAQD2HQAAAQDHHQAAAgDWHQAAAQDHHQAAAgDW
HQAAAwACHgAAAQAMHgAAAQACHgAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAA
AQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCU
HQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAA
AQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCU
HQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAA
AQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCU
HQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAA
AQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCUHQAAAQCU
HQAAAQCUHQAAAQCUHQAAAQAQHgAAAgAXHgAAAQAeHgAAAgAlHgAAAQAeHgAAAgAlHgAAAwDiHQAA
BAAQHgAAAQAnHgAAAQDqGwAAAgAuHgAAAwA4HgAABAACHgAAAQAQHgAAAgAXHgAAAQAeHgAAAgAl
HgAAAQAeHgAAAgAlHgAAAwDiHQAABAAQHgAAAQAnHgAAAQDqGwAAAgAuHgAAAwA4HgAABAACHgAA
AQAQHgAAAgAXHgAAAQAeHgAAAgAlHgAAAQAeHgAAAgAlHgAAAwDiHQAABAAQHgAAAQAnHgAAAQDq
GwAAAgAuHgAAAwA4HgAABAACHgAAAQAQHgAAAgAXHgAAAQAeHgAAAgAlHgAAAQAeHgAAAgAlHgAA
AwDiHQAABAAQHgAAAQAnHgAAAQDqGwAAAgAuHgAAAwA4HgAABAACHgAAAQAQHgAAAgAXHgAAAQAe
HgAAAgAlHgAAAQAeHgAAAgAlHgAAAwDiHQAABAAQHgAAAQAnHgAAAQDqGwAAAgAuHgAAAwA4HgAA
BAACHgAAAQAQHgAAAgAXHgAAAQAeHgAAAgAlHgAAAQAeHgAAAgAlHgAAAwDiHQAABAAQHgAAAQAn
HgAAAQDqGwAAAgAuHgAAAwA4HgAABAACHgAAAQAQHgAAAgAXHgAAAQAeHgAAAgAlHgAAAQAeHgAA
AgAlHgAAAwDiHQAABAAQHgAAAQAnHgAAAQDqGwAAAgAuHgAAAwA4HgAABAACHgAAAQAQHgAAAgAX
HgAAAQAeHgAAAgAlHgAAAQAeHgAAAgAlHgAAAwDiHQAABAAQHgAAAQAnHgAAAQDqGwAAAgAuHgAA
AwA4HgAABAACHgAAAQAQHgAAAgAXHgAAAQAeHgAAAgAlHgAAAQAeHgAAAgAlHgAAAwDiHQAABAAQ
HgAAAQAnHgAAAQDqGwAAAgAuHgAAAwA4HgAABAACHgAAAQAQHgAAAgAXHgAAAQAeHgAAAgAlHgAA
AQAeHgAAAgAlHgAAAwDiHQAABAAQHgAAAQAnHgAAAQDqGwAAAgAuHgAAAwA4HgAABAACHgAAAQCU
HQAAAQBCHgAAAQBNHgAAAgBQHgAAAwBYHgAAAQBYHgAAAgBQHgAAAwA4FgAABABiHgAABQBsHgAA
AQBiHgAAAgBsHgAAAwA4FgAABAB6HgAAAQAHJAAAAQAHJAAAAQAHJJkABglmAqEABglmAqkABglm
ArEABglmArkABglmAsEABglmAskABglmAtEABglmAtkABglmAuEABglmAukABglmAvEABgneBfkA
BgkgAAEBBgnjBQkBBgkgABEBBglmAhkBBgkgAAkABgkgACEBuCBmAikBySBWBjEB3SBiBikB7SBW
BjkBBglmAgkAzRvfCAkA1BvuCAkA4Bv+CEEABgkvBAkAECEFCUEBNSEPCSkAQSEUCSkASyGaAikA
WSEZCUkBlRDNAFEBBgkgAFkBBgkgABEABgkgAGEBBglmAmkBBgkgAHEBBgkgGYEBBgkgAIkBBgkg
AHEBBgmeAnEBBgnNAJEBBgkgACkABgkZGykAKCIgAJkBBgkgAHkBcSIhG3kBjCIqG3EABgkwG7EB
Bgk9G8EBBgkgADEABgkgAMkBBgkgADkAHSNRG9EBbiNXG9kBhSNdG+EBrhEZCZEABglmAokAlSNk
G9EBnyPeBekBriNoG2kABgluG/EBBgkgAIEABgkgAPEB2COAGwECOSSUGwkCbSSiGwwABgkvBCEC
oyS5GwkCqSTZGykC9SRiAokAHSUAHDECKyUZCTkCQyUGHPkBhSMMHBEA9SRiAikCSyURHDECUSWa
AkECZiUgAEkCuiUWHBQABgkvBEkCviUwHOkBxSVRHFkCBglmAmECBgkgAGkCVyYgAGECXCagHHEC
gSanHHECkSZmAmECuCauHIEC1Ca0HHEC5yZkG5kC/ybGHJkCCSfQHDkABgkgAAgAmADWAggAnADb
AggAoADgAggApADlAggAqADqAggA+ADWAggA/ADbAggAAAHgAggANAHWAggAOAHbAggAtAHWAggA
uAHbAggAvAHgAggAwAHlAggAEALWAggAFALbAi4AOwA9HS4AQwBmHS4AKwDxGS4AMwDxGS4ASwDx
GS4AYwB9HS4AawCGHS4AEwD1HC4AGwA9HS4AIwDxGUMAcwDpBUMAewDbAkMAiwAIBkMAgwD+BWMA
gwD+BWMAGwHXGGMAewDbAmMAcwDpBWkAKwEDGYMAgwD+BYMAGwHXGIMAcwDpBYMAewDbAokAMwHb
AqMAewDbAqMAGwHXGKMAgwD+BaMAcwDpBakAMwHbAsMAgwD+BcMAGwHXGMMAcwDpBcMAewDbAskA
MwHbAskAOwEoGeMAcwDpBeMAgwD+BeMAGwHXGOMAewDbAukAQwHbAgMBcwDpBQMBgwD+BQMBewDb
AgMBGwHXGCMBcwDpBSMBGwHXGCkBSwHbAkMBGwHXGEMBgwD+BUMBewDbAkMBcwDpBUkBKwGKGWMB
gwD+BWMBcwDpBWMBGwHXGGMBewDbAmkBMwHbAoMBcwDpBYMBgwD+BYMBGwHXGIMBewDbAokBMwHb
AqMBGwHXGKMBcwDpBaMBewDbAqMBgwD+BakBKwEDGcMBewDbAsMBGwHXGMMBcwDpBcMBgwD+BeMB
gwD+BeMBcwDpBeMBewDbAuMBGwHXGOkBMwHbAgMCGwHXGAMCewDbAgMCgwD+BQMCcwDpBQkCMwHb
AiMCewDbAiMCgwD+BSMCGwHXGCMCcwDpBSkCKwEDGUMCgwD+BUMCGwHXGEMCcwDpBUMCewDbAkkC
KwGKGWMCGwHXGGMCcwDpBWMCewDbAmMCgwD+BWkCMwHbAoMCewDbAoMCgwD+BYMCGwHXGIMCcwDp
BYkCMwHbAqMCewDbAqMCgwD+BaMCGwHXGKMCcwDpBaQCCwDSBakCKwEDGcACuwAjB8MCGwHXGMMC
cwDpBckCMwHbAuMCcwDpBeMCGwHXGOMCewDbAuMCgwD+BekCMwHbAgMDcwDpBQMDewDbAgMDgwD+
BQMDGwHXGAkDKwGjGSMDgwD+BSMDcwDpBSMDewDbAiMDGwHXGCkDMwHbAkMDGwHXGEMDcwDpBUkD
KwG+GWMDewDbAmMDGwHXGGMDcwDpBWMDgwD+BWkDMwHbAoADuwAjCYMDgwD+BYMDcwDpBYMDewDb
AoMDGwHXGIkDMwHbAqMDewDbAqMDgwD+BaMDGwHXGKMDcwDpBakDKwHYGcMDGwHXGMMDewDbAsMD
gwD+BcMDcwDpBeMDgwD+BeMDGwHXGOMDewDbAuMDcwDpBQMEcwDpBQMEGwHXGAMEgwD+BQMEewDb
AgkEMwHbAiMEGwHXGCMEgwD+BSMEcwDpBSMEewDbAikEMwHbAkAEuwDcCkMEcwDpBUMEewDbAkME
gwD+BUMEGwHXGEkEMwHbAmMEGwHXGGMEcwDpBWQECwDSBWkEKwG+GYMEcwDpBYMEewDbAoMEgwD+
BYMEGwHXGIkEMwHbAqMEcwDpBakEMwHbAsMEgwD+BcMEcwDpBcMEewDbAuMEcwDpBekESwHbAgAF
uwCYDAMFcwDpBQMFewDbAgMFgwD+BSMFcwDpBUMFcwDpBUMFgwD+BUMFewDbAmMFcwDpBWkFMwHb
AoMFcwDpBYMFewDbAoMFgwD+BYkFMwHbAqMFcwDpBaQFCwDSBakFMwHbAsAFuwBUDsMFgwD+BcMF
ewDbAsMFcwDpBckFKwHYGeMFcwDpBekFMwHbAgMGcwDpBQMGewDbAgMGgwD+BQkGMwHbAiMGcwDp
BUMGgwD+BUMGcwDpBUMGewDbAkkGSwHbAmMGcwDpBYAGuwASEIMGewDbAoMGcwDpBYMGgwD+BYkG
MwHbAqMGcwDpBakGMwHbAsMGcwDpBcMGewDbAsMGgwD+BckGMwHbAuMGcwDpBQMHgwD+BQMHewDb
AgMHcwDpBQkHKwGKGSMHewHbAikHMwHbAkAHuwDQEUkHMwHbAmMHswHbAmQHCwDSBWkHMwHbAokH
MwHbAqMHowHbAqkHQwHbAukHKwEDGQAIuwCcE0kISwHbAmkIUwHxGYkIOwH3GakIKwFZGsAIuwBY
FckIWwFwGskIMwHbAukIMwHbAukIOwEoGQkJYwHbAiQJCwDSBSkJCwC9GkkJMwHbAkkJWwHKGoAJ
uwAWF8kKmwFEG+QKCwDSBekKmwFEG6QMCwDSBWQOCwDSBcEPowHbAiEQowHbAiQQCwDSBUEQowHb
AuQRCwDSBYAqowHbAqAqowHbAnUGhwaZBqsGvQbPBuEG8wYFBxcH5wj5CB0JOBt1G4cb5hv8G1wc
gxy8HNQc5BwCAAEAAAAMCZQAAABZCZwAAACdCaQAAADqCawAAAA3CrQAAACKCrwAAADdCsQAAABL
C8wAAACYC9QAAADrC9wAAwABAAQAAwAFAAYABgAIAAcACgAIAA0ACgARAAsAEgAMABUADQAWAA4A
FwAPABgAEAAZABEAGgASABsAEwAcABQAHQAVAB4AFwAjABgAJgAZACgAGwAuABwAMQAdADMAHgA0
AB8ANwAgADwAIQA+ACIASQAkAEsAJgBMACgATQAqAE4ALABPAC4AUAAwAFEAMgBSADQAUwA2AFQA
OABVADkAVgA6AFgAAADrEGsCAADyEGsCAABwEY0CAAB7EZMCAACBEZMCAADCEZMCAADGEWsCAABt
EpMCAAB/EqMCAAAJE7kCAAAQE5MCAAAaE5MCAABwEY0CAACcE2sCAACkE84CAACpE5MCAABwEY0C
AAAJE7kCAAA0FJMCAAAaE5MCAABwEY0CAABtFJMCAACkFJMCAADWFAEDAAAKFZMCAAA5FRkDAABs
FZMCAAAKFZMCAACbFRkDAAAkFmsCAAAuFj0DAADCEZMCAABsFZMCAAA4FkIDAAA5FVkDAACBEZMC
AAB8FpMCAAAVF5MCAAAkF6MCAACoF2sCAACvFz0DAACcE2sCAAC4F24DAADCEZMCAABsFZMCAACb
FYUDAACBEZMCAAB8FpMCAABYGJMCAABnGKMCAAC5GJoDAABSGWsCAABXGZMCAABjGZMCAAC5GJoD
AAAJE7kCAAC6GZMCAAC/GZMCAAAaE5MCAADlGWsCAADGEWsCAACoF2sCAABwEY0CAACcE2sCAAC/
GT0DAAD9GqMCAAAQG6MCAAAfG9IDAAAuG9YDAAC4F24DAACpE5MCAAAzG90DAACIGwoEAACQGxEE
AADWFCkEAAAHHGIEAAAHHIAEAAAHHJ4EAAAHHLwEAAAHHNoEAAAHHPgEAAAHHBYFAAAHHDQFAAAH
HFIFAAAHHHAFAAAfHI0FAACYHJIFAAC8HKIFCAACAAIAEAADAAIAAQBUAAMAAgBTAAMAEAAFAAQA
CAAEAAQAAQBWAAUAAgBVAAUACAAGAAYAEAAHAAYAAQBZAAcAAgBYAAcAEAAJAAgACAAIAAgAAQBb
AAkAAgBaAAkACAAKAAoAEAALAAoAAQBdAAsAAgBcAAsACAAMAAwAEAANAAwAAQBhAA0AAgBgAA0A
CAAOAA4AEAAPAA4AAQBjAA8AAgBiAA8AEAARABAACAAQABAAAQBlABEAAgBkABEAEAATABIACAAS
ABIAAQBnABMAAgBmABMACAAUABQAEAAVABQAAQBqABUAAgBpABUAAQBsABcAAgBrABcAAgBtABkA
AQBuABkAAgBwABsAAQBxABsAAgByAB0AAQBzAB0AAQB1AB8AAgB0AB8AAQB3ACEAAgB2ACEAAgB5
ACMAAQB6ACMAAQB9ACUAAgB8ACUAAQB/ACcAAgB+ACcAAgCAACkAAQCBACkAAgCDACsAAQCEACsA
AQCHAC0AAgCGAC0AAgCJAC8AAQCKAC8AAQCNADEAAgCMADEAAQCQADMAAgCPADMAAgCSADUAAQCT
ADUAAgCVADcAAQCWADcAAQCZADkAAgCYADkAAgCbADsAAQCcADsAAgCeAD0AAQCfAD0AAQChAD8A
AgCgAD8AAgCiAEEAAQCjAEEAAgCkAEMAAQClAEMAAQCnAEUAAgCmAEUAAgCpAEcAAQCqAEcAAQCs
AEkAAgCrAEkAAgCtAEsAAQCuAEsAAQCxAE0AAgCwAE0AAQCzAE8AAgCyAE8AAgC1AFEAAQC2AFEA
AQC4AFMAAgC3AFMAAQC6AFUAAgC5AFUAAgC7AFcAAQC8AFcAAgC9AFkAAQC+AFkAAQDAAFsAAgC/
AFsAAgDCAF0AAQDDAF0AAQDFAF8AAgDEAF8AAQDHAGEAAgDGAGEAAgDJAGMAAQDKAGMAAgDLAGUA
AQDMAGUAAQDPAGcAAgDOAGcAAgDSAGkAAQDTAGkAAgDUAGsAAQDVAGsAAQDXAG0AAgDWAG0AAgDY
AG8AAQDZAG8AAgDaAHEAAQDbAHEAAQDdAHMAAgDcAHMAAgDeAHUAAQDfAHUAAQDhAHcAAgDgAHcA
AQDkAHkAAgDjAHkAAgDlAHsAAQDmAHsAAgDpAH0AAQDqAH0AAQDsAH8AAgDrAH8AAgDtAIEAAQDu
AIEAAgDvAIMAAQDwAIMAAQDyAIUAAgDxAIUAAgDzAIcAAQD0AIcAAgD1AIkAAQD2AIkAAQD4AIsA
AgD3AIsAAgD5AI0AAQD6AI0AAgD7AI8AAQD8AI8AAQD+AJEAAgD9AJEAAgAAAZMAAQABAZMAAgAC
AZUAAQADAZUAAQAFAZcAAgAEAZcAAgAMAZkAAgASAZsAAgAYAZ0AAgAeAZ8AAgAkAaEAAgAqAaMA
AgAwAaUAAgA2AacAAgA8AakAAgBCAasAAgBEAa0AAgBFAa8AAQBGAa8AAgBHAbEArxsnHASAAAAB
AAAA+BckbQAAAAAAADEGAAAEAAAAAAAAAAAAAAABAGMGAAAAAAQAAAAAAAAAAAAAAAoArAYAAAAA
BAAAAAAAAAAAAAAACgC1BgAAAAALAAAAAAAAAAAAAAATADUHAAAAAAQAAAAAAAAAAAAAAAoANBoA
AAAABAAAAAAAAAAAAAAACgDEHAAAAAALAAAAAAAAAAAAAAATACUjAAAAAAQAAAAAAAAAAAAAAAoA
CSQAAAAABAAAAAAAAAAAAAAACgBuJQAAAAAAAAAAAQAAABInAAA8ADsAPQA7ACsAbwYrAIEGKwCT
BisApQYrALcGKwDJBisA2wYrAO0GKwD/BisAEQeHAJ4bjQDTG48A0xujACIcpwBLHKMAyxwAAAA8
TW9kdWxlPgBTVF8xNjk5M2M0YzVhMjM0N2JmOTZmODQxYzZiMGY2MzVkYS5kbGwATWVzc2FnZU1l
ZGlhU2VydmljZQBTVF8xNjk5M2M0YzVhMjM0N2JmOTZmODQxYzZiMGY2MzVkYS5TZXJ2aWNlUHJv
eHkAQXV0aGVudGljYXRpb25UeXBlAEdldEJsb2NrZWROdW1iZXJzUmVzdWx0VHlwZQBSZWNpcGll
bnRUeXBlAEdldEJsb2NrZWROdW1iZXJzQm9keVR5cGUAVW5ibG9ja051bWJlcnNSZXN1bHRUeXBl
AE1lc3NhZ2VFcnJvclR5cGUATWVzc2FnZUVycm9yQ29kZVR5cGUAVW5ibG9ja051bWJlcnNCb2R5
VHlwZQBCbG9ja051bWJlcnNSZXN1bHRUeXBlAEJsb2NrTnVtYmVyc0JvZHlUeXBlAERlbGV0ZVNj
aGVkdWxlZE1lc3NhZ2VzUmVzdWx0VHlwZQBNZXNzYWdlSWRUeXBlAERlbGV0ZVNjaGVkdWxlZE1l
c3NhZ2VzQm9keVR5cGUAQ29uZmlybVJlcG9ydHNSZXN1bHRUeXBlAENvbmZpcm1SZXBvcnRzQm9k
eVR5cGUAQ29uZmlybUl0ZW1UeXBlAENvbmZpcm1SZXBsaWVzUmVzdWx0VHlwZQBDb25maXJtUmVw
bGllc0JvZHlUeXBlAFJlcG9ydFR5cGUARGVsaXZlcnlTdGF0dXNUeXBlAENoZWNrUmVwb3J0c1Jl
c3VsdFR5cGUAQ2hlY2tSZXBvcnRzQm9keVR5cGUAUmVwbHlUeXBlAE1lc3NhZ2VGb3JtYXRUeXBl
AENoZWNrUmVwbGllc1Jlc3VsdFR5cGUAQ2hlY2tSZXBsaWVzQm9keVR5cGUAQ2hlY2tVc2VyUmVz
dWx0VHlwZQBBY2NvdW50RGV0YWlsc1R5cGUAU2VuZE1lc3NhZ2VzUmVzdWx0VHlwZQBNZXNzYWdl
VGFnVHlwZQBNZXNzYWdlVHlwZQBNZXNzYWdlTGlzdFR5cGUATWVzc2FnZVNlbmRNb2RlVHlwZQBT
ZW5kTWVzc2FnZXNCb2R5VHlwZQBzZW5kTWVzc2FnZXNDb21wbGV0ZWRFdmVudEhhbmRsZXIAc2Vu
ZE1lc3NhZ2VzQ29tcGxldGVkRXZlbnRBcmdzAGNoZWNrVXNlckNvbXBsZXRlZEV2ZW50SGFuZGxl
cgBjaGVja1VzZXJDb21wbGV0ZWRFdmVudEFyZ3MAY2hlY2tSZXBsaWVzQ29tcGxldGVkRXZlbnRI
YW5kbGVyAGNoZWNrUmVwbGllc0NvbXBsZXRlZEV2ZW50QXJncwBjaGVja1JlcG9ydHNDb21wbGV0
ZWRFdmVudEhhbmRsZXIAY2hlY2tSZXBvcnRzQ29tcGxldGVkRXZlbnRBcmdzAGNvbmZpcm1SZXBs
aWVzQ29tcGxldGVkRXZlbnRIYW5kbGVyAGNvbmZpcm1SZXBsaWVzQ29tcGxldGVkRXZlbnRBcmdz
AGNvbmZpcm1SZXBvcnRzQ29tcGxldGVkRXZlbnRIYW5kbGVyAGNvbmZpcm1SZXBvcnRzQ29tcGxl
dGVkRXZlbnRBcmdzAGRlbGV0ZVNjaGVkdWxlZE1lc3NhZ2VzQ29tcGxldGVkRXZlbnRIYW5kbGVy
AGRlbGV0ZVNjaGVkdWxlZE1lc3NhZ2VzQ29tcGxldGVkRXZlbnRBcmdzAGJsb2NrTnVtYmVyc0Nv
bXBsZXRlZEV2ZW50SGFuZGxlcgBibG9ja051bWJlcnNDb21wbGV0ZWRFdmVudEFyZ3MAdW5ibG9j
a051bWJlcnNDb21wbGV0ZWRFdmVudEhhbmRsZXIAdW5ibG9ja051bWJlcnNDb21wbGV0ZWRFdmVu
dEFyZ3MAZ2V0QmxvY2tlZE51bWJlcnNDb21wbGV0ZWRFdmVudEhhbmRsZXIAZ2V0QmxvY2tlZE51
bWJlcnNDb21wbGV0ZWRFdmVudEFyZ3MAUmVzb3VyY2VzAFNUXzE2OTkzYzRjNWEyMzQ3YmY5NmY4
NDFjNmIwZjYzNWRhLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF8xNjk5M2M0YzVh
MjM0N2JmOTZmODQxYzZiMGY2MzVkYQBTY3JpcHRSZXN1bHRzAFN5c3RlbS5XZWIuU2VydmljZXMA
U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMAU29hcEh0dHBDbGllbnRQcm90b2NvbABtc2Nv
cmxpYgBTeXN0ZW0AT2JqZWN0AEVudW0ATXVsdGljYXN0RGVsZWdhdGUAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAEFzeW5jQ29tcGxldGVkRXZlbnRBcmdzAFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVs
QmFzZQBTeXN0ZW0uVGhyZWFkaW5nAFNlbmRPclBvc3RDYWxsYmFjawBzZW5kTWVzc2FnZXNPcGVy
YXRpb25Db21wbGV0ZWQAY2hlY2tVc2VyT3BlcmF0aW9uQ29tcGxldGVkAGNoZWNrUmVwbGllc09w
ZXJhdGlvbkNvbXBsZXRlZABjaGVja1JlcG9ydHNPcGVyYXRpb25Db21wbGV0ZWQAY29uZmlybVJl
cGxpZXNPcGVyYXRpb25Db21wbGV0ZWQAY29uZmlybVJlcG9ydHNPcGVyYXRpb25Db21wbGV0ZWQA
ZGVsZXRlU2NoZWR1bGVkTWVzc2FnZXNPcGVyYXRpb25Db21wbGV0ZWQAYmxvY2tOdW1iZXJzT3Bl
cmF0aW9uQ29tcGxldGVkAHVuYmxvY2tOdW1iZXJzT3BlcmF0aW9uQ29tcGxldGVkAGdldEJsb2Nr
ZWROdW1iZXJzT3BlcmF0aW9uQ29tcGxldGVkAC5jdG9yAHNlbmRNZXNzYWdlc0NvbXBsZXRlZABh
ZGRfc2VuZE1lc3NhZ2VzQ29tcGxldGVkAHJlbW92ZV9zZW5kTWVzc2FnZXNDb21wbGV0ZWQAY2hl
Y2tVc2VyQ29tcGxldGVkAGFkZF9jaGVja1VzZXJDb21wbGV0ZWQAcmVtb3ZlX2NoZWNrVXNlckNv
bXBsZXRlZABjaGVja1JlcGxpZXNDb21wbGV0ZWQAYWRkX2NoZWNrUmVwbGllc0NvbXBsZXRlZABy
ZW1vdmVfY2hlY2tSZXBsaWVzQ29tcGxldGVkAGNoZWNrUmVwb3J0c0NvbXBsZXRlZABhZGRfY2hl
Y2tSZXBvcnRzQ29tcGxldGVkAHJlbW92ZV9jaGVja1JlcG9ydHNDb21wbGV0ZWQAY29uZmlybVJl
cGxpZXNDb21wbGV0ZWQAYWRkX2NvbmZpcm1SZXBsaWVzQ29tcGxldGVkAHJlbW92ZV9jb25maXJt
UmVwbGllc0NvbXBsZXRlZABjb25maXJtUmVwb3J0c0NvbXBsZXRlZABhZGRfY29uZmlybVJlcG9y
dHNDb21wbGV0ZWQAcmVtb3ZlX2NvbmZpcm1SZXBvcnRzQ29tcGxldGVkAGRlbGV0ZVNjaGVkdWxl
ZE1lc3NhZ2VzQ29tcGxldGVkAGFkZF9kZWxldGVTY2hlZHVsZWRNZXNzYWdlc0NvbXBsZXRlZABy
ZW1vdmVfZGVsZXRlU2NoZWR1bGVkTWVzc2FnZXNDb21wbGV0ZWQAYmxvY2tOdW1iZXJzQ29tcGxl
dGVkAGFkZF9ibG9ja051bWJlcnNDb21wbGV0ZWQAcmVtb3ZlX2Jsb2NrTnVtYmVyc0NvbXBsZXRl
ZAB1bmJsb2NrTnVtYmVyc0NvbXBsZXRlZABhZGRfdW5ibG9ja051bWJlcnNDb21wbGV0ZWQAcmVt
b3ZlX3VuYmxvY2tOdW1iZXJzQ29tcGxldGVkAGdldEJsb2NrZWROdW1iZXJzQ29tcGxldGVkAGFk
ZF9nZXRCbG9ja2VkTnVtYmVyc0NvbXBsZXRlZAByZW1vdmVfZ2V0QmxvY2tlZE51bWJlcnNDb21w
bGV0ZWQAc2VuZE1lc3NhZ2VzAElBc3luY1Jlc3VsdABBc3luY0NhbGxiYWNrAEJlZ2luc2VuZE1l
c3NhZ2VzAEVuZHNlbmRNZXNzYWdlcwBzZW5kTWVzc2FnZXNBc3luYwBPbnNlbmRNZXNzYWdlc09w
ZXJhdGlvbkNvbXBsZXRlZABjaGVja1VzZXIAQmVnaW5jaGVja1VzZXIARW5kY2hlY2tVc2VyAGNo
ZWNrVXNlckFzeW5jAE9uY2hlY2tVc2VyT3BlcmF0aW9uQ29tcGxldGVkAGNoZWNrUmVwbGllcwBC
ZWdpbmNoZWNrUmVwbGllcwBFbmRjaGVja1JlcGxpZXMAY2hlY2tSZXBsaWVzQXN5bmMAT25jaGVj
a1JlcGxpZXNPcGVyYXRpb25Db21wbGV0ZWQAY2hlY2tSZXBvcnRzAEJlZ2luY2hlY2tSZXBvcnRz
AEVuZGNoZWNrUmVwb3J0cwBjaGVja1JlcG9ydHNBc3luYwBPbmNoZWNrUmVwb3J0c09wZXJhdGlv
bkNvbXBsZXRlZABjb25maXJtUmVwbGllcwBCZWdpbmNvbmZpcm1SZXBsaWVzAEVuZGNvbmZpcm1S
ZXBsaWVzAGNvbmZpcm1SZXBsaWVzQXN5bmMAT25jb25maXJtUmVwbGllc09wZXJhdGlvbkNvbXBs
ZXRlZABjb25maXJtUmVwb3J0cwBCZWdpbmNvbmZpcm1SZXBvcnRzAEVuZGNvbmZpcm1SZXBvcnRz
AGNvbmZpcm1SZXBvcnRzQXN5bmMAT25jb25maXJtUmVwb3J0c09wZXJhdGlvbkNvbXBsZXRlZABk
ZWxldGVTY2hlZHVsZWRNZXNzYWdlcwBCZWdpbmRlbGV0ZVNjaGVkdWxlZE1lc3NhZ2VzAEVuZGRl
bGV0ZVNjaGVkdWxlZE1lc3NhZ2VzAGRlbGV0ZVNjaGVkdWxlZE1lc3NhZ2VzQXN5bmMAT25kZWxl
dGVTY2hlZHVsZWRNZXNzYWdlc09wZXJhdGlvbkNvbXBsZXRlZABibG9ja051bWJlcnMAQmVnaW5i
bG9ja051bWJlcnMARW5kYmxvY2tOdW1iZXJzAGJsb2NrTnVtYmVyc0FzeW5jAE9uYmxvY2tOdW1i
ZXJzT3BlcmF0aW9uQ29tcGxldGVkAHVuYmxvY2tOdW1iZXJzAEJlZ2ludW5ibG9ja051bWJlcnMA
RW5kdW5ibG9ja051bWJlcnMAdW5ibG9ja051bWJlcnNBc3luYwBPbnVuYmxvY2tOdW1iZXJzT3Bl
cmF0aW9uQ29tcGxldGVkAGdldEJsb2NrZWROdW1iZXJzAEJlZ2luZ2V0QmxvY2tlZE51bWJlcnMA
RW5kZ2V0QmxvY2tlZE51bWJlcnMAZ2V0QmxvY2tlZE51bWJlcnNBc3luYwBPbmdldEJsb2NrZWRO
dW1iZXJzT3BlcmF0aW9uQ29tcGxldGVkAENhbmNlbEFzeW5jAHVzZXJJZEZpZWxkAHBhc3N3b3Jk
RmllbGQAZ2V0X3VzZXJJZABzZXRfdXNlcklkAGdldF9wYXNzd29yZABzZXRfcGFzc3dvcmQAdXNl
cklkAHBhc3N3b3JkAHJlY2lwaWVudHNGaWVsZABmb3VuZEZpZWxkAHJldHVybmVkRmllbGQAZ2V0
X3JlY2lwaWVudHMAc2V0X3JlY2lwaWVudHMAZ2V0X2ZvdW5kAHNldF9mb3VuZABnZXRfcmV0dXJu
ZWQAc2V0X3JldHVybmVkAHJlY2lwaWVudHMAZm91bmQAcmV0dXJuZWQAdWlkRmllbGQAdmFsdWVG
aWVsZABnZXRfdWlkAHNldF91aWQAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB1aWQAVmFsdWUAbWF4aW11
bVJlY2lwaWVudHNGaWVsZABtYXhpbXVtUmVjaXBpZW50c0ZpZWxkU3BlY2lmaWVkAGdldF9tYXhp
bXVtUmVjaXBpZW50cwBzZXRfbWF4aW11bVJlY2lwaWVudHMAZ2V0X21heGltdW1SZWNpcGllbnRz
U3BlY2lmaWVkAHNldF9tYXhpbXVtUmVjaXBpZW50c1NwZWNpZmllZABtYXhpbXVtUmVjaXBpZW50
cwBtYXhpbXVtUmVjaXBpZW50c1NwZWNpZmllZABlcnJvcnNGaWVsZAB1bmJsb2NrZWRGaWVsZABm
YWlsZWRGaWVsZABnZXRfZXJyb3JzAHNldF9lcnJvcnMAZ2V0X3VuYmxvY2tlZABzZXRfdW5ibG9j
a2VkAGdldF9mYWlsZWQAc2V0X2ZhaWxlZABlcnJvcnMAdW5ibG9ja2VkAGZhaWxlZABjb250ZW50
RmllbGQAY29kZUZpZWxkAHNlcXVlbmNlTnVtYmVyRmllbGQAZ2V0X2NvbnRlbnQAc2V0X2NvbnRl
bnQAZ2V0X2NvZGUAc2V0X2NvZGUAZ2V0X3NlcXVlbmNlTnVtYmVyAHNldF9zZXF1ZW5jZU51bWJl
cgBjb250ZW50AGNvZGUAc2VxdWVuY2VOdW1iZXIAdmFsdWVfXwBpbnZhbGlkUmVjaXBpZW50AHJl
Y2lwaWVudEJsb2NrZWQAZW1wdHlNZXNzYWdlQ29udGVudABtZXNzYWdlTGVuZ3RoTGltaXQAb3Ro
ZXIAYmxvY2tlZEZpZWxkAGdldF9ibG9ja2VkAHNldF9ibG9ja2VkAGJsb2NrZWQAdW5zY2hlZHVs
ZWRGaWVsZABnZXRfdW5zY2hlZHVsZWQAc2V0X3Vuc2NoZWR1bGVkAHVuc2NoZWR1bGVkAG1lc3Nh
Z2VJZEZpZWxkAGdldF9tZXNzYWdlSWQAc2V0X21lc3NhZ2VJZABtZXNzYWdlSWQAbWVzc2FnZXNG
aWVsZABnZXRfbWVzc2FnZXMAc2V0X21lc3NhZ2VzAG1lc3NhZ2VzAGNvbmZpcm1lZEZpZWxkAGdl
dF9jb25maXJtZWQAc2V0X2NvbmZpcm1lZABjb25maXJtZWQAcmVwb3J0c0ZpZWxkAGdldF9yZXBv
cnRzAHNldF9yZXBvcnRzAHJlcG9ydHMAcmVjZWlwdElkRmllbGQAZ2V0X3JlY2VpcHRJZABzZXRf
cmVjZWlwdElkAHJlY2VpcHRJZAByZXBsaWVzRmllbGQAZ2V0X3JlcGxpZXMAc2V0X3JlcGxpZXMA
cmVwbGllcwByZWNpcGllbnRGaWVsZABEYXRlVGltZQB0aW1lc3RhbXBGaWVsZABzdGF0dXNGaWVs
ZABnZXRfcmVjaXBpZW50AHNldF9yZWNpcGllbnQAZ2V0X3RpbWVzdGFtcABzZXRfdGltZXN0YW1w
AGdldF9zdGF0dXMAc2V0X3N0YXR1cwByZWNpcGllbnQAdGltZXN0YW1wAHN0YXR1cwBkZWxpdmVy
ZWQAcGVuZGluZwByZW1haW5pbmdGaWVsZABnZXRfcmVtYWluaW5nAHNldF9yZW1haW5pbmcAcmVt
YWluaW5nAG1heGltdW1SZXBvcnRzRmllbGQAbWF4aW11bVJlcG9ydHNGaWVsZFNwZWNpZmllZABn
ZXRfbWF4aW11bVJlcG9ydHMAc2V0X21heGltdW1SZXBvcnRzAGdldF9tYXhpbXVtUmVwb3J0c1Nw
ZWNpZmllZABzZXRfbWF4aW11bVJlcG9ydHNTcGVjaWZpZWQAbWF4aW11bVJlcG9ydHMAbWF4aW11
bVJlcG9ydHNTcGVjaWZpZWQAb3JpZ2luRmllbGQAcmVjZWl2ZWRGaWVsZABmb3JtYXRGaWVsZABn
ZXRfb3JpZ2luAHNldF9vcmlnaW4AZ2V0X3JlY2VpdmVkAHNldF9yZWNlaXZlZABnZXRfZm9ybWF0
AHNldF9mb3JtYXQAb3JpZ2luAHJlY2VpdmVkAGZvcm1hdABTTVMAdm9pY2UAbWF4aW11bVJlcGxp
ZXNGaWVsZABtYXhpbXVtUmVwbGllc0ZpZWxkU3BlY2lmaWVkAGdldF9tYXhpbXVtUmVwbGllcwBz
ZXRfbWF4aW11bVJlcGxpZXMAZ2V0X21heGltdW1SZXBsaWVzU3BlY2lmaWVkAHNldF9tYXhpbXVt
UmVwbGllc1NwZWNpZmllZABtYXhpbXVtUmVwbGllcwBtYXhpbXVtUmVwbGllc1NwZWNpZmllZABh
Y2NvdW50RGV0YWlsc0ZpZWxkAGdldF9hY2NvdW50RGV0YWlscwBzZXRfYWNjb3VudERldGFpbHMA
YWNjb3VudERldGFpbHMAdHlwZUZpZWxkAGNyZWRpdExpbWl0RmllbGQAY3JlZGl0UmVtYWluaW5n
RmllbGQAZ2V0X3R5cGUAc2V0X3R5cGUAZ2V0X2NyZWRpdExpbWl0AHNldF9jcmVkaXRMaW1pdABn
ZXRfY3JlZGl0UmVtYWluaW5nAHNldF9jcmVkaXRSZW1haW5pbmcAdHlwZQBjcmVkaXRMaW1pdABj
cmVkaXRSZW1haW5pbmcAc2VudEZpZWxkAHNjaGVkdWxlZEZpZWxkAGdldF9zZW50AHNldF9zZW50
AGdldF9zY2hlZHVsZWQAc2V0X3NjaGVkdWxlZABzZW50AHNjaGVkdWxlZABuYW1lRmllbGQAZ2V0
X25hbWUAc2V0X25hbWUAbmFtZQBzY2hlZHVsZWRGaWVsZFNwZWNpZmllZABkZWxpdmVyeVJlcG9y
dEZpZWxkAHZhbGlkaXR5UGVyaW9kRmllbGQAdGFnc0ZpZWxkAFN5c3RlbS5YbWwAWG1sQXR0cmli
dXRlAGFueUF0dHJGaWVsZABnZXRfc2NoZWR1bGVkU3BlY2lmaWVkAHNldF9zY2hlZHVsZWRTcGVj
aWZpZWQAZ2V0X2RlbGl2ZXJ5UmVwb3J0AHNldF9kZWxpdmVyeVJlcG9ydABnZXRfdmFsaWRpdHlQ
ZXJpb2QAc2V0X3ZhbGlkaXR5UGVyaW9kAGdldF90YWdzAHNldF90YWdzAGdldF9BbnlBdHRyAHNl
dF9BbnlBdHRyAHNjaGVkdWxlZFNwZWNpZmllZABkZWxpdmVyeVJlcG9ydAB2YWxpZGl0eVBlcmlv
ZAB0YWdzAEFueUF0dHIAbWVzc2FnZUZpZWxkAHNlbmRNb2RlRmllbGQAZ2V0X21lc3NhZ2UAc2V0
X21lc3NhZ2UAZ2V0X3NlbmRNb2RlAHNldF9zZW5kTW9kZQBtZXNzYWdlAHNlbmRNb2RlAGRyb3BB
bGwAZHJvcEFsbFdpdGhFcnJvcnMAZHJvcEFsbFdpdGhTdWNjZXNzAG5vcm1hbABJbnZva2UAQmVn
aW5JbnZva2UARW5kSW52b2tlAHJlc3VsdHMARXhjZXB0aW9uAGdldF9SZXN1bHQAUmVzdWx0AFN5
c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxp
emF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0
AERlZmF1bHQAU3lzdGVtLkRhdGEARGF0YVRhYmxlAGR0AElzSW5UZXN0TW9kZQBNYWluAEZpbGxE
YXRhU2V0AERhdGFWaWV3AEdldEJhdGNoAEd1aWQAU2VuZE1lc3NhZ2VzAFNlbmRNZXNzYWdlc1Rl
c3QAVXBkYXRlQmF0Y2hTdGF0dXNGb3JQZW5kaW5nAFVwZGF0ZVN0YXR1c0J5VUlEcwBDbGVhclVu
c3Vic2NpYmVzAENoZWNrQmxvY2tlZE51bWJlcnMAU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3Rl
bS5YbWwuU2VyaWFsaXphdGlvbgBYbWxFbGVtZW50QXR0cmlidXRlAGF1dGhlbnRpY2F0aW9uAHJl
cXVlc3RCb2R5AGNhbGxiYWNrAGFzeW5jU3RhdGUAYXN5bmNSZXN1bHQAdXNlclN0YXRlAGFyZwBv
YmplY3QAbWV0aG9kAHNlbmRlcgBlAHJlc3VsdABleGNlcHRpb24AY2FuY2VsbGVkAGJhdGNoSW5k
ZXgAZHYAYmF0Y2hJZABzZXNzaW9uSWQAZXJyb3JDb2RlAGVycm9yVmVyYmlhZ2UAdWlkTGlzdABT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0u
UmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2Vt
Ymx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUA
U3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAR2VuZXJhdGVkQ29kZUF0dHJpYnV0ZQBTeXN0ZW0uRGlh
Z25vc3RpY3MARGVidWdnZXJTdGVwVGhyb3VnaEF0dHJpYnV0ZQBEZXNpZ25lckNhdGVnb3J5QXR0
cmlidXRlAFdlYlNlcnZpY2VCaW5kaW5nQXR0cmlidXRlAFdlYkNsaWVudFByb3RvY29sAHNldF9V
cmwARGVsZWdhdGUAQ29tYmluZQBJbnRlcmxvY2tlZABDb21wYXJlRXhjaGFuZ2UAUmVtb3ZlAFNv
YXBEb2N1bWVudE1ldGhvZEF0dHJpYnV0ZQBJbnZva2VBc3luYwBJbnZva2VDb21wbGV0ZWRFdmVu
dEFyZ3MAZ2V0X1Jlc3VsdHMAZ2V0X0Vycm9yAGdldF9DYW5jZWxsZWQAZ2V0X1VzZXJTdGF0ZQBI
dHRwV2ViQ2xpZW50UHJvdG9jb2wAU2VyaWFsaXphYmxlQXR0cmlidXRlAFhtbFR5cGVBdHRyaWJ1
dGUAWG1sQXJyYXlJdGVtQXR0cmlidXRlAFhtbEF0dHJpYnV0ZUF0dHJpYnV0ZQBEZWZhdWx0VmFs
dWVBdHRyaWJ1dGUAVHlwZQBYbWxUZXh0QXR0cmlidXRlAFhtbElnbm9yZUF0dHJpYnV0ZQBYbWxB
bnlBdHRyaWJ1dGVBdHRyaWJ1dGUAUmFpc2VFeGNlcHRpb25JZk5lY2Vzc2FyeQBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFz
c2VtYmx5AGdldF9Bc3NlbWJseQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNr
RW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlh
YmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAFN0cmluZwBnZXRfQ291bnQAc2V0
X1Rhc2tSZXN1bHQARm9ybWF0AFN5c3RlbS5EYXRhLk9sZURiAE9sZURiRGF0YUFkYXB0ZXIARmls
bAA8PmNfX0Rpc3BsYXlDbGFzczEARGF0YVJvdwA8R2V0QmF0Y2g+Yl9fMAB4AFN5c3RlbS5EYXRh
LkRhdGFTZXRFeHRlbnNpb25zAERhdGFSb3dFeHRlbnNpb25zAEZpZWxkAERhdGFUYWJsZUV4dGVu
c2lvbnMARW51bWVyYWJsZVJvd0NvbGxlY3Rpb25gMQBBc0VudW1lcmFibGUARnVuY2AyAEVudW1l
cmFibGVSb3dDb2xsZWN0aW9uRXh0ZW5zaW9ucwBXaGVyZQBBc0RhdGFWaWV3ADxTZW5kTWVzc2Fn
ZXM+Yl9fNgBDUyQ8PjlfX0NhY2hlZEFub255bW91c01ldGhvZERlbGVnYXRlNwBVSW50MzIAVG9T
dHJpbmcAU3lzdGVtLkNvbGxlY3Rpb25zAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IAZ2V0X0N1
cnJlbnQARGF0YVJvd1ZpZXcAZ2V0X1JvdwBQYXJzZQBNb3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNw
b3NlAFN5c3RlbS5Db3JlAFN5c3RlbS5MaW5xAEVudW1lcmFibGUAU3lzdGVtLkNvbGxlY3Rpb25z
LkdlbmVyaWMASUVudW1lcmFibGVgMQBBbnkAU2VsZWN0AEpvaW4APFNlbmRNZXNzYWdlc1Rlc3Q+
Yl9fYgBDUyQ8PjlfX0NhY2hlZEFub255bW91c01ldGhvZERlbGVnYXRlYwBTeXN0ZW0uRGF0YS5T
cWxDbGllbnQAU3FsQ29ubmVjdGlvbgBTcWxDb21tYW5kAFN5c3RlbS5EYXRhLkNvbW1vbgBEYkNv
bm5lY3Rpb24AT3BlbgBzZXRfQ29ubmVjdGlvbgBEYkNvbW1hbmQAQ29tbWFuZFR5cGUAc2V0X0Nv
bW1hbmRUeXBlAHNldF9Db21tYW5kVGV4dABTcWxQYXJhbWV0ZXJDb2xsZWN0aW9uAGdldF9QYXJh
bWV0ZXJzAFNxbFBhcmFtZXRlcgBBZGRXaXRoVmFsdWUASW50MzIARXhlY3V0ZU5vblF1ZXJ5AENv
bnNvbGUAV3JpdGVMaW5lAFJlYWRMaW5lAFNUXzE2OTkzYzRjNWEyMzQ3YmY5NmY4NDFjNmIwZjYz
NWRhLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAALWgAdAB0AHAAOgAvAC8AcwBv
AGEAcAAuAG0ANAB1AC4AYwBvAG0ALgBhAHUAABlzAGUAbgBkAE0AZQBzAHMAYQBnAGUAcwAAE2MA
aABlAGMAawBVAHMAZQByAAAZYwBoAGUAYwBrAFIAZQBwAGwAaQBlAHMAABljAGgAZQBjAGsAUgBl
AHAAbwByAHQAcwAAHWMAbwBuAGYAaQByAG0AUgBlAHAAbABpAGUAcwAAHWMAbwBuAGYAaQByAG0A
UgBlAHAAbwByAHQAcwAAL2QAZQBsAGUAdABlAFMAYwBoAGUAZAB1AGwAZQBkAE0AZQBzAHMAYQBn
AGUAcwAAGWIAbABvAGMAawBOAHUAbQBiAGUAcgBzAAAddQBuAGIAbABvAGMAawBOAHUAbQBiAGUA
cgBzAAAjZwBlAHQAQgBsAG8AYwBrAGUAZABOAHUAbQBiAGUAcgBzAAALZABhAGkAbAB5AABxUwBU
AF8AMQA2ADkAOQAzAGMANABjADUAYQAyADMANAA3AGIAZgA5ADYAZgA4ADQAMQBjADYAYgAwAGYA
NgAzADUAZABhAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAApVQBz
AGUAcgA6ADoAcwBFAHgAZQBjAHUAdABpAG8AbgBHAFUASQBEAAAtRgBhAGkAbABlAGQAIABmAG8A
cgAgAFMAZQBzAHMAaQBvAG4AIAB7ADAAfQAAHVUAcwBlAHIAOgA6AG8ARABhAHQAYQBTAGUAdAAA
EXcANgBQADkARABYAEMAawAAF0gAYQBpAHIAQwBsAHUAYgAwADAAOAAAAywAABNEAEwAVgBSAC0A
RgBhAGkAbAABFUQATABWAFIALQBTAHUAYwBzAHMAARFOAE8AUgBFAFMAVQBMAFQAACdOAG8AIABy
AGUAcwB1AGwAdAAgAHIAZQB0AHUAcgBuAGUAZAAuAAAZVABlAHMAdAAgAE0AZQBzAHMAYQBnAGUA
AAUyADUAAAk0ADAAOAAwAACAkUQAYQB0AGEAIABTAG8AdQByAGMAZQA9AFMAUQBMADAANQA7AEkA
bgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBnAD0ASABDAF8ATQBhAHIAawBlAHQAaQBuAGcAOwBJ
AG4AdABlAGcAcgBhAHQAZQBkACAAUwBlAGMAdQByAGkAdAB5AD0AVAByAHUAZQA7AABjWwBkAGIA
bwBdAC4AWwBzAHAAUwB2AGMAXwBVAHAAZABhAHQAZQBMAGUAYQBkAFQAZQB4AHQAQgBhAHQAYwBo
AFMAdABhAHQAdQBzAEYAbwByAFAAZQBuAGQAaQBuAGcAXQAAE1MAZQBzAHMAaQBvAG4ASQBEAAAP
QgBhAHQAYwBoAEkARAAAQ1QAZQB4AHQATQBlAHMAcwBhAGcAZQBTAHQAYQB0AHUAcwBEAGUAcwBj
AHIAaQBwAHQAaQBvAG4AUwBoAG8AcgB0AAATRQByAHIAbwByAEMAbwBkAGUAABtFAHIAcgBvAHIA
VgBlAHIAYgBpAGEAZwBlAABRWwBkAGIAbwBdAC4AWwBzAHAAUwB2AGMAXwBVAHAAZABhAHQAZQBM
AGUAYQBkAFQAZQB4AHQAUwB0AGEAdAB1AHMAQgB5AFUASQBEAHMAXQAAD1UASQBEAEwAaQBzAHQA
ADNDAGwAZQBhAHIAaQBuAGcAIABiAGwAbwBjAGsAZQBkACAAbgB1AG0AYgBlAHIAcwAuAABnVQBu
AGIAbABvAGMAawBpAG4AZwAgAHIAZQBjAGkAcABpAGUAbgB0ACAAewByAGUAcwBwAG8AbgBzAGUA
LgByAGUAYwBpAHAAaQBlAG4AdABzAFsAaQBdAC4AVgBhAGwAdQBlAH0AAE17AHUAbgBiAGwAbwBj
AGsAUgBlAHMAcABvAG4AcwBlAC4AdQBuAGIAbABvAGMAawBlAGQAfQAgAFUAbgBiAGwAbwBjAGsA
ZQBkACEAAD1OAG8AIABiAGwAbwBjAGsAZQBkACAAbQBlAHMAcwBhAGcAZQBzACAAdABvACAAcgBl
AG0AbwB2AGUALgAAM0MAaABlAGMAawBpAG4AZwAgAEIAbABvAGMAawBlAGQAIABOAHUAbQBiAGUA
cgBzAC4AAD97AHIAZQBjAGkAcABpAGUAbgB0AC4AVgBhAGwAdQBlAH0AIABVAG4AcwB1AGIAcwBj
AHIAaQBiAGUAZAAhAAAzTgBvACAAYgBsAG8AYwBrAGUAZAAgAG4AdQBtAGIAZQByAHMAIABlAHgA
aQBzAHQALgAAAACtV0GciRuuQblsBX07uThMAAiwP19/EdUKOgi3elxWGTTgiQiJhF3NgIDMkQMG
EiEDIAABBAYSgJQGIAEBEoCUBAYSgJwGIAEBEoCcBAYSgKQGIAEBEoCkBAYSgKwGIAEBEoCsBAYS
gLQGIAEBEoC0BAYSgLwGIAEBEoC8BAYSgMQGIAEBEoDEBAYSgMwGIAEBEoDMBAYSgNQGIAEBEoDU
BAYSgNwGIAEBEoDcCSACEnwSDBKAkAwgBBIlEgwSgJASKRwGIAESfBIlCCACARIMEoCQCSADARIM
EoCQHAQgAQEcBiABEnQSDAkgAxIlEgwSKRwGIAESdBIlBSABARIMBiACARIMHAggAhJsEgwScAsg
BBIlEgwScBIpHAYgARJsEiUHIAIBEgwScAggAwESDBJwHAggAhJcEgwSYAsgBBIlEgwSYBIpHAYg
ARJcEiUHIAIBEgwSYAggAwESDBJgHAggAhJMEgwSUAsgBBIlEgwSUBIpHAYgARJMEiUHIAIBEgwS
UAggAwESDBJQHAggAhJAEgwSRAsgBBIlEgwSRBIpHAYgARJAEiUHIAIBEgwSRAggAwESDBJEHAgg
AhI0EgwSPAsgBBIlEgwSPBIpHAYgARI0EiUHIAIBEgwSPAggAwESDBI8HAggAhIsEgwSMAsgBBIl
EgwSMBIpHAYgARIsEiUHIAIBEgwSMAggAwESDBIwHAggAhIcEgwSKAsgBBIlEgwSKBIpHAYgARIc
EiUHIAIBEgwSKAggAwESDBIoHAggAhIQEgwSGAsgBBIlEgwSGBIpHAYgARIQEiUHIAIBEgwSGAgg
AwESDBIYHAIGDgMgAA4EIAEBDgMoAA4EBh0SFAIGCQUgAB0SFAYgAQEdEhQDIAAJBCABAQkFKAAd
EhQDKAAJAgYCAyAAAgQgAQECAygAAgQGHRIgBSAAHRIgBiABAR0SIAUoAB0SIAMGESQEIAARJAUg
AQERJAQoABEkAgYIBAAAAAAEAQAAAAQCAAAABAMAAAAEBAAAAAQGHRI4BSAAHRI4BiABAR0SOAUo
AB0SOAQGHRJIBSAAHRJIBiABAR0SSAUoAB0SSAMGES0DBhFYBCAAES0FIAEBES0EIAARWAUgAQER
WAQoABEtBCgAEVgEBh0SVAUgAB0SVAYgAQEdElQFKAAdElQDBhFoBCAAEWgFIAEBEWgEKAARaAQG
HRJkBSAAHRJkBiABAR0SZAUoAB0SZAMGEngEIAASeAUgAQESeAQoABJ4AgYFBQYdEoCABAYdEjED
IAAFBCABAQUGIAAdEoCAByABAR0SgIAFIAAdEjEGIAEBHRIxAygABQYoAB0SgIAFKAAdEjEFBh0S
gIQEBhGAjAYgAB0SgIQHIAEBHRKAhAUgABGAjAYgAQERgIwGKAAdEoCEBSgAEYCMBAYSgIgFIAAS
gIgGIAEBEoCIBSgAEoCIBSACARwYByACARwSgJgLIAQSJRwSgJgSKRwFIAEBEiUDBh0cCSAEAR0c
EjUCHAQgABJ8BCgAEnwHIAIBHBKAoAsgBBIlHBKAoBIpHAQgABJ0BCgAEnQHIAIBHBKAqAsgBBIl
HBKAqBIpHAQgABJsBCgAEmwHIAIBHBKAsAsgBBIlHBKAsBIpHAQgABJcBCgAElwHIAIBHBKAuAsg
BBIlHBKAuBIpHAQgABJMBCgAEkwHIAIBHBKAwAsgBBIlHBKAwBIpHAQgABJABCgAEkAHIAIBHBKA
yAsgBBIlHBKAyBIpHAQgABI0BCgAEjQHIAIBHBKA0AsgBBIlHBKA0BIpHAQgABIsBCgAEiwHIAIB
HBKA2AsgBBIlHBKA2BIpHAQgABIcBCgAEhwHIAIBHBKA4AsgBBIlHBKA4BIpHAQgABIQBCgAEhAD
BhI5AwYSPQQAABI5BAAAEj0FAAEBEj0ECAASOQQIABI9BAYSgOgFAAASgOgFCAASgOgDBhJBBSAB
EkUICCADARJFCBFJCSAFARFJCA4ODgcgBAEODg4OBAYRgPALAQAGcmVzdWx0AAAEIAEBCAUgAgEO
DhQBAAR3c2RsCjQuNi4xMDU1LjAAAAkBAARjb2RlAABNAQACAFQOBE5hbWUaTWVzc2FnZU1lZGlh
U2VydmljZUJpbmRpbmdUDglOYW1lc3BhY2UaaHR0cDovL3htbC5tNHUuY29tLmF1LzIwMDkLAAIS
gJUSgJUSgJUMEAEDHgAQHgAeAB4ABQoBEoCUCwcDEoCUEoCUEoCUBQoBEoCcCwcDEoCcEoCcEoCc
BQoBEoCkCwcDEoCkEoCkEoCkBQoBEoCsCwcDEoCsEoCsEoCsBQoBEoC0CwcDEoC0EoC0EoC0BQoB
EoC8CwcDEoC8EoC8EoC8BQoBEoDECwcDEoDEEoDEEoDEBQoBEoDMCwcDEoDMEoDMEoDMBQoBEoDU
CwcDEoDUEoDUEoDUBQoBEoDcCwcDEoDcEoDcEoDcgboBACdodHRwOi8veG1sLm00dS5jb20uYXUv
MjAwOS9zZW5kTWVzc2FnZXMEAFQOEFJlcXVlc3ROYW1lc3BhY2UaaHR0cDovL3htbC5tNHUuY29t
LmF1LzIwMDlUDhFSZXNwb25zZU5hbWVzcGFjZRpodHRwOi8veG1sLm00dS5jb20uYXUvMjAwOVRV
gIZTeXN0ZW0uV2ViLlNlcnZpY2VzLkRlc2NyaXB0aW9uLlNvYXBCaW5kaW5nVXNlLCBTeXN0ZW0u
V2ViLlNlcnZpY2VzLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49YjAzZjVmN2YxMWQ1MGEzYQNVc2UCAAAAVFWAiFN5c3RlbS5XZWIuU2VydmljZXMuUHJv
dG9jb2xzLlNvYXBQYXJhbWV0ZXJTdHlsZSwgU3lzdGVtLldlYi5TZXJ2aWNlcywgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EO
UGFyYW1ldGVyU3R5bGUCAAAAByACHRwOHRwGBwIdHB0cCiAEEiUOHRwSKRwEBwEdHAYgAR0cEiUJ
IAQBDh0cEiEcBCAAHRwEIAASNQMgABwFBwESgKGBtwEAJGh0dHA6Ly94bWwubTR1LmNvbS5hdS8y
MDA5L2NoZWNrVXNlcgQAVA4QUmVxdWVzdE5hbWVzcGFjZRpodHRwOi8veG1sLm00dS5jb20uYXUv
MjAwOVQOEVJlc3BvbnNlTmFtZXNwYWNlGmh0dHA6Ly94bWwubTR1LmNvbS5hdS8yMDA5VFWAhlN5
c3RlbS5XZWIuU2VydmljZXMuRGVzY3JpcHRpb24uU29hcEJpbmRpbmdVc2UsIFN5c3RlbS5XZWIu
U2VydmljZXMsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iMDNmNWY3ZjExZDUwYTNhA1VzZQIAAABUVYCIU3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2Nv
bHMuU29hcFBhcmFtZXRlclN0eWxlLCBTeXN0ZW0uV2ViLlNlcnZpY2VzLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYQ5QYXJh
bWV0ZXJTdHlsZQIAAACBugEAJ2h0dHA6Ly94bWwubTR1LmNvbS5hdS8yMDA5L2NoZWNrUmVwbGll
cwQAVA4QUmVxdWVzdE5hbWVzcGFjZRpodHRwOi8veG1sLm00dS5jb20uYXUvMjAwOVQOEVJlc3Bv
bnNlTmFtZXNwYWNlGmh0dHA6Ly94bWwubTR1LmNvbS5hdS8yMDA5VFWAhlN5c3RlbS5XZWIuU2Vy
dmljZXMuRGVzY3JpcHRpb24uU29hcEJpbmRpbmdVc2UsIFN5c3RlbS5XZWIuU2VydmljZXMsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjEx
ZDUwYTNhA1VzZQIAAABUVYCIU3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcFBhcmFt
ZXRlclN0eWxlLCBTeXN0ZW0uV2ViLlNlcnZpY2VzLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYQ5QYXJhbWV0ZXJTdHlsZQIA
AACBugEAJ2h0dHA6Ly94bWwubTR1LmNvbS5hdS8yMDA5L2NoZWNrUmVwb3J0cwQAVA4QUmVxdWVz
dE5hbWVzcGFjZRpodHRwOi8veG1sLm00dS5jb20uYXUvMjAwOVQOEVJlc3BvbnNlTmFtZXNwYWNl
Gmh0dHA6Ly94bWwubTR1LmNvbS5hdS8yMDA5VFWAhlN5c3RlbS5XZWIuU2VydmljZXMuRGVzY3Jp
cHRpb24uU29hcEJpbmRpbmdVc2UsIFN5c3RlbS5XZWIuU2VydmljZXMsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhA1VzZQIA
AABUVYCIU3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcFBhcmFtZXRlclN0eWxlLCBT
eXN0ZW0uV2ViLlNlcnZpY2VzLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
bGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYQ5QYXJhbWV0ZXJTdHlsZQIAAACBvAEAKWh0dHA6
Ly94bWwubTR1LmNvbS5hdS8yMDA5L2NvbmZpcm1SZXBsaWVzBABUDhBSZXF1ZXN0TmFtZXNwYWNl
Gmh0dHA6Ly94bWwubTR1LmNvbS5hdS8yMDA5VA4RUmVzcG9uc2VOYW1lc3BhY2UaaHR0cDovL3ht
bC5tNHUuY29tLmF1LzIwMDlUVYCGU3lzdGVtLldlYi5TZXJ2aWNlcy5EZXNjcmlwdGlvbi5Tb2Fw
QmluZGluZ1VzZSwgU3lzdGVtLldlYi5TZXJ2aWNlcywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJl
PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EDVXNlAgAAAFRVgIhTeXN0
ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwUGFyYW1ldGVyU3R5bGUsIFN5c3RlbS5XZWIu
U2VydmljZXMsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iMDNmNWY3ZjExZDUwYTNhDlBhcmFtZXRlclN0eWxlAgAAAIG8AQApaHR0cDovL3htbC5tNHUu
Y29tLmF1LzIwMDkvY29uZmlybVJlcG9ydHMEAFQOEFJlcXVlc3ROYW1lc3BhY2UaaHR0cDovL3ht
bC5tNHUuY29tLmF1LzIwMDlUDhFSZXNwb25zZU5hbWVzcGFjZRpodHRwOi8veG1sLm00dS5jb20u
YXUvMjAwOVRVgIZTeXN0ZW0uV2ViLlNlcnZpY2VzLkRlc2NyaXB0aW9uLlNvYXBCaW5kaW5nVXNl
LCBTeXN0ZW0uV2ViLlNlcnZpY2VzLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYQNVc2UCAAAAVFWAiFN5c3RlbS5XZWIuU2Vy
dmljZXMuUHJvdG9jb2xzLlNvYXBQYXJhbWV0ZXJTdHlsZSwgU3lzdGVtLldlYi5TZXJ2aWNlcywg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1Zjdm
MTFkNTBhM2EOUGFyYW1ldGVyU3R5bGUCAAAAgcoBADdodHRwOi8veG1sLm00dS5jb20uYXUvMjAw
OS9zb2FwL2RlbGV0ZVNjaGVkdWxlZE1lc3NhZ2VzBABUDhBSZXF1ZXN0TmFtZXNwYWNlGmh0dHA6
Ly94bWwubTR1LmNvbS5hdS8yMDA5VA4RUmVzcG9uc2VOYW1lc3BhY2UaaHR0cDovL3htbC5tNHUu
Y29tLmF1LzIwMDlUVYCGU3lzdGVtLldlYi5TZXJ2aWNlcy5EZXNjcmlwdGlvbi5Tb2FwQmluZGlu
Z1VzZSwgU3lzdGVtLldlYi5TZXJ2aWNlcywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EDVXNlAgAAAFRVgIhTeXN0ZW0uV2Vi
LlNlcnZpY2VzLlByb3RvY29scy5Tb2FwUGFyYW1ldGVyU3R5bGUsIFN5c3RlbS5XZWIuU2Vydmlj
ZXMsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNm
NWY3ZjExZDUwYTNhDlBhcmFtZXRlclN0eWxlAgAAAIG6AQAnaHR0cDovL3htbC5tNHUuY29tLmF1
LzIwMDkvYmxvY2tOdW1iZXJzBABUDhBSZXF1ZXN0TmFtZXNwYWNlGmh0dHA6Ly94bWwubTR1LmNv
bS5hdS8yMDA5VA4RUmVzcG9uc2VOYW1lc3BhY2UaaHR0cDovL3htbC5tNHUuY29tLmF1LzIwMDlU
VYCGU3lzdGVtLldlYi5TZXJ2aWNlcy5EZXNjcmlwdGlvbi5Tb2FwQmluZGluZ1VzZSwgU3lzdGVt
LldlYi5TZXJ2aWNlcywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EDVXNlAgAAAFRVgIhTeXN0ZW0uV2ViLlNlcnZpY2VzLlBy
b3RvY29scy5Tb2FwUGFyYW1ldGVyU3R5bGUsIFN5c3RlbS5XZWIuU2VydmljZXMsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNh
DlBhcmFtZXRlclN0eWxlAgAAAIG8AQApaHR0cDovL3htbC5tNHUuY29tLmF1LzIwMDkvdW5ibG9j
a051bWJlcnMEAFQOEFJlcXVlc3ROYW1lc3BhY2UaaHR0cDovL3htbC5tNHUuY29tLmF1LzIwMDlU
DhFSZXNwb25zZU5hbWVzcGFjZRpodHRwOi8veG1sLm00dS5jb20uYXUvMjAwOVRVgIZTeXN0ZW0u
V2ViLlNlcnZpY2VzLkRlc2NyaXB0aW9uLlNvYXBCaW5kaW5nVXNlLCBTeXN0ZW0uV2ViLlNlcnZp
Y2VzLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAz
ZjVmN2YxMWQ1MGEzYQNVc2UCAAAAVFWAiFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNv
YXBQYXJhbWV0ZXJTdHlsZSwgU3lzdGVtLldlYi5TZXJ2aWNlcywgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EOUGFyYW1ldGVy
U3R5bGUCAAAAgb8BACxodHRwOi8veG1sLm00dS5jb20uYXUvMjAwOS9nZXRCbG9ja2VkTnVtYmVy
cwQAVA4QUmVxdWVzdE5hbWVzcGFjZRpodHRwOi8veG1sLm00dS5jb20uYXUvMjAwOVQOEVJlc3Bv
bnNlTmFtZXNwYWNlGmh0dHA6Ly94bWwubTR1LmNvbS5hdS8yMDA5VFWAhlN5c3RlbS5XZWIuU2Vy
dmljZXMuRGVzY3JpcHRpb24uU29hcEJpbmRpbmdVc2UsIFN5c3RlbS5XZWIuU2VydmljZXMsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjEx
ZDUwYTNhA1VzZQIAAABUVYCIU3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcFBhcmFt
ZXRlclN0eWxlLCBTeXN0ZW0uV2ViLlNlcnZpY2VzLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYQ5QYXJhbWV0ZXJTdHlsZQIA
AAArAQABAFQOCU5hbWVzcGFjZRpodHRwOi8veG1sLm00dS5jb20uYXUvMjAwORwBAAlyZWNpcGll
bnQBAFQCCklzTnVsbGFibGUAByACARKAvQ5hAQBaU3lzdGVtLlVJbnQzMiwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5ATAAABgBAAVlcnJvcgEAVAIKSXNOdWxsYWJsZQAaAQAHbWVzc2FnZQEAVAIKSXNOdWxs
YWJsZQAZAQAGcmVwb3J0AQBUAgpJc051bGxhYmxlABgBAAVyZXBseQEAVAIKSXNOdWxsYWJsZQAF
AQAAAABhAQBYU3lzdGVtLkJ5dGUsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQMxNjkAABYBAAN0YWcBAFQC
CklzTnVsbGFibGUATAEAVUJTVF8xNjk5M2M0YzVhMjM0N2JmOTZmODQxYzZiMGY2MzVkYS5TZXJ2
aWNlUHJveHkuTWVzc2FnZUZvcm1hdFR5cGUAAAAAAAAMAQAHbWVzc2FnZQAATgEAVURTVF8xNjk5
M2M0YzVhMjM0N2JmOTZmODQxYzZiMGY2MzVkYS5TZXJ2aWNlUHJveHkuTWVzc2FnZVNlbmRNb2Rl
VHlwZQMAAAAAAAcgAwESNQIcCAABEoC9EYDRBSAAEoDVByACAQ4SgNUEBwESOQYgAQERgN0IAQAC
AAAAAAADAAABBSAAEoDpBSAAEoDtBiABEoDxHAMgAAgFAAIODhwGIAIBDhI1CgcFEUkCCBJFEjUG
IAIIEkEcBQcBEoD5BiABAhKA/QkQAQIeABKA/QgDCgEIDAABFRKBCQESgP0SQQkVEoENAhKA/QIZ
EAECFRKBCQEeABUSgQkBHgAVEoENAh4AAgUKARKA/QwQAQESRRUSgQkBHgAFBwESgPQFAAEOEhQJ
BhUSgQ0CEhQOAwcBCQUgABKBGQUgABKA/QQgARwIBAABCQ4LEAEBAhUSgSkBHgAECgESIAgVEoEN
AhIUDhoQAgIVEoEpAR4BFRKBKQEeABUSgQ0CHgAeAQUKAhIUDgoAAg4OFRKBKQEOJgcQEggSDBKA
kAgSgR0SgIQSgIQSFBJ8EiAOEgwSgRkSgSEdEiAIHAcMEggSDBKAkAgSgIQSfBIgEgwSgIQSFB0S
IAgGIAEBEoEtBiABARGBPQUgABKBQQcgAhKBRQ4cCQcDDhKBLRKBMQQAAQEOBAoBEhQDAAAODwcH
EggSDBIYEhASKAgSDBAHBxIIEgwSGBIQEgwdEhQIRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUXzE2OTkz
YzRjNWEyMzQ3YmY5NmY4NDFjNmIwZjYzNWRhAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAACEwwAAAAAAAAAAAACewwAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAkMMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFjgAACwAwAAAAAA
AAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
JG34FwAAAQAkbfgXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAcAAk
AAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADEANgA5ADkAMwBjADQA
YwA1AGEAMgAzADQANwBiAGYAOQA2AGYAOAA0ADEAYwA2AGIAMABmADYAMwA1AGQAYQAAAEAADwAB
AEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADEAMwA2AC4AMgA3ADkANAAwAAAA
AABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADEANgA5ADkAMwBjADQAYwA1
AGEAMgAzADQANwBiAGYAOQA2AGYAOAA0ADEAYwA2AGIAMABmADYAMwA1AGQAYQAuAGQAbABsAAAA
SAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABA
ACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
VABfADEANgA5ADkAMwBjADQAYwA1AGEAMgAzADQANwBiAGYAOQA2AGYAOAA0ADEAYwA2AGIAMABm
ADYAMwA1AGQAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQA
XwAxADYAOQA5ADMAYwA0AGMANQBhADIAMwA0ADcAYgBmADkANgBmADgANAAxAGMANgBiADAAZgA2
ADMANQBkAGEAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYA
MQAzADYALgAyADcAOQA0ADAAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAMQAzADYALgAyADcAOQA0ADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAMAAAAsDMAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set Export File Paths"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{6a756589-5380-4336-93e7-5f122eb63e13}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set Export File Paths"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_c746e38da7964aadb3167c9ea3c7087b"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadWriteVariables="User::sExecutionGUID,User::sCopyFilePath,User::sExportFilePath,User::sTextMessagesFilePath">
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_ef5581642c9342d391af001dd6e8e09d")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_ef5581642c9342d391af001dd6e8e09d")> 
<Assembly: AssemblyCopyright("Copyright @  2014")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("be405694-ba19-4f63-a919-05c80cf0e382")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="ST_c746e38da7964aadb3167c9ea3c7087b.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{a4d5182a-4f0c-402f-81c9-1eff6ad07ba9}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>My Project</AppDesignerFolder><RootNamespace>ST_ef5581642c9342d391af001dd6e8e09d</RootNamespace><AssemblyName>ST_c746e38da7964aadb3167c9ea3c7087b</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>true</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>false</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><Import Include="Microsoft.VisualBasic" /><Import Include="System" /><Import Include="System.Collections" /><Import Include="System.Data" /><Import Include="System.Diagnostics" /><Import Include="System.Windows.Forms" /></ItemGroup><ItemGroup><AppDesigner Include="My Project\" /><Compile Include="My Project\AssemblyInfo.vb"><SubType>Code</SubType></Compile><EmbeddedResource Include="My Project\Resources.resx"><Generator>VbMyResourcesResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.vb</LastGenOutput><CustomToolNamespace>My.Resources</CustomToolNamespace></EmbeddedResource><Compile Include="My Project\Resources.Designer.vb"><AutoGen>True</AutoGen><DesignTime>True</DesignTime><DependentUpon>Resources.resx</DependentUpon><SubType>Code</SubType></Compile><None Include="My Project\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.vb</LastGenOutput></None><Compile Include="My Project\Settings.Designer.vb"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon><SubType>Code</SubType></Compile><Compile Include="ScriptMain.vb"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a VB project.--><Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ef5581642c9342d391af001dd6e8e09d</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ef5581642c9342d391af001dd6e8e09d</msb:DisplayName>
		<msb:ProjectId>{4D60BECD-42E1-4467-8B7E-5D145FE54854}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c746e38da7964aadb3167c9ea3c7087b.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        Dim dDate As Date = Now()
        Dim sDateFormatted As String = Year(dDate) & Format(Month(dDate), "0#") & Format(DateAndTime.Day(dDate), "0#") & "_" & Format(dDate, "HHmmss")

        Dim sExecutionGUID As String = "{" & System.Guid.NewGuid().ToString().ToUpper() & "}"
        'Dim sTextMessagesFilePath As String = Dts.Variables("sExportFilePath").Value.ToString & "\HairClub_TextMessages_" & sDateFormatted & ".csv"
        Dim sTextMessagesFilePath As String = Dts.Variables("sCopyFilePath").Value.ToString & "\HairClub_TextMessages_" & sDateFormatted & ".csv"

        Dts.Variables("sExecutionGUID").Value = sExecutionGUID
        Dts.Variables("sTextMessagesFilePath").Value = sTextMessagesFilePath

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_c746e38da7964aadb3167c9ea3c7087b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGxC3FcAAAAAAAAAAOAAAiELAQsAABwAAAAGAAAAAAAA7jsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKA7AABLAAAAAEAAANgDAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9BsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAANgDAAAAQAAAAAQAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
OwAAAAAAAEgAAAACAAUAhCQAABwXAAABAAAAAAAAAMwjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqEzAEABABAAAPAAARKCUAAAoKG40eAAABEwQRBBYGKCYAAAooJwAACqIRBBcGKCgAAAqMIAAA
AXIzAABwKCkAAAqiEQQYBigqAAAKjCAAAAFyMwAAcCgpAAAKohEEGXI5AABwohEEGgaMGwAAAXI9
AABwKCkAAAqiEQQoKwAACgtySwAAcCgsAAAKEwUSBf4WHAAAAW8VAAAKby0AAApyTwAAcCguAAAK
DAJvLwAACm8wAAAKclMAAHBvMQAACm8yAAAKbxUAAApybwAAcAdynwAAcCgzAAAKDQJvLwAACm8w
AAAKcqkAAHBvMQAACghvNAAACgJvLwAACm8wAAAKcscAAHBvMQAACglvNAAACgJvLwAAChZvNQAA
Ciq0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAGAgAACN+
AACECAAAyAkAACNTdHJpbmdzAAAAAEwSAAD0AAAAI1VTAEATAAAQAAAAI0dVSUQAAABQEwAAzAMA
ACNCbG9iAAAAAAAAAAIAAAFXHaIJCQ8AAAD6JTMAFgAAAQAAADEAAAAKAAAADAAAABkAAAAEAAAA
QgAAAAIAAAA2AAAADwAAAAQAAAAIAAAACQAAAAkAAAABAAAABQAAAAEAAAADAAAAAwAAAAIAAAAA
AJ8JAQAAAAAACgBLASEBCgB/AWEBBgCPAYgBCgDnASEBBgBlAogBCgDnAr0CBgAdAwwDBgBKAzUD
DgCxA5wDEgAwBAcEBgBRBIgBDgCEBG4EDgCdBG4EDgDKBLIEBgD0BOEECgAzBQwFCgBLBRMADgCA
BWMFBgC1BZUFBgDTBYgBBgD3BYgBCgAQBhMABgBUBjUGBgB6BmgGBgChBpAGBgC0BuEEBgDRBogB
BgDaBogBCgDfBhMABgDzBogBCgD/BgwFBgARB4gBCgAXBxMAEgBBBwcEFgCaB3oHFgCyB3oHBgDT
B4gBEgDpBwcEBgBDCJUFBgBjCJUFBgCbCIEIBgC0CGgGBgDRCDUGBgDfCGgGBgD6CGgGBgAVCWgG
BgAuCWgGBgBHCWgGBgBkCWgGAAAAAAEAAAAAAAEAAQAAAAAAKQA3AAUAAQABAAAAAABeADcACQAB
AAIAAAEQAGkANwANAAEAAwAFAQAAcwAAAA0ABQAIAAUBAACBAAAADQAFAA8AAAAAAJwAqAANAAYA
EQAAARAA2QDkACUACAAVAAEAAAAIAeQAKQAKABgAAgEAABMBAAAtAAoAGgAxAKoBIAAxANMBLQAx
APUBOgAxABoCRwAhAPYCkAARAC0DnQARAFYDoQARAMkDvwARANEDwwAGBlYE2QBWgF4E3ABWgGYE
3ABQIAAAAAAGGFsBEwABAFggAAAAAAYYWwETAAEAYCAAAAAAERiWARcAAQCMIAAAAAATCJ0BGwAB
AKQgAAAAABMIwwEoAAEAvCAAAAAAEwjsATUAAQDUIAAAAAATCAoCQgABAOwgAAAAAEYCUAJjAAEA
CCEAAAAARgJZAmgAAgAcIQAAAACDAGoCbAACADQhAAAAAEYCcgJxAAIASCEAAAAAEQB7AngAAgBk
IQAAAAABAJkCgAADAIAhAAAAAAYYWwETAAQAiCEAAAAAAwitAosABAC8IQAAAAAGGFsBEwAEANAh
AAAAAAMYWwETAAQA2CEAAAAAFghiA6UABAAUIgAAAAAWCHYDqgAEACgiAAAAABYIggOvAAQAMCIA
AAAAERiWARcABQBEIgAAAAAGGFsBEwAFAEwiAAAAABYI3gPGAAUAqCIAAAAABhhbARMABQCwIgAA
AAAGAEwEEwAFAAAAAQBXAgAAAQCQAgAAAQCQAgAAAQCOAwkAWwETAGEAWwHqAHEAWwH5ABEAWwET
AHkAWwETACQAWwETACwAWwETADQAWwETADwAWwETACQArQKLACwArQKLADQArQKLADwArQKLAIEA
WwETAIkAWwETAJEAWwFIAZkAxAWTARkAUAJjABkAWQJoACkA5QWgARkAcgJxAKkAAQawARkAWwET
ALEAWwHAAUQA9gKQAEwA3gOLAEwAKwY9AkwAWwETALkAWwFMAikAgwZXAjkAWwFcAkkAWwETAMkA
qQZ4AskArwZ4AtEAWwETAFEAWwETAOkA6waCAukA+gaHAvkAcgKNAukACweHAgkBHweSAukAJgeH
AvEAKgeYAuEAMQeeAvEAOQdxAPEAKgejAlEAUweqAhEBpAewAhkBuwe2AiEB3gO9AvEAKgfBAiEB
KwbJAhEBxAfOAikBWwFMAjEBWwETADkBWwHOAkEBWwETAEkBWwFIAVEBWwFIAVkBWwFIAWEBWwFI
AWkBWwFIAXEBWwFIAXkBWwFIAYEBWwFIAYkBWwFIAQgALADgAAgAMADlACkAgwBNAS4AAwJRAi4A
+wGjAy4A0wEHAy4A8wGMAy4ACwJRAi4AEwKjAy4AwwHfAi4AywHoAi4A2wFPAy4A4wFcAy4A6wBR
Ai4AswGGAy4A6wFRAkAAKwDlAEAAEwDwAEMAEwDwAEMAGwD/AEkAgwBrAWMAEwDwAGMAGwD/AGkA
gwBeAYAAKwDlAIMAGwD/AIMAcwDlAIMAewDlAIkAgwB/AaAAKwDlAKMAwwDIAaMAEwDwAMAAKwDl
AMMAEwDwAMMA6wBRAskAEwBvAuAAKwDlAOkAEwBvAgABEwDwAAABKwDlAAkBGwHlACABEwDwACAB
KwDlACMBswFRAiMBuwHlAEABKwDlAEABEwDwAGABEwDwAGABKwDlAIABKwDlAKABKwDlAMABKwDl
AMABEwDwAOABKwDlAAACKwDlAAACEwDwADQBOQE+AUMBmAGcAacBrAG7AbsBQwJjAmoCfQLTAgQA
AQAGAAUABwAGAAgACAAAAH8BTwAAADgCVAAAAOcBWQAAAEQCXgAAAAADmAAAAB0DtQAAAJQDugAA
AI4DywACAAQAAwACAAUABQACAAYABwACAAcACQACAA8ACwACABIADQACABMADwABABQADwACABcA
EQB1AHUAiAAYAR8BJgEtASoCMQIEgAAAAQAAAAAAAAAAAAAAAAB7CQAABAAAAAAAAAAAAAAAAQAK
AAAAAAAKAAAAAAAAAAAAAAAKABMAAAAAAAQAAAAAAAAAAAAAAAEAiAEAAAAACwAAAAAAAAAAAAAA
0ADoAwAAAAALAAAAAAAAAAAAAADQAFsHAAAAAAAAAAABAAAACwgAAAUABAAGAAQACgAJAAAAEAAM
AI4CAAAQABkAjgIAAAAAGwCOAi0AtgEtADgCAAAAPE1vZHVsZT4AbXNjb3JsaWIATWljcm9zb2Z0
LlZpc3VhbEJhc2ljAE15QXBwbGljYXRpb24AU1RfZWY1NTgxNjQyYzkzNDJkMzkxYWYwMDFkZDZl
OGUwOWQuTXkATXlDb21wdXRlcgBNeVByb2plY3QATXlXZWJTZXJ2aWNlcwBUaHJlYWRTYWZlT2Jq
ZWN0UHJvdmlkZXJgMQBNeVJlc291cmNlcwBTVF9lZjU1ODE2NDJjOTM0MmQzOTFhZjAwMWRkNmU4
ZTA5ZC5NeS5SZXNvdXJjZXMATXlTZXR0aW5ncwBTVF9lZjU1ODE2NDJjOTM0MmQzOTFhZjAwMWRk
NmU4ZTA5ZABTY3JpcHRNYWluAFNjcmlwdFJlc3VsdHMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFw
cGxpY2F0aW9uU2VydmljZXMAQXBwbGljYXRpb25CYXNlAC5jdG9yAE1pY3Jvc29mdC5WaXN1YWxC
YXNpYy5EZXZpY2VzAENvbXB1dGVyAFN5c3RlbQBPYmplY3QALmNjdG9yAGdldF9Db21wdXRlcgBt
X0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAZ2V0X0FwcGxpY2F0aW9uAG1fQXBwT2JqZWN0UHJvdmlk
ZXIAVXNlcgBnZXRfVXNlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBnZXRfV2ViU2VydmljZXMAbV9N
eVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAQXBwbGljYXRpb24AV2ViU2VydmljZXMARXF1YWxz
AG8AR2V0SGFzaENvZGUAVHlwZQBHZXRUeXBlAFRvU3RyaW5nAENyZWF0ZV9fSW5zdGFuY2VfXwBU
AGluc3RhbmNlAERpc3Bvc2VfX0luc3RhbmNlX18AZ2V0X0dldEluc3RhbmNlAE1pY3Jvc29mdC5W
aXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAENvbnRleHRWYWx1ZWAxAG1fQ29udGV4dABH
ZXRJbnN0YW5jZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBfcmVzTWdyAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAF9yZXNDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFn
ZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAVmFsdWUAQ3VsdHVyZQBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBtX1ZhbHVlAG1fU3luY09iamVjdABnZXRfVmFs
dWUATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAE1haW4ARW51bQB2
YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVy
AEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VySGlkZGVu
QXR0cmlidXRlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5Db21waWxlclNlcnZpY2VzAFN0YW5kYXJk
TW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAFN5c3RlbS5Db21wb25lbnRN
b2RlbC5EZXNpZ24ASGVscEtleXdvcmRBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBSdW50aW1lSGVscGVycwBHZXRPYmplY3RWYWx1ZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBBY3RpdmF0b3IAQ3JlYXRlSW5zdGFuY2UATXlHcm91cENvbGxlY3Rp
b25BdHRyaWJ1dGUAc2V0X1ZhbHVlAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBDb21W
aXNpYmxlQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBT
eXN0ZW0uVGhyZWFkaW5nAE1vbml0b3IARW50ZXIARXhpdABEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAERhdGVUaW1lAEd1aWQARGF0ZUFuZFRpbWUAZ2V0X05vdwBTdHJpbmcAWWVhcgBDb252
ZXJzaW9ucwBNb250aABJbnQzMgBTdHJpbmdzAEZvcm1hdABEYXkAQ29uY2F0AE5ld0d1aWQAVG9V
cHBlcgBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFi
bGVzAFZhcmlhYmxlAGdldF9JdGVtAHNldF9UYXNrUmVzdWx0AENMU0NvbXBsaWFudEF0dHJpYnV0
ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU1RfZWY1NTgxNjQyYzkzNDJkMzkx
YWYwMDFkZDZlOGUwOWQuUmVzb3VyY2VzLnJlc291cmNlcwBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRy
aWJ1dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBTVF9jNzQ2ZTM4ZGE3OTY0YWFkYjMxNjdjOWVhM2M3MDg3YgBTVF9jNzQ2ZTM4ZGE3OTY0
YWFkYjMxNjdjOWVhM2M3MDg3Yi5kbGwAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkA
UgBlAHMAbwB1AHIAYwBlAHMAAAUwACMAAANfAAANSABIAG0AbQBzAHMAAAN7AAADfQAAG3MAQwBv
AHAAeQBGAGkAbABlAFAAYQB0AGgAAC9cAEgAYQBpAHIAQwBsAHUAYgBfAFQAZQB4AHQATQBlAHMA
cwBhAGcAZQBzAF8AAAkuAGMAcwB2AAAdcwBFAHgAZQBjAHUAdABpAG8AbgBHAFUASQBEAAArcwBU
AGUAeAB0AE0AZQBzAHMAYQBnAGUAcwBGAGkAbABlAFAAYQB0AGgAAACO4HNGjF3QRLQQfDBEHHUn
AAi3elxWGTTgiQiwP19/EdUKOgMgAAEDAAABBAAAEgwHBhUSGAESDAQAABIIBwYVEhgBEggEAAAS
EQcGFRIYARIRBAAAEhQHBhUSGAESFAQIABIMBAgAEggECAASEQQIABIUBCABAhwDIAAIBCAAEhUD
IAAOAh4ABxABAR4AHgAHMAEBARAeAAITAAQgABMABwYVEhkBEwAEKAATAAMGEh0DBhIhBAAAEh0E
AAASIQUAAQESIQQIABIdBAgAEiEDBhIgAgYcBAAAEiAECAASIAiJhF3NgIDMkQIGCAMGESgEAAAA
AAQBAAAABSABARE1CAEAAQAAAAAABSACAQ4OGAEACk15VGVtcGxhdGUIMTAuMC4wLjAAAAYVEhgB
EgwGFRIYARIIBhUSGAESEQYVEhgBEhQEBwESDAQHARIIBAcBEhEEBwESFAQgAQEOEAEAC015LkNv
bXB1dGVyAAAMAQAHTXkuVXNlcgAAEwEADk15LkFwcGxpY2F0aW9uAAATAQAOTXkuV2ViU2Vydmlj
ZXMAAAQAARwcAwcBAgMHAQgGAAESFRFRBAcBEhUDBwEOBRABAB4ABAoBHgAEBwEeAAcgBAEODg4O
YQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wS
Q3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAGFRIYARMABhUSGQETAAQK
ARMABSABARMACAcDEwATABMABCABAQIFAQAAAAAEIAASYQYgAgEOEmEGBwISHRIdBAcBEiEIAQAC
AAAAAAAEAAEBHAQHARIgBAAAEW0FAAEIEW0EAAEOCAUAAg4cDgUAAQ4dDgQAABFxBgADDg4ODgUg
ABKAiQUgABKAjQYgARKAkRwDIAAcBwAEDg4ODg4EIAEBHAQgAQEICwcGEW0ODg4dDhFxCAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAUcBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAwBAAcxLjAu
MC4wAAApAQAkYmU0MDU2OTQtYmExOS00ZjYzLWE5MTktMDVjODBjZjBlMzgyAAAFAQABAAAWAQAR
Q29weXJpZ2h0IEAgIDIwMTQAACgBACNTVF9lZjU1ODE2NDJjOTM0MmQzOTFhZjAwMWRkNmU4ZTA5
ZAAAyDsAAAAAAAAAAAAA3jsAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAANA7AAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAIADAAAAAAAAAAAAAIADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsATgAgAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAC8AgAAAQAwADAAMAAwADAA
NABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AZQBm
ADUANQA4ADEANgA0ADIAYwA5ADMANAAyAGQAMwA5ADEAYQBmADAAMAAxAGQAZAA2AGUAOABlADAA
OQBkAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAo
AAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBjADcANAA2AGUAMwA4AGQAYQA3ADkA
NgA0AGEAYQBkAGIAMwAxADYANwBjADkAZQBhADMAYwA3ADAAOAA3AGIALgBkAGwAbAAAAEgAEgAB
AEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAA
MgAwADEANAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBj
ADcANAA2AGUAMwA4AGQAYQA3ADkANgA0AGEAYQBkAGIAMwAxADYANwBjADkAZQBhADMAYwA3ADAA
OAA3AGIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AZQBm
ADUANQA4ADEANgA0ADIAYwA5ADMANAAyAGQAMwA5ADEAYQBmADAAMAAxAGQAZAA2AGUAOABlADAA
OQBkAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAA
ADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA8DsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{12243EC9-E1F2-46A3-9351-EFB2AE1315E8}"
      DTS:From="Package\Set Export File Paths"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Export Text Messages Data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{369C5A7A-4F22-4805-9E96-D1EC5587571E}"
      DTS:From="Package\Export Text Messages Data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get Data For Current Session" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{54AE516E-F521-450F-A073-F38B8A10678C}"
      DTS:From="Package\Get Data For Current Session"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Send Data to Message Media API" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{7C187820-E1D0-4122-9CEB-4AA3CBBC6C57}"
      DTS:From="Package\Send Data to Message Media API"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Check for Errors and Send Email If Needed" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="281,42"
          Id="Package\Check for Errors and Send Email If Needed"
          TopLeft="279.28,485" />
        <NodeLayout
          Size="281,42"
          Id="Package\Export Text Messages Data"
          TopLeft="279.28,149" />
        <NodeLayout
          Size="281,42"
          Id="Package\Get Data For Current Session"
          TopLeft="279.28,261" />
        <NodeLayout
          Size="281,42"
          Id="Package\Send Data to Message Media API"
          TopLeft="279.28,373" />
        <NodeLayout
          Size="281,42"
          Id="Package\Set Export File Paths"
          TopLeft="279.28,37" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="419.78,79">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70"
              Start="0,0"
              End="0,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="419.78,191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70"
              Start="0,0"
              End="0,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="419.78,303">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70"
              Start="0,0"
              End="0,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="419.78,415">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70"
              Start="0,0"
              End="0,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Export Text Messages Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="174,42"
          Id="Package\Export Text Messages Data\Text Messages Data"
          TopLeft="26.5,23.5" />
        <NodeLayout
          Size="168,42"
          Id="Package\Export Text Messages Data\Text Messages File"
          TopLeft="26.5,138.5" />
        <EdgeLayout
          Id="Package\Export Text Messages Data.Paths[OLE DB Source Output]"
          TopLeft="112,65.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,73"
              Start="0,0"
              End="0,65.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Export Text Messages Data\Text Messages Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>