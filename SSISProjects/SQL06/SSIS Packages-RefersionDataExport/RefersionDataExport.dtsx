<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/22/2019 3:40:30 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="ITWS05"
  DTS:CreatorName="HCFM\jlee"
  DTS:DTSID="{9442F714-C208-49AF-84D3-969BDC2BF4E3}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.6020.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="RefersionDataExport"
  DTS:PackageType="5"
  DTS:ProtectionLevel="5"
  DTS:VersionBuild="52"
  DTS:VersionGUID="{6577C09F-8830-4066-9E6C-FD51F40F287D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RefersionAPI]"
      DTS:CreationName="ZS-HTTP"
      DTS:DTSID="{19E63BEA-AD9A-48BA-85E6-42F146E2AFA8}"
      DTS:ObjectName="RefersionAPI">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="Url=https://inbound-webhooks.refersion.com/tracker/orders/paid;CredentialType=Notset;UserName=;Timeout=100000;SoapWssPasswordType=Notset;JwtCustomClaims=;RetainCookies=False;UseProxy=False;ProxyUrl=;UseProxyCreds=False;ProxyUserName=;DoNotUseDefaultProxy=False;UseClientCertificate=False;CertificatePath=;CertificateStorageType=CurrentUser;CertificateStoreName=My;CertificateThumbprint=;RetryMode=None;RetryCountMax=3;RetryWaitTimeMs=2000;RetryMultiplyWaitTime=False;RetryMessageList=;RetryStatusCodeList=;AuthScheme=Bearer;TokenAuthHeader=;TokenUrl=;TokenRequestData=;TokenRequestHeaders=Accept:*/*||Cache-Control:no-cache;TokenRequestMethod=;TokenRequestContentType=Default;TokenResponseContentFilter=;TokenResponseValueExtractMode=Body;TokenResponseCookie=;TokenResponseHeader=;TokenResponseContentType=None;TokenExpirationTimeInSeconds=3600;EnableRequestHashing=False;HashAlgorithm=sha256;HashSignatureFormat=;HashSignatureFormatForLogin=;ExtraHeaders=;ExtraHeadersForLogin=;HashTimestampFormat=;HashTreatSecretAsNonBase64=False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SQL05.HC_Marketing]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D9E172FE-79E1-4FB1-ABEE-C2D7CC15718A}"
      DTS:ObjectName="SQL05.HC_Marketing">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SQL05;Initial Catalog=HC_Marketing;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A709C0D3-105E-4A20-BDC3-E9402303C518}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="iRefersonLogID">
      <DTS:VariableValue
        DTS:DataType="2">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0A011FE5-782F-4A4B-8410-5C97A8F0F3F4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="jSonData">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6DC678A5-3B50-4315-A37F-95377E01CD42}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogMsg">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{80FD668D-2981-4ACB-BE24-86766E22DFB5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sExecutionGUID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create SessionID"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{6E7E7662-3B05-459B-8586-6C0393F99A21}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create SessionID"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4d5a168a5a7949808c1c3c8f87c4a327"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadWriteVariables="User::sExecutionGUID">
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_4d5a168a5a7949808c1c3c8f87c4a327")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_4d5a168a5a7949808c1c3c8f87c4a327")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("1786a1f6-9672-421b-92a9-893cde49ceda")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_4d5a168a5a7949808c1c3c8f87c4a327.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e1b52856-8ce6-4681-895d-d3771699b592}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_4d5a168a5a7949808c1c3c8f87c4a327</RootNamespace>
    <AssemblyName>ST_4d5a168a5a7949808c1c3c8f87c4a327</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_4d5a168a5a7949808c1c3c8f87c4a327</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_4d5a168a5a7949808c1c3c8f87c4a327</msb:DisplayName>
		<msb:ProjectId>{F7E741A4-3DFC-4F42-B9BC-90E32252FF39}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4d5a168a5a7949808c1c3c8f87c4a327.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()

        Dim sExecutionGUID As String = "{" & System.Guid.NewGuid().ToString().ToUpper() & "}"

        Dts.Variables("sExecutionGUID").Value = sExecutionGUID

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_4d5a168a5a7949808c1c3c8f87c4a327.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHaTGF4AAAAAAAAAAOAAIiALAVAAABoAAAAIAAAAAAAAjjgA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADw4AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlBgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
OAAAAAAAAEgAAAACAAUAeCIAAAwVAAABAAAAAAAAAIQ3AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhMwAwBQAAAAAQAAEXIzAABwKCsA
AAoLEgH+FiUAAAFvLAAACm8tAAAKcjcAAHAoLgAACgoCKC8AAApvMAAACnI7AABwbzEAAAoGbzIA
AAoCKC8AAAoWbzMAAAoqNgIDKCYAAAooNAAACioeAig1AAAKKi7QCAAAAigjAAAKKh4CKCwAAAoq
AAATMAEAFAAAAAIAABECjAUAABstCCgBAAArCisCAgoGKiID/hUFAAAbKgAAABMwAgAoAAAAAwAA
EQJ7NwAACm84AAAKCgaMCAAAGy0SKAIAACsKAns3AAAKBm85AAAKBipKAigiAAAKAnM6AAAKfTcA
AAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMgHAAAjfgAANAgAAPwIAAAj
U3RyaW5ncwAAAAAwEQAAXAAAACNVUwCMEQAAEAAAACNHVUlEAAAAnBEAAHADAAAjQmxvYgAAAAAA
AAACAAABVx2iCQkPAAAA+gEzABYAAAEAAAAvAAAACgAAAAwAAAAZAAAABAAAADoAAAACAAAANwAA
AAMAAAAEAAAACAAAAAkAAAAIAAAAAQAAAAUAAAABAAAAAwAAAAMAAAACAAAAAAAeBQEAAAAAAAYA
XQOKBwYAAgSKBwYANALLBg8AMAgAAAYAdQLLBQYAQAPLBQYA6QPLBQYAfQPLBQYAlgPLBQYAvALL
BQYAsQNPBQYAYQJEBwYA3QFEBwYACAPLBQYA1wJcBAoAAAJdBgoAyAEIBQoASAIIBQ4AoAEaBw4A
mwbeBgYA8ALLBg4AjAJjBw4ApAKxAAYAmQhPBQ4AgQYaBw4AJQOxAAYAUwFPBQ4AAQDMBAoA6wFb
BQYATQaqBwYA3QW2BQoAsAGhBQYAFwLLBhIAxwOjBBIAhAGjBAYAfwRPBQYAygBPBQYAVgVPBQYA
DAFPBQYA8wjLBQYAXwiKBwYAwwZLBAYAeARPBRIA9gSjBBYAQwgwARYAAwEwAQYArAZPBQAAAABP
AAAAAAABAAEAAAAAAJMFyAhNAAEAAQAAAAAAmQbICFEAAQACAAABEACgCMgIYQABAAMAAAAAAOwH
uwdhAAUACAAAARAATQgrAIEABwAMAAEAAAB4BSsAjQAJAA8ABQEAAAwHAABhAAkAEQAFAQAAEAAA
AGEACQAYAAIBAAB+CAAAmQAKABoAMQASBgkBMQDpBREBMQD9BRkBMQArBiEBEQCkBikBEQB4AS0B
EQAgBDEBEQCTCDUBIQC+CMcABgagADgBVoBuCDsBVoBYATsBUCAAAAAABhi2BgYAAQBYIAAAAAAG
GLYGBgABAGAgAAAAABEYvAY/AQEAiiAAAAAAEwiMBkMBAQCWIAAAAAATCIMFSAEBAKIgAAAAABMI
fQZNAQEAriAAAAAAEwj8BlIBAQC6IAAAAAADGLYGBgABAMIgAAAAABYISQZXAQEA7iAAAAAAFghg
AVwBAQD1IAAAAAAWCGwBYQEBAP0gAAAAABEYvAY/AQIADiEAAAAABhi2BgYAAgAYIQAAAAAWCCgE
ZwECAHQhAAAAAAYYtgYGAAIAfCEAAAAABgB+BQYAAgDYIQAAAADGAlgInwACAOYhAAAAAMYC9wCk
AAMA7iEAAAAAgwBQAWwBAwD6IQAAAADGAnYEfAADAAQiAAAAABEAjQBxAQMAJCIAAAAAAQB5AHkB
BAC6IAAAAAAGGLYGBgAFADAiAAAAAAMI3gBKAAUAZCIAAAAABhi2BgYABQAAAAEARQQAAAEA5wUA
AAEA7gAAAAEA7gAJALYGAQARALYGBgAZALYGCgApALYGEAAxALYGEAA5ALYGEABBALYGEABJALYG
EABRALYGEABZALYGFQBhALYGFQBpALYGEABxALYGEAB5ALYGEACBALYGGgCRALYGIACpALYGBgCx
ALYGBgC5ALYGBgDRALYGJgDpALYGEAAJAbYGBgARAbYGBgCZALYGBgChALYGBgAMALYGBgAUALYG
BgAcALYGBgAkALYGBgAMAN4ASgAUAN4ASgAcAN4ASgAkAN4ASgDBALYGBgDZAB4BTwDZAO8IVwDx
ALYGXQBJATwEZQABAbYGBgBRAYYGagBRAaoIagAZAbYGBgApAccAdgDBAHYEfABZAXUGfABZAYwI
gAAZAXYIhwBhAT8IjQBpAUYFkwBxATIEmgBhAa8IAQDBAFgInwDBAPcApAB5Ac8AsAA0AL4IxwA8
ACgESgA8ADIE3gA8ALYGBgAIACwA/wAIADAABAEpAKsAKQMuAAsAqQEuABMAsgEuABsA0QEuACMA
2gEuACsAAwIuADMAAwIuADsA2gEuAEMACQIuAEsAAwIuAFMAIAIuAFsAAwIuAGMAJgIuAGsAUAIu
AHMAXQJAAIsABAFAAIMApQJDAHsArgJDAIMApQJJAKsAOgNjAHsArgJjAIMApQJpAKsATgOAAIsA
BAGDAJMABAGDAJsABAGDAHsArgKJAKsAWwOgAIsABAGpAIMA0QHAAIsABAHJAIMA0QHgAIsABAHj
ALsABAHjAFMAAwLpALMABAEDAYMApQIDAaMAxwIjAYMApQIjAVsAAwIgAoMApQIgAosABAFAAoMA
pQJAAosABAFgAoMApQJgAosABAGAAoMApQKAAosABAGgAosABAHAAosABAHgAosABAHgAoMApQIA
A4sABAEgA4sABAEgA4MApQJvAKgAuwAEAAEABQAFAAYABwAJAAgAAACbBoEBAACVBYYBAACBBosB
AAAOB5ABAABNBpUBAAB8AZoBAABFBJ8BAADiAKQBAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgAJ
AAsAAgAKAA0AAQALAA0AAgAOAA8AAgAYABEALgA1ADwAQwCtAMAAzwDWAASAAAABAAAAAAAAAAAA
AAAAACsAAAAEAAAAAAAAAAAAAADkAKgAAAAAAAQAAAAAAAAAAAAAAOQATwUAAAAACgAAAAAAAAAA
AAAA7QCxAAAAAAALAAAAAAAAAAAAAAD2AIQEAAAAAAsAAAAAAAAAAAAAAPYAWAAAAAAAAAAAAAEA
AAD4BwAACAAEAAkABAAKAAcAAAAQABIAdwAAABAAKwB3AAAAAAAtAHcAbQC2AG0A2QAAAABDb250
ZXh0VmFsdWVgMQBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBTVF80ZDVhMTY4YTVhNzk0OTgw
OGMxYzNjOGY4N2M0YTMyNwA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMA
VABEaXNwb3NlX19JbnN0YW5jZV9fAENyZWF0ZV9fSW5zdGFuY2VfXwB2YWx1ZV9fAG1zY29ybGli
AE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBOZXdHdWlkAENyZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0
YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29kZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAEdldFR5cGUARmFp
bHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBfcmVzQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmpl
Y3RNb2RlbEJhc2UAQXBwbGljYXRpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAEd1aWRBdHRyaWJ1dGUASGVscEtleXdvcmRBdHRyaWJ1dGUAR2VuZXJh
dGVkQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFt
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0
ZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAG1fVmFsdWUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQBHZXRP
YmplY3RWYWx1ZQBTeXN0ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9T
dHJpbmcATWF0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNl
cy5JbnRlcm5hbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfNGQ1
YTE2OGE1YTc5NDk4MDhjMWMzYzhmODdjNGEzMjcuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAFN5
c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlB
cHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBtX0FwcE9iamVjdFByb3ZpZGVyAG1fVXNlck9iamVj
dFByb3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBtX015V2ViU2VydmljZXNPYmplY3RQ
cm92aWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAFRvVXBw
ZXIAZ2V0X1VzZXIARW50ZXIAZ2V0X0NvbXB1dGVyAE15Q29tcHV0ZXIAX3Jlc01ncgBBY3RpdmF0
b3IALmN0b3IALmNjdG9yAE1vbml0b3IAU3lzdGVtLkRpYWdub3N0aWNzAE1pY3Jvc29mdC5WaXN1
YWxCYXNpYy5EZXZpY2VzAGdldF9XZWJTZXJ2aWNlcwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29mdC5W
aXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2
aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVudGlt
ZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNGQ1YTE2OGE1YTc5NDk4MDhj
MWMzYzhmODdjNGEzMjcuTXkuUmVzb3VyY2VzAE15UmVzb3VyY2VzAFNUXzRkNWExNjhhNWE3OTQ5
ODA4YzFjM2M4Zjg3YzRhMzI3LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0
X1ZhcmlhYmxlcwBNeVNldHRpbmdzAEVxdWFscwBSdW50aW1lSGVscGVycwBTdWNjZXNzAGdldF9E
dHMAU2NyaXB0UmVzdWx0cwBDb25jYXQAbV9TeW5jT2JqZWN0AE15UHJvamVjdABFeGl0AHNldF9U
YXNrUmVzdWx0AG1fQ29udGV4dABTVF80ZDVhMTY4YTVhNzk0OTgwOGMxYzNjOGY4N2M0YTMyNy5N
eQBnZXRfQXNzZW1ibHkAADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUA
cgBjAGUAcwAAA3sAAAN9AAAdcwBFAHgAZQBjAHUAdABpAG8AbgBHAFUASQBEAAAAAAAln2ToxIB4
RqTk+X+F9g3+AAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUHIAQBDg4ODgYV
EiQBEgwGFRIkARIIBhUSJAESZQYVEiQBEiAEIAATAAcAARJtEYCdBSAAEoChByACAQ4SgKEEAAEc
HAQAAQEcBgcCDhGAlQUAABGAlQMgAA4GAAMODg4OBSAAEoCxBSAAEoC1BiABEoC5HAQgAQEcBCAB
AhwDIAAIBAcBHgACHgAFEAEAHgAECgEeAAQHARMABhUSJAETAAcGFRJxARMABhUScQETAAITAAQK
ARMABSABARMACLd6XFYZNOCJCLA/X38R1Qo6CImEXc2AgMyRBAAAAAAEAQAAAAcGFRIkARIMBwYV
EiQBEggHBhUSJAESZQcGFRIkARIgAwYSeQMGEn0DBhIYAgYcAgYIAwYRKAMAAAEEAAASDAQAABII
BAAAEmUEAAASIAQAABJ5BAAAEn0FAAEBEn0EAAASGAQgABJtBxABAR4AHgAHMAEBARAeAAQIABIM
BAgAEggECAASZQQIABIgBAgAEnkECAASfQQIABIYBCgAEwAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzRkNWExNjhhNWE3OTQ5ODA4YzFjM2M4
Zjg3YzRhMzI3AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTkAAAUBAAEAACkBACQxNzg2YTFm
Ni05NjcyLTQyMWItOTJhOS04OTNjZGU0OWNlZGEAAAwBAAcxLjAuMC4wAABHAQAaLk5FVEZyYW1l
d29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3Jr
IDQIAQABAAAAAAAYAQAKTXlUZW1wbGF0ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIuU2Vydmlj
ZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rp
c3Bvc2VfX0luc3RhbmNlX18AAAAQAQALTXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAA
DAEAB015LlVzZXIAABMBAA5NeS5XZWJTZXJ2aWNlcwAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABkOAAAAAAAAAAA
AAB+OAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcDgAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwA0AGQANQBhADEANgA4AGEANQBhADcAOQA0ADkAOAAwADgAYwAxAGMAMwBjADgAZgA4ADcA
YwA0AGEAMwAyADcAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADQAZAA1AGEAMQA2ADgA
YQA1AGEANwA5ADQAOQA4ADAAOABjADEAYwAzAGMAOABmADgANwBjADQAYQAzADIANwAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMQA5AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8ANABkADUA
YQAxADYAOABhADUAYQA3ADkANAA5ADgAMAA4AGMAMQBjADMAYwA4AGYAOAA3AGMANABhADMAMgA3
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADQAZAA1AGEA
MQA2ADgAYQA1AGEANwA5ADQAOQA4ADAAOABjADEAYwAzAGMAOABmADgANwBjADQAYQAzADIANwAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAkDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Refersion Data &amp; Send to Refersion API"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{E735325E-93E0-4393-B667-E669A361DF0D}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Refersion Data &amp; Send to Refersion API"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
              name="Execute Referson Post API"
              usesDispositions="true"
              version="5">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack90, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.String"
                  description="API URL you like to call"
                  expressionType="Notify"
                  name="HttpRequestUrl">https://inbound-webhooks.refersion.com/tracker/orders/paid</property>
                <property
                  dataType="System.String"
                  description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                  expressionType="Notify"
                  name="HttpRequestMethod">POST</property>
                <property
                  dataType="System.String"
                  description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                  expressionType="Notify"
                  name="HttpHeaders"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Refersion-Public-Key&lt;/name&gt;&lt;value&gt;pub_8158dd719122b20d74a0&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Refersion-Secret-Key&lt;/name&gt;&lt;value&gt;sec_4d200fe64ef83e25e466&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                <property
                  dataType="System.String"
                  description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                  expressionType="Notify"
                  name="HttpRequestData"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;%JsonData%&gt;</property>
                <property
                  dataType="System.Int32"
                  description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                  expressionType="Notify"
                  name="HttpRequestContentType"
                  typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">2</property>
                <property
                  dataType="System.Boolean"
                  description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                  expressionType="Notify"
                  name="ContinueOnUrlNotFoundError">false</property>
                <property
                  dataType="System.Boolean"
                  description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                  expressionType="Notify"
                  name="IgnoreCertificateErrors">false</property>
                <property
                  dataType="System.Boolean"
                  description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                  expressionType="Notify"
                  name="AllowUnsecureSuite">false</property>
                <property
                  dataType="System.Boolean"
                  description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                  expressionType="Notify"
                  name="EnableCompressionSupport">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                  expressionType="Notify"
                  name="SecurityProtocol"
                  typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack90, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Int32"
                  description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                  expressionType="Notify"
                  name="WaitTime">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                  expressionType="Notify"
                  name="OnErrorOutputResponseBody">false</property>
                <property
                  dataType="System.Boolean"
                  description="Enable multiple requests using parallel threads."
                  expressionType="Notify"
                  name="EnableParallelRequests">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum parallel threads to use for processing multiple web requests."
                  expressionType="Notify"
                  name="MaxParallelThreads">3</property>
                <property
                  dataType="System.Boolean"
                  description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                  expressionType="Notify"
                  name="EnableBodyBatch">false</property>
                <property
                  dataType="System.String"
                  description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                  expressionType="Notify"
                  name="BodyHeader"></property>
                <property
                  dataType="System.String"
                  description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                  expressionType="Notify"
                  name="BodyFooter"></property>
                <property
                  dataType="System.Int32"
                  description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                  expressionType="Notify"
                  name="BodyBatchSize">100</property>
                <property
                  dataType="System.String"
                  description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                  expressionType="Notify"
                  name="BodyRowSeparator"></property>
                <property
                  dataType="System.Boolean"
                  description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                  expressionType="Notify"
                  name="TreatResponseAsBinary">false</property>
                <property
                  dataType="System.Boolean"
                  description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. File content type is determined based on extension.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.txt&#xA;SomeField1=aaaaaaa&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterId&#xA;"
                  expressionType="Notify"
                  name="IsMultiPartUpload">false</property>
                <property
                  dataType="System.Boolean"
                  description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                  expressionType="Notify"
                  name="AddMultiPartPostamble">false</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.PowerPack.Adapter.WebApiDestination.WebApiDestination, ZappySys.PowerPack110, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Connections[Connection]"
                  connectionManagerID="Package.ConnectionManagers[RefersionAPI]"
                  connectionManagerRefId="Package.ConnectionManagers[RefersionAPI]"
                  description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                  name="Connection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Inputs[WebApiDestinationInput]"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="WebApiDestinationInput"
                  truncationRowDisposition="RedirectRow">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Inputs[WebApiDestinationInput].Columns[JsonData]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="JsonData"
                      externalMetadataColumnId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Inputs[WebApiDestinationInput].ExternalColumns[JsonData]"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].Columns[JsonData]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                      dataType="wstr"
                      length="2000"
                      name="HttpRequestUrl" />
                    <externalMetadataColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                      dataType="nText"
                      name="HttpRequestData" />
                    <externalMetadataColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                      dataType="wstr"
                      length="2000"
                      name="HttpHeaders" />
                    <externalMetadataColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Inputs[WebApiDestinationInput].ExternalColumns[JsonData]"
                      dataType="wstr"
                      length="4000"
                      name="JsonData" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[WebApiDestination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="WebApiDestination Error Output"
                  synchronousInputId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Inputs[WebApiDestinationInput]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                      dataType="nText"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[Response Output]"
                  exclusionGroup="1"
                  name="Response Output"
                  synchronousInputId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Inputs[WebApiDestinationInput]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[Response Output].Columns[ResponseText]"
                      dataType="nText"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[Response Output].Columns[ResponseText]"
                      name="ResponseText" />
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[Response Output].Columns[StatusCode]"
                      dataType="i4"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[Response Output].Columns[StatusCode]"
                      name="StatusCode" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data"
              componentClassID="{165A526D-D5DE-47FF-96A6-F8274C19826B}"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get Refersion Data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[datRefersion_Stage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">EXEC spSvc_GetRefersionData ?</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"@SessionID:Input",{80FD668D-2981-4ACB-BE24-86766E22DFB5};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL05.HC_Marketing]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL05.HC_Marketing]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].Columns[JsonData]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].ExternalColumns[JsonData]"
                      length="4000"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].Columns[JsonData]"
                      name="JsonData"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].Columns[RefersionLogID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].ExternalColumns[RefersionLogID]"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].Columns[RefersionLogID]"
                      name="RefersionLogID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].Columns[ResponseCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].ExternalColumns[ResponseCode]"
                      length="50"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].Columns[ResponseCode]"
                      name="ResponseCode"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].ExternalColumns[JsonData]"
                      dataType="wstr"
                      length="4000"
                      name="JsonData" />
                    <externalMetadataColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].ExternalColumns[RefersionLogID]"
                      dataType="i4"
                      name="RefersionLogID" />
                    <externalMetadataColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].ExternalColumns[ResponseCode]"
                      dataType="wstr"
                      length="50"
                      name="ResponseCode" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Error Output].Columns[JsonData]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Error Output].Columns[JsonData]"
                      name="JsonData" />
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Error Output].Columns[RefersionLogID]"
                      dataType="i4"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Error Output].Columns[RefersionLogID]"
                      name="RefersionLogID" />
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Error Output].Columns[ResponseCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Error Output].Columns[ResponseCode]"
                      name="ResponseCode" />
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful"
              componentClassID="{93FFEC66-CBC8-4C7F-9C6A-CB1C17A7567D}"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update 2 to RefersionStatusID if Successful"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">UPDATE dbo.datRefersionLog
SET    RefersionStatusID  = 2
WHERE  RefersionLogID = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL05.HC_Marketing]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL05.HC_Marketing]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Inputs[OLE DB Command Input].Columns[RefersionLogID]"
                      cachedDataType="i4"
                      cachedName="RefersionLogID"
                      externalMetadataColumnId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].Columns[RefersionLogID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed"
              componentClassID="{93FFEC66-CBC8-4C7F-9C6A-CB1C17A7567D}"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update 3 to RefersionStatusID if Failed"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">UPDATE dbo.datRefersionLog
SET    RefersionStatusID  = 3
WHERE  RefersionLogID = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL05.HC_Marketing]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL05.HC_Marketing]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Inputs[OLE DB Command Input].Columns[RefersionLogID]"
                      cachedDataType="i4"
                      cachedName="RefersionLogID"
                      externalMetadataColumnId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output].Columns[RefersionLogID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get Refersion Data &amp; Send to Refersion API.Paths[OLE DB Source Output]"
              endId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Inputs[WebApiDestinationInput]"
              name="OLE DB Source Output"
              startId="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Get Refersion Data &amp; Send to Refersion API.Paths[Response Output]"
              endId="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful.Inputs[OLE DB Command Input]"
              name="Response Output"
              startId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[Response Output]" />
            <path
              refId="Package\Get Refersion Data &amp; Send to Refersion API.Paths[WebApiDestination Error Output]"
              endId="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed.Inputs[OLE DB Command Input]"
              name="WebApiDestination Error Output"
              startId="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API.Outputs[WebApiDestination Error Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{42CC6463-0EAE-419E-8170-3368A59806B3}"
      DTS:From="Package\Create SessionID"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Get Refersion Data &amp; Send to Refersion API" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="348,42"
          Id="Package\Create SessionID"
          TopLeft="45,29" />
        <NodeLayout
          Size="348,42"
          Id="Package\Get Refersion Data &amp; Send to Refersion API"
          TopLeft="46,138" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="219.5,71">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67"
              Start="0,0"
              End="0,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Get Refersion Data &amp; Send to Refersion API">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="312,42"
          Id="Package\Get Refersion Data &amp; Send to Refersion API\Update 2 to RefersionStatusID if Successful"
          TopLeft="127,270" />
        <NodeLayout
          Size="312,42"
          Id="Package\Get Refersion Data &amp; Send to Refersion API\Update 3 to RefersionStatusID if Failed"
          TopLeft="540,270" />
        <NodeLayout
          Size="226,42"
          Id="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data"
          TopLeft="366,24" />
        <NodeLayout
          Size="226,42"
          Id="Package\Get Refersion Data &amp; Send to Refersion API\Execute Referson Post API"
          TopLeft="367,147" />
        <EdgeLayout
          Id="Package\Get Refersion Data &amp; Send to Refersion API.Paths[WebApiDestination Error Output]"
          TopLeft="516.333333333333,189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="179.666666666667,81"
              Start="0,0"
              End="179.666666666667,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.7416520210896" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.7416520210896"
                    Point2="0,32.7416520210896"
                    Point3="4,32.7416520210896" />
                  <mssgle:LineSegment
                    End="175.666666666667,32.7416520210896" />
                  <mssgle:CubicBezierSegment
                    Point1="175.666666666667,32.7416520210896"
                    Point2="179.666666666667,32.7416520210896"
                    Point3="179.666666666667,36.7416520210896" />
                  <mssgle:LineSegment
                    End="179.666666666667,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="18.0117708333334,37.7416520210896,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Refersion Data &amp; Send to Refersion API.Paths[Response Output]"
          TopLeft="443.666666666667,189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-160.666666666667,81"
              Start="0,0"
              End="-160.666666666667,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.7416520210896" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.7416520210896"
                    Point2="0,32.7416520210896"
                    Point3="-4,32.7416520210896" />
                  <mssgle:LineSegment
                    End="-156.666666666667,32.7416520210896" />
                  <mssgle:CubicBezierSegment
                    Point1="-156.666666666667,32.7416520210896"
                    Point2="-160.666666666667,32.7416520210896"
                    Point3="-160.666666666667,36.7416520210896" />
                  <mssgle:LineSegment
                    End="-160.666666666667,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Refersion Data &amp; Send to Refersion API.Paths[OLE DB Source Output]"
          TopLeft="479.5,66">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,81"
              Start="0,0"
              End="0,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get Refersion Data &amp; Send to Refersion API\Get Refersion Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>