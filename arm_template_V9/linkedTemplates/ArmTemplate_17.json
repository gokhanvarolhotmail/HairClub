{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "hc-eim-df-prod2"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/ODSUser')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/ODS"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_SF_User",
                                "type": "DatasetReference"
                            },
                            "name": "UserParquet"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_User",
                                "type": "DatasetReference"
                            },
                            "name": "UpsertOdsUser"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AllowUpsert"
                        }
                    ],
                    "script": "source(output(\n\t\tId as string,\n\t\tUsername as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tName as string,\n\t\tCompanyName as string,\n\t\tDivision as string,\n\t\tDepartment as string,\n\t\tTitle as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tEmail as string,\n\t\tEmailPreferencesAutoBcc as boolean,\n\t\tEmailPreferencesAutoBccStayInTouch as boolean,\n\t\tEmailPreferencesStayInTouchReminder as boolean,\n\t\tSenderEmail as string,\n\t\tSenderName as string,\n\t\tSignature as string,\n\t\tStayInTouchSubject as string,\n\t\tStayInTouchSignature as string,\n\t\tStayInTouchNote as string,\n\t\tPhone as string,\n\t\tFax as string,\n\t\tMobilePhone as string,\n\t\tAlias as string,\n\t\tCommunityNickname as string,\n\t\tBadgeText as string,\n\t\tIsActive as boolean,\n\t\tTimeZoneSidKey as string,\n\t\tUserRoleId as string,\n\t\tLocaleSidKey as string,\n\t\tReceivesInfoEmails as boolean,\n\t\tReceivesAdminInfoEmails as boolean,\n\t\tEmailEncodingKey as string,\n\t\tDefaultCurrencyIsoCode as string,\n\t\tCurrencyIsoCode as string,\n\t\tProfileId as string,\n\t\tUserType as string,\n\t\tLanguageLocaleKey as string,\n\t\tEmployeeNumber as string,\n\t\tDelegatedApproverId as string,\n\t\tManagerId as string,\n\t\tLastLoginDate as timestamp,\n\t\tLastPasswordChangeDate as timestamp,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tOfflineTrialExpirationDate as timestamp,\n\t\tOfflinePdaTrialExpirationDate as timestamp,\n\t\tUserPermissionsMarketingUser as boolean,\n\t\tUserPermissionsOfflineUser as boolean,\n\t\tUserPermissionsAvantgoUser as boolean,\n\t\tUserPermissionsCallCenterAutoLogin as boolean,\n\t\tUserPermissionsMobileUser as boolean,\n\t\tUserPermissionsSFContentUser as boolean,\n\t\tUserPermissionsKnowledgeUser as boolean,\n\t\tUserPermissionsInteractionUser as boolean,\n\t\tUserPermissionsSupportUser as boolean,\n\t\tUserPermissionsLiveAgentUser as boolean,\n\t\tForecastEnabled as boolean,\n\t\tUserPreferencesActivityRemindersPopup as boolean,\n\t\tUserPreferencesEventRemindersCheckboxDefault as boolean,\n\t\tUserPreferencesTaskRemindersCheckboxDefault as boolean,\n\t\tUserPreferencesReminderSoundOff as boolean,\n\t\tUserPreferencesDisableAllFeedsEmail as boolean,\n\t\tUserPreferencesDisableFollowersEmail as boolean,\n\t\tUserPreferencesDisableProfilePostEmail as boolean,\n\t\tUserPreferencesDisableChangeCommentEmail as boolean,\n\t\tUserPreferencesDisableLaterCommentEmail as boolean,\n\t\tUserPreferencesDisProfPostCommentEmail as boolean,\n\t\tUserPreferencesApexPagesDeveloperMode as boolean,\n\t\tUserPreferencesHideCSNGetChatterMobileTask as boolean,\n\t\tUserPreferencesDisableMentionsPostEmail as boolean,\n\t\tUserPreferencesDisMentionsCommentEmail as boolean,\n\t\tUserPreferencesHideCSNDesktopTask as boolean,\n\t\tUserPreferencesHideChatterOnboardingSplash as boolean,\n\t\tUserPreferencesHideSecondChatterOnboardingSplash as boolean,\n\t\tUserPreferencesDisCommentAfterLikeEmail as boolean,\n\t\tUserPreferencesDisableLikeEmail as boolean,\n\t\tUserPreferencesSortFeedByComment as boolean,\n\t\tUserPreferencesDisableMessageEmail as boolean,\n\t\tUserPreferencesDisableBookmarkEmail as boolean,\n\t\tUserPreferencesDisableSharePostEmail as boolean,\n\t\tUserPreferencesEnableAutoSubForFeeds as boolean,\n\t\tUserPreferencesDisableFileShareNotificationsForApi as boolean,\n\t\tUserPreferencesShowTitleToExternalUsers as boolean,\n\t\tUserPreferencesShowManagerToExternalUsers as boolean,\n\t\tUserPreferencesShowEmailToExternalUsers as boolean,\n\t\tUserPreferencesShowWorkPhoneToExternalUsers as boolean,\n\t\tUserPreferencesShowMobilePhoneToExternalUsers as boolean,\n\t\tUserPreferencesShowFaxToExternalUsers as boolean,\n\t\tUserPreferencesShowStreetAddressToExternalUsers as boolean,\n\t\tUserPreferencesShowCityToExternalUsers as boolean,\n\t\tUserPreferencesShowStateToExternalUsers as boolean,\n\t\tUserPreferencesShowPostalCodeToExternalUsers as boolean,\n\t\tUserPreferencesShowCountryToExternalUsers as boolean,\n\t\tUserPreferencesShowProfilePicToGuestUsers as boolean,\n\t\tUserPreferencesShowTitleToGuestUsers as boolean,\n\t\tUserPreferencesShowCityToGuestUsers as boolean,\n\t\tUserPreferencesShowStateToGuestUsers as boolean,\n\t\tUserPreferencesShowPostalCodeToGuestUsers as boolean,\n\t\tUserPreferencesShowCountryToGuestUsers as boolean,\n\t\tUserPreferencesPipelineViewHideHelpPopover as boolean,\n\t\tUserPreferencesHideS1BrowserUI as boolean,\n\t\tUserPreferencesDisableEndorsementEmail as boolean,\n\t\tUserPreferencesPathAssistantCollapsed as boolean,\n\t\tUserPreferencesCacheDiagnostics as boolean,\n\t\tUserPreferencesShowEmailToGuestUsers as boolean,\n\t\tUserPreferencesShowManagerToGuestUsers as boolean,\n\t\tUserPreferencesShowWorkPhoneToGuestUsers as boolean,\n\t\tUserPreferencesShowMobilePhoneToGuestUsers as boolean,\n\t\tUserPreferencesShowFaxToGuestUsers as boolean,\n\t\tUserPreferencesShowStreetAddressToGuestUsers as boolean,\n\t\tUserPreferencesLightningExperiencePreferred as boolean,\n\t\tUserPreferencesPreviewLightning as boolean,\n\t\tUserPreferencesHideEndUserOnboardingAssistantModal as boolean,\n\t\tUserPreferencesHideLightningMigrationModal as boolean,\n\t\tUserPreferencesHideSfxWelcomeMat as boolean,\n\t\tUserPreferencesHideBiggerPhotoCallout as boolean,\n\t\tUserPreferencesGlobalNavBarWTShown as boolean,\n\t\tUserPreferencesGlobalNavGridMenuWTShown as boolean,\n\t\tUserPreferencesCreateLEXAppsWTShown as boolean,\n\t\tUserPreferencesFavoritesWTShown as boolean,\n\t\tUserPreferencesRecordHomeSectionCollapseWTShown as boolean,\n\t\tUserPreferencesRecordHomeReservedWTShown as boolean,\n\t\tUserPreferencesFavoritesShowTopFavorites as boolean,\n\t\tUserPreferencesExcludeMailAppAttachments as boolean,\n\t\tUserPreferencesSuppressTaskSFXReminders as boolean,\n\t\tUserPreferencesSuppressEventSFXReminders as boolean,\n\t\tUserPreferencesPreviewCustomTheme as boolean,\n\t\tUserPreferencesHasCelebrationBadge as boolean,\n\t\tUserPreferencesUserDebugModePref as boolean,\n\t\tUserPreferencesNewLightningReportRunPageEnabled as boolean,\n\t\tContactId as string,\n\t\tAccountId as string,\n\t\tCallCenterId as string,\n\t\tExtension as string,\n\t\tFederationIdentifier as string,\n\t\tAboutMe as string,\n\t\tFullPhotoUrl as string,\n\t\tSmallPhotoUrl as string,\n\t\tIsExtIndicatorVisible as boolean,\n\t\tOutOfOfficeMessage as string,\n\t\tMediumPhotoUrl as string,\n\t\tDigestFrequency as string,\n\t\tDefaultGroupNotificationFrequency as string,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tBannerPhotoUrl as string,\n\t\tSmallBannerPhotoUrl as string,\n\t\tMediumBannerPhotoUrl as string,\n\t\tIsProfilePhotoActive as boolean,\n\t\tet4ae5__Default_ET_Page__c as string,\n\t\tet4ae5__Default_MID__c as string,\n\t\tet4ae5__ExactTargetForAppExchangeAdmin__c as boolean,\n\t\tet4ae5__ExactTargetForAppExchangeUser__c as boolean,\n\t\tet4ae5__ExactTargetUsername__c as string,\n\t\tet4ae5__ExactTarget_OAuth_Token__c as string,\n\t\tet4ae5__ValidExactTargetAdmin__c as boolean,\n\t\tet4ae5__ValidExactTargetUser__c as boolean,\n\t\tChat_Display_Name__c as string,\n\t\tChat_Photo_Small__c as string,\n\t\tDialerID__c as string,\n\t\tExternal_Id__c as string,\n\t\tSightCall_UseCase_Id__c as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> UserParquet\nUserParquet alterRow(upsertIf(true())) ~> AllowUpsert\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tId as string,\n\t\tUsername as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tName as string,\n\t\tCompanyName as string,\n\t\tDivision as string,\n\t\tDepartment as string,\n\t\tTitle as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tEmail as string,\n\t\tEmailPreferencesAutoBcc as boolean,\n\t\tEmailPreferencesAutoBccStayInTouch as boolean,\n\t\tEmailPreferencesStayInTouchReminder as boolean,\n\t\tSenderEmail as string,\n\t\tSenderName as string,\n\t\tSignature as string,\n\t\tStayInTouchSubject as string,\n\t\tStayInTouchSignature as string,\n\t\tStayInTouchNote as string,\n\t\tPhone as string,\n\t\tFax as string,\n\t\tMobilePhone as string,\n\t\tAlias as string,\n\t\tCommunityNickname as string,\n\t\tBadgeText as string,\n\t\tIsActive as boolean,\n\t\tTimeZoneSidKey as string,\n\t\tUserRoleId as string,\n\t\tLocaleSidKey as string,\n\t\tReceivesInfoEmails as boolean,\n\t\tReceivesAdminInfoEmails as boolean,\n\t\tEmailEncodingKey as string,\n\t\tDefaultCurrencyIsoCode as string,\n\t\tCurrencyIsoCode as string,\n\t\tProfileId as string,\n\t\tUserType as string,\n\t\tLanguageLocaleKey as string,\n\t\tEmployeeNumber as string,\n\t\tDelegatedApproverId as string,\n\t\tManagerId as string,\n\t\tLastLoginDate as timestamp,\n\t\tLastPasswordChangeDate as timestamp,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tOfflineTrialExpirationDate as timestamp,\n\t\tOfflinePdaTrialExpirationDate as timestamp,\n\t\tUserPermissionsMarketingUser as boolean,\n\t\tUserPermissionsOfflineUser as boolean,\n\t\tUserPermissionsAvantgoUser as boolean,\n\t\tUserPermissionsCallCenterAutoLogin as boolean,\n\t\tUserPermissionsMobileUser as boolean,\n\t\tUserPermissionsSFContentUser as boolean,\n\t\tUserPermissionsKnowledgeUser as boolean,\n\t\tUserPermissionsInteractionUser as boolean,\n\t\tUserPermissionsSupportUser as boolean,\n\t\tUserPermissionsLiveAgentUser as boolean,\n\t\tForecastEnabled as boolean,\n\t\tUserPreferencesActivityRemindersPopup as boolean,\n\t\tUserPreferencesEventRemindersCheckboxDefault as boolean,\n\t\tUserPreferencesTaskRemindersCheckboxDefault as boolean,\n\t\tUserPreferencesReminderSoundOff as boolean,\n\t\tUserPreferencesDisableAllFeedsEmail as boolean,\n\t\tUserPreferencesDisableFollowersEmail as boolean,\n\t\tUserPreferencesDisableProfilePostEmail as boolean,\n\t\tUserPreferencesDisableChangeCommentEmail as boolean,\n\t\tUserPreferencesDisableLaterCommentEmail as boolean,\n\t\tUserPreferencesDisProfPostCommentEmail as boolean,\n\t\tUserPreferencesApexPagesDeveloperMode as boolean,\n\t\tUserPreferencesHideCSNGetChatterMobileTask as boolean,\n\t\tUserPreferencesDisableMentionsPostEmail as boolean,\n\t\tUserPreferencesDisMentionsCommentEmail as boolean,\n\t\tUserPreferencesHideCSNDesktopTask as boolean,\n\t\tUserPreferencesHideChatterOnboardingSplash as boolean,\n\t\tUserPreferencesHideSecondChatterOnboardingSplash as boolean,\n\t\tUserPreferencesDisCommentAfterLikeEmail as boolean,\n\t\tUserPreferencesDisableLikeEmail as boolean,\n\t\tUserPreferencesSortFeedByComment as boolean,\n\t\tUserPreferencesDisableMessageEmail as boolean,\n\t\tUserPreferencesDisableBookmarkEmail as boolean,\n\t\tUserPreferencesDisableSharePostEmail as boolean,\n\t\tUserPreferencesEnableAutoSubForFeeds as boolean,\n\t\tUserPreferencesDisableFileShareNotificationsForApi as boolean,\n\t\tUserPreferencesShowTitleToExternalUsers as boolean,\n\t\tUserPreferencesShowManagerToExternalUsers as boolean,\n\t\tUserPreferencesShowEmailToExternalUsers as boolean,\n\t\tUserPreferencesShowWorkPhoneToExternalUsers as boolean,\n\t\tUserPreferencesShowMobilePhoneToExternalUsers as boolean,\n\t\tUserPreferencesShowFaxToExternalUsers as boolean,\n\t\tUserPreferencesShowStreetAddressToExternalUsers as boolean,\n\t\tUserPreferencesShowCityToExternalUsers as boolean,\n\t\tUserPreferencesShowStateToExternalUsers as boolean,\n\t\tUserPreferencesShowPostalCodeToExternalUsers as boolean,\n\t\tUserPreferencesShowCountryToExternalUsers as boolean,\n\t\tUserPreferencesShowProfilePicToGuestUsers as boolean,\n\t\tUserPreferencesShowTitleToGuestUsers as boolean,\n\t\tUserPreferencesShowCityToGuestUsers as boolean,\n\t\tUserPreferencesShowStateToGuestUsers as boolean,\n\t\tUserPreferencesShowPostalCodeToGuestUsers as boolean,\n\t\tUserPreferencesShowCountryToGuestUsers as boolean,\n\t\tUserPreferencesPipelineViewHideHelpPopover as boolean,\n\t\tUserPreferencesHideS1BrowserUI as boolean,\n\t\tUserPreferencesDisableEndorsementEmail as boolean,\n\t\tUserPreferencesPathAssistantCollapsed as boolean,\n\t\tUserPreferencesCacheDiagnostics as boolean,\n\t\tUserPreferencesShowEmailToGuestUsers as boolean,\n\t\tUserPreferencesShowManagerToGuestUsers as boolean,\n\t\tUserPreferencesShowWorkPhoneToGuestUsers as boolean,\n\t\tUserPreferencesShowMobilePhoneToGuestUsers as boolean,\n\t\tUserPreferencesShowFaxToGuestUsers as boolean,\n\t\tUserPreferencesShowStreetAddressToGuestUsers as boolean,\n\t\tUserPreferencesLightningExperiencePreferred as boolean,\n\t\tUserPreferencesPreviewLightning as boolean,\n\t\tUserPreferencesHideEndUserOnboardingAssistantModal as boolean,\n\t\tUserPreferencesHideLightningMigrationModal as boolean,\n\t\tUserPreferencesHideSfxWelcomeMat as boolean,\n\t\tUserPreferencesHideBiggerPhotoCallout as boolean,\n\t\tUserPreferencesGlobalNavBarWTShown as boolean,\n\t\tUserPreferencesGlobalNavGridMenuWTShown as boolean,\n\t\tUserPreferencesCreateLEXAppsWTShown as boolean,\n\t\tUserPreferencesFavoritesWTShown as boolean,\n\t\tUserPreferencesRecordHomeSectionCollapseWTShown as boolean,\n\t\tUserPreferencesRecordHomeReservedWTShown as boolean,\n\t\tUserPreferencesFavoritesShowTopFavorites as boolean,\n\t\tUserPreferencesExcludeMailAppAttachments as boolean,\n\t\tUserPreferencesSuppressTaskSFXReminders as boolean,\n\t\tUserPreferencesSuppressEventSFXReminders as boolean,\n\t\tUserPreferencesPreviewCustomTheme as boolean,\n\t\tUserPreferencesHasCelebrationBadge as boolean,\n\t\tUserPreferencesUserDebugModePref as boolean,\n\t\tUserPreferencesNewLightningReportRunPageEnabled as boolean,\n\t\tContactId as string,\n\t\tAccountId as string,\n\t\tCallCenterId as string,\n\t\tExtension as string,\n\t\tFederationIdentifier as string,\n\t\tAboutMe as string,\n\t\tFullPhotoUrl as string,\n\t\tSmallPhotoUrl as string,\n\t\tIsExtIndicatorVisible as boolean,\n\t\tOutOfOfficeMessage as string,\n\t\tMediumPhotoUrl as string,\n\t\tDigestFrequency as string,\n\t\tDefaultGroupNotificationFrequency as string,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tBannerPhotoUrl as string,\n\t\tSmallBannerPhotoUrl as string,\n\t\tMediumBannerPhotoUrl as string,\n\t\tIsProfilePhotoActive as boolean,\n\t\tet4ae5__Default_ET_Page__c as string,\n\t\tet4ae5__Default_MID__c as string,\n\t\tet4ae5__ExactTargetForAppExchangeAdmin__c as boolean,\n\t\tet4ae5__ExactTargetForAppExchangeUser__c as boolean,\n\t\tet4ae5__ExactTargetUsername__c as string,\n\t\tet4ae5__ExactTarget_OAuth_Token__c as string,\n\t\tet4ae5__ValidExactTargetAdmin__c as boolean,\n\t\tet4ae5__ValidExactTargetUser__c as boolean,\n\t\tChat_Display_Name__c as string,\n\t\tChat_Photo_Small__c as string,\n\t\tDialerID__c as string,\n\t\tExternal_Id__c as string,\n\t\tSightCall_UseCase_Id__c as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Id'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tId,\n\t\tUsername,\n\t\tLastName,\n\t\tFirstName,\n\t\tMiddleName,\n\t\tSuffix,\n\t\tName,\n\t\tCompanyName,\n\t\tDivision,\n\t\tDepartment,\n\t\tTitle,\n\t\tStreet,\n\t\tCity,\n\t\tState,\n\t\tPostalCode,\n\t\tCountry,\n\t\tStateCode,\n\t\tCountryCode,\n\t\tLatitude,\n\t\tLongitude,\n\t\tGeocodeAccuracy,\n\t\tEmail,\n\t\tEmailPreferencesAutoBcc,\n\t\tEmailPreferencesAutoBccStayInTouch,\n\t\tEmailPreferencesStayInTouchReminder,\n\t\tSenderEmail,\n\t\tSenderName,\n\t\tSignature,\n\t\tStayInTouchSubject,\n\t\tStayInTouchSignature,\n\t\tStayInTouchNote,\n\t\tPhone,\n\t\tFax,\n\t\tMobilePhone,\n\t\tAlias,\n\t\tCommunityNickname,\n\t\tBadgeText,\n\t\tIsActive,\n\t\tTimeZoneSidKey,\n\t\tUserRoleId,\n\t\tLocaleSidKey,\n\t\tReceivesInfoEmails,\n\t\tReceivesAdminInfoEmails,\n\t\tEmailEncodingKey,\n\t\tDefaultCurrencyIsoCode,\n\t\tCurrencyIsoCode,\n\t\tProfileId,\n\t\tUserType,\n\t\tLanguageLocaleKey,\n\t\tEmployeeNumber,\n\t\tDelegatedApproverId,\n\t\tManagerId,\n\t\tLastLoginDate,\n\t\tLastPasswordChangeDate,\n\t\tCreatedDate,\n\t\tCreatedById,\n\t\tLastModifiedDate,\n\t\tLastModifiedById,\n\t\tSystemModstamp,\n\t\tOfflineTrialExpirationDate,\n\t\tOfflinePdaTrialExpirationDate,\n\t\tUserPermissionsMarketingUser,\n\t\tUserPermissionsOfflineUser,\n\t\tUserPermissionsAvantgoUser,\n\t\tUserPermissionsCallCenterAutoLogin,\n\t\tUserPermissionsMobileUser,\n\t\tUserPermissionsSFContentUser,\n\t\tUserPermissionsKnowledgeUser,\n\t\tUserPermissionsInteractionUser,\n\t\tUserPermissionsSupportUser,\n\t\tUserPermissionsLiveAgentUser,\n\t\tForecastEnabled,\n\t\tUserPreferencesActivityRemindersPopup,\n\t\tUserPreferencesEventRemindersCheckboxDefault,\n\t\tUserPreferencesTaskRemindersCheckboxDefault,\n\t\tUserPreferencesReminderSoundOff,\n\t\tUserPreferencesDisableAllFeedsEmail,\n\t\tUserPreferencesDisableFollowersEmail,\n\t\tUserPreferencesDisableProfilePostEmail,\n\t\tUserPreferencesDisableChangeCommentEmail,\n\t\tUserPreferencesDisableLaterCommentEmail,\n\t\tUserPreferencesDisProfPostCommentEmail,\n\t\tUserPreferencesApexPagesDeveloperMode,\n\t\tUserPreferencesHideCSNGetChatterMobileTask,\n\t\tUserPreferencesDisableMentionsPostEmail,\n\t\tUserPreferencesDisMentionsCommentEmail,\n\t\tUserPreferencesHideCSNDesktopTask,\n\t\tUserPreferencesHideChatterOnboardingSplash,\n\t\tUserPreferencesHideSecondChatterOnboardingSplash,\n\t\tUserPreferencesDisCommentAfterLikeEmail,\n\t\tUserPreferencesDisableLikeEmail,\n\t\tUserPreferencesSortFeedByComment,\n\t\tUserPreferencesDisableMessageEmail,\n\t\tUserPreferencesDisableBookmarkEmail,\n\t\tUserPreferencesDisableSharePostEmail,\n\t\tUserPreferencesEnableAutoSubForFeeds,\n\t\tUserPreferencesDisableFileShareNotificationsForApi,\n\t\tUserPreferencesShowTitleToExternalUsers,\n\t\tUserPreferencesShowManagerToExternalUsers,\n\t\tUserPreferencesShowEmailToExternalUsers,\n\t\tUserPreferencesShowWorkPhoneToExternalUsers,\n\t\tUserPreferencesShowMobilePhoneToExternalUsers,\n\t\tUserPreferencesShowFaxToExternalUsers,\n\t\tUserPreferencesShowStreetAddressToExternalUsers,\n\t\tUserPreferencesShowCityToExternalUsers,\n\t\tUserPreferencesShowStateToExternalUsers,\n\t\tUserPreferencesShowPostalCodeToExternalUsers,\n\t\tUserPreferencesShowCountryToExternalUsers,\n\t\tUserPreferencesShowProfilePicToGuestUsers,\n\t\tUserPreferencesShowTitleToGuestUsers,\n\t\tUserPreferencesShowCityToGuestUsers,\n\t\tUserPreferencesShowStateToGuestUsers,\n\t\tUserPreferencesShowPostalCodeToGuestUsers,\n\t\tUserPreferencesShowCountryToGuestUsers,\n\t\tUserPreferencesPipelineViewHideHelpPopover,\n\t\tUserPreferencesHideS1BrowserUI,\n\t\tUserPreferencesDisableEndorsementEmail,\n\t\tUserPreferencesPathAssistantCollapsed,\n\t\tUserPreferencesCacheDiagnostics,\n\t\tUserPreferencesShowEmailToGuestUsers,\n\t\tUserPreferencesShowManagerToGuestUsers,\n\t\tUserPreferencesShowWorkPhoneToGuestUsers,\n\t\tUserPreferencesShowMobilePhoneToGuestUsers,\n\t\tUserPreferencesShowFaxToGuestUsers,\n\t\tUserPreferencesShowStreetAddressToGuestUsers,\n\t\tUserPreferencesLightningExperiencePreferred,\n\t\tUserPreferencesPreviewLightning,\n\t\tUserPreferencesHideEndUserOnboardingAssistantModal,\n\t\tUserPreferencesHideLightningMigrationModal,\n\t\tUserPreferencesHideSfxWelcomeMat,\n\t\tUserPreferencesHideBiggerPhotoCallout,\n\t\tUserPreferencesGlobalNavBarWTShown,\n\t\tUserPreferencesGlobalNavGridMenuWTShown,\n\t\tUserPreferencesCreateLEXAppsWTShown,\n\t\tUserPreferencesFavoritesWTShown,\n\t\tUserPreferencesRecordHomeSectionCollapseWTShown,\n\t\tUserPreferencesRecordHomeReservedWTShown,\n\t\tUserPreferencesFavoritesShowTopFavorites,\n\t\tUserPreferencesExcludeMailAppAttachments,\n\t\tUserPreferencesSuppressTaskSFXReminders,\n\t\tUserPreferencesSuppressEventSFXReminders,\n\t\tUserPreferencesPreviewCustomTheme,\n\t\tUserPreferencesHasCelebrationBadge,\n\t\tUserPreferencesUserDebugModePref,\n\t\tUserPreferencesNewLightningReportRunPageEnabled,\n\t\tContactId,\n\t\tAccountId,\n\t\tCallCenterId,\n\t\tExtension,\n\t\tFederationIdentifier,\n\t\tAboutMe,\n\t\tFullPhotoUrl,\n\t\tSmallPhotoUrl,\n\t\tIsExtIndicatorVisible,\n\t\tOutOfOfficeMessage,\n\t\tMediumPhotoUrl,\n\t\tDigestFrequency,\n\t\tDefaultGroupNotificationFrequency,\n\t\tLastViewedDate,\n\t\tLastReferencedDate,\n\t\tBannerPhotoUrl,\n\t\tSmallBannerPhotoUrl,\n\t\tMediumBannerPhotoUrl,\n\t\tIsProfilePhotoActive,\n\t\tet4ae5__Default_ET_Page__c,\n\t\tet4ae5__Default_MID__c,\n\t\tet4ae5__ExactTargetForAppExchangeAdmin__c,\n\t\tet4ae5__ExactTargetForAppExchangeUser__c,\n\t\tet4ae5__ExactTargetUsername__c,\n\t\tet4ae5__ExactTarget_OAuth_Token__c,\n\t\tet4ae5__ValidExactTargetAdmin__c,\n\t\tet4ae5__ValidExactTargetUser__c,\n\t\tChat_Display_Name__c,\n\t\tChat_Photo_Small__c,\n\t\tDialerID__c,\n\t\tExternal_Id__c,\n\t\tSightCall_UseCase_Id__c\n\t)) ~> UpsertOdsUser"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimLanguage')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Campaign",
                                "type": "DatasetReference"
                            },
                            "name": "ODSCampaign"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimLanguage",
                                "type": "DatasetReference"
                            },
                            "name": "DimLanguageSource"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimLanguage",
                                "type": "DatasetReference"
                            },
                            "name": "DimLanguage"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimLanguage",
                                "type": "DatasetReference"
                            },
                            "name": "InsertDimLanguage"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "DistinctLanguage"
                        },
                        {
                            "name": "AddCustomColumns"
                        },
                        {
                            "name": "SelectLanguage"
                        },
                        {
                            "name": "AlterRow1"
                        },
                        {
                            "name": "Exists"
                        },
                        {
                            "name": "FilterLastModifiedCampaign"
                        },
                        {
                            "name": "DoesNotExist"
                        },
                        {
                            "name": "AddDateColumns"
                        },
                        {
                            "name": "AddDateColumns1"
                        },
                        {
                            "name": "FilterNull"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tName as string,\n\t\tParentId as string,\n\t\tType as string,\n\t\tRecordTypeId as string,\n\t\tStatus as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tCurrencyIsoCode as string,\n\t\tExpectedRevenue as decimal(38,18),\n\t\tBudgetedCost as decimal(38,18),\n\t\tActualCost as decimal(38,18),\n\t\tExpectedResponse as decimal(38,18),\n\t\tNumberSent as decimal(38,18),\n\t\tIsActive as boolean,\n\t\tDescription as string,\n\t\tNumberOfLeads as integer,\n\t\tNumberOfConvertedLeads as integer,\n\t\tNumberOfContacts as integer,\n\t\tNumberOfResponses as integer,\n\t\tNumberOfOpportunities as integer,\n\t\tNumberOfWonOpportunities as integer,\n\t\tAmountAllOpportunities as decimal(38,18),\n\t\tAmountWonOpportunities as decimal(38,18),\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tCampaignMemberRecordTypeId as string,\n\t\tChannel__c as string,\n\t\tCompany__c as string,\n\t\tExternal_Id__c as string,\n\t\tLanguage__c as string,\n\t\tSourceCode_L__c as string,\n\t\tPromo_Code__c as string,\n\t\tTollFreeNumber__c as string,\n\t\tLocation__c as string,\n\t\tMedia__c as string,\n\t\tFormat__c as string,\n\t\tAudience__c as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSCampaign\nsource(output(\n\t\tLanguageKey as integer,\n\t\tLanguageName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimLanguageSource\nFilterLastModifiedCampaign aggregate(groupBy(Language__c),\n\teach(match(name!='Language__c'), $$ = first($$))) ~> DistinctLanguage\nFilterNull derive(isActive = 1,\n\t\tsourcesystem = 'Salesforce',\n\t\tHash = sha2(256, Language__c)) ~> AddCustomColumns\nDistinctLanguage select(mapColumn(\n\t\tLanguage__c\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLanguage\nAddDateColumns alterRow(updateIf(true())) ~> AlterRow1\nAddCustomColumns, DimLanguageSource exists(AddCustomColumns@Hash == DimLanguageSource@Hash,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists\nODSCampaign filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1)) ~> FilterLastModifiedCampaign\nAddCustomColumns, DimLanguageSource exists(AddCustomColumns@Hash == DimLanguageSource@Hash,\n\tnegate:true,\n\tbroadcast: 'auto')~> DoesNotExist\nExists derive(DWH_LastUpdateDate = currentTimestamp()) ~> AddDateColumns\nDoesNotExist derive(DWH_LastUpdateDate = currentTimestamp(),\n\t\tDWH_LoadDate = currentTimestamp()) ~> AddDateColumns1\nSelectLanguage filter(!isNull(Language__c) && !(trim(Language__c) == 'Unknown')) ~> FilterNull\nAlterRow1 sink(allowSchemaDrift: false,\n\tvalidateSchema: true,\n\tinput(\n\t\tLanguageKey as integer,\n\t\tLanguageName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['LanguageName'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tHash,\n\t\tLanguageName = Language__c,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive = isActive,\n\t\tSourceSystem = sourcesystem\n\t)) ~> DimLanguage\nAddDateColumns1 sink(allowSchemaDrift: false,\n\tvalidateSchema: true,\n\tinput(\n\t\tLanguageKey as integer,\n\t\tLanguageName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tHash,\n\t\tLanguageName = Language__c,\n\t\tDWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive = isActive,\n\t\tSourceSystem = sourcesystem\n\t)) ~> InsertDimLanguage"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimAppointmentType')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_ServiceAppointment",
                                "type": "DatasetReference"
                            },
                            "name": "ODSServiceAppointment"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimAppointmentType",
                                "type": "DatasetReference"
                            },
                            "name": "AppointmentType"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimAppointmentType",
                                "type": "DatasetReference"
                            },
                            "name": "InsertCompany"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SelectHash"
                        },
                        {
                            "name": "FilterLastModified"
                        },
                        {
                            "name": "SelectAppointmentType"
                        },
                        {
                            "name": "DistinctAppointmentType"
                        },
                        {
                            "name": "CustomeColumns"
                        },
                        {
                            "name": "Hash"
                        },
                        {
                            "name": "DoesNotExist"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\tId as string,\n\t\tOwnerId as string,\n\t\tIsDeleted as boolean,\n\t\tAppointmentNumber as string,\n\t\tCurrencyIsoCode as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tParentRecordId as string,\n\t\tParentRecordType as string,\n\t\tAccountId as string,\n\t\tWorkTypeId as string,\n\t\tContactId as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tStateCode as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(38,18),\n\t\tLongitude as decimal(38,18),\n\t\tGeocodeAccuracy as string,\n\t\tDescription as string,\n\t\tEarliestStartTime as timestamp,\n\t\tDueDate as timestamp,\n\t\tDuration as decimal(38,18),\n\t\tArrivalWindowStartTime as timestamp,\n\t\tArrivalWindowEndTime as timestamp,\n\t\tStatus as string,\n\t\tSchedStartTime as timestamp,\n\t\tSchedEndTime as timestamp,\n\t\tActualStartTime as timestamp,\n\t\tActualEndTime as timestamp,\n\t\tActualDuration as decimal(38,18),\n\t\tDurationType as string,\n\t\tDurationInMinutes as decimal(38,18),\n\t\tServiceTerritoryId as string,\n\t\tSubject as string,\n\t\tParentRecordStatusCategory as string,\n\t\tStatusCategory as string,\n\t\tServiceNote as string,\n\t\tAppointmentType as string,\n\t\tEmail as string,\n\t\tPhone as string,\n\t\tCancellationReason as string,\n\t\tAdditionalInformation as string,\n\t\tComments as string,\n\t\tCenter_Type__c as string,\n\t\tExternal_Id__c as string,\n\t\tService_Appointment__c as string,\n\t\tWork_Type_Group__c as string,\n\t\tAppointment_Type__c as string,\n\t\tMeeting_Platform_Id__c as string,\n\t\tMeeting_Platform__c as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSServiceAppointment\nsource(output(\n\t\tAppointmentTypeKey as integer,\n\t\tAppointmentTypeName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> AppointmentType\nAppointmentType select(mapColumn(\n\t\tHash\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectHash\nODSServiceAppointment filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(AppointmentType)) ~> FilterLastModified\nFilterLastModified select(mapColumn(\n\t\tAppointmentType\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectAppointmentType\nSelectAppointmentType aggregate(groupBy(AppointmentType),\n\teach(match(name!='AppointmentType'), $$ = first($$))) ~> DistinctAppointmentType\nDistinctAppointmentType derive(SourceSystem = 'Salesforce',\n\t\tIsActive = toBoolean('1'),\n\t\tDWH_LoadDate = currentTimestamp(),\n\t\tDWH_LastUpdateDate = currentTimestamp(),\n\t\tAppointmentTypeName = initCap(AppointmentType)) ~> CustomeColumns\nCustomeColumns derive(Hash = sha2(256, concat(AppointmentTypeName, SourceSystem))) ~> Hash\nHash, SelectHash exists(Hash@Hash == SelectHash@Hash,\n\tnegate:true,\n\tbroadcast: 'auto')~> DoesNotExist\nDoesNotExist sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tAppointmentTypeKey as integer,\n\t\tAppointmentTypeName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tAppointmentTypeName,\n\t\tHash,\n\t\tDWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive,\n\t\tSourceSystem\n\t)) ~> InsertCompany"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimCompany')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/Marketing"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ASA_ODS_MA_Television",
                                "type": "DatasetReference"
                            },
                            "name": "ODSTelevision"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCompany",
                                "type": "DatasetReference"
                            },
                            "name": "SourceDimCompany"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_ODS_Datorama_SocialMedia",
                                "type": "DatasetReference"
                            },
                            "name": "ODSDatorama"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCompany",
                                "type": "DatasetReference"
                            },
                            "name": "InsertDimCompany"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCompany",
                                "type": "DatasetReference"
                            },
                            "name": "UpdateDimCompany"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SelectCompany"
                        },
                        {
                            "name": "FilterLasUploadAndNulls"
                        },
                        {
                            "name": "AddCustomColumns"
                        },
                        {
                            "name": "Exists"
                        },
                        {
                            "name": "DoesNotExist"
                        },
                        {
                            "name": "AddDatesColumns"
                        },
                        {
                            "name": "AllowUpdate"
                        },
                        {
                            "name": "AddDateColumn"
                        },
                        {
                            "name": "DistinctCompany"
                        },
                        {
                            "name": "FilterNullAndLastUploaded"
                        },
                        {
                            "name": "SplitDataStream"
                        },
                        {
                            "name": "AddCustomColumnsDatorama"
                        },
                        {
                            "name": "DistinctCompanyDatorama"
                        },
                        {
                            "name": "Union"
                        },
                        {
                            "name": "CleanCompany"
                        },
                        {
                            "name": "AddSocialMediaHash"
                        },
                        {
                            "name": "AddTelevisionHash"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\ttransactionid as string,\n\t\tcalendardateest as string,\n\t\tcalendartimeest as string,\n\t\tbroadcastdateest as string,\n\t\tlocalairtime as string,\n\t\tpurpose as string,\n\t\tmethod as string,\n\t\tchannel as string,\n\t\tmedium as string,\n\t\tcompany as string,\n\t\tlocation as string,\n\t\tbudgettype as string,\n\t\tbudgetname as string,\n\t\tsource as string,\n\t\taffiliate as string,\n\t\tstation as string,\n\t\tshow as string,\n\t\tcontenttype as string,\n\t\tcontent as string,\n\t\tcampaigntype as string,\n\t\tcampaign as string,\n\t\tisci as string,\n\t\tmasternumber as string,\n\t\ttfn as string,\n\t\tsourcecode as string,\n\t\tpromocode as string,\n\t\turl as string,\n\t\tagency as string,\n\t\tregion as string,\n\t\tdmacode as string,\n\t\tdmaname as string,\n\t\taudiene as string,\n\t\ttactic as string,\n\t\tplacement as string,\n\t\tformat as string,\n\t\tlanguage as string,\n\t\tgrossspend as string,\n\t\tnetspend as string,\n\t\t{impressions18-65} as string,\n\t\tgrp as string,\n\t\tspots as string,\n\t\tlogtype as string,\n\t\t{impressions35+} as string,\n\t\ttrp as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tFilePath as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSTelevision\nsource(output(\n\t\tCompanyKey as integer,\n\t\tCompanyName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SourceDimCompany\nsource(output(\n\t\tDataStream as string,\n\t\tCRMDay as date,\n\t\tCampaignAdvertiserID as string,\n\t\tCampaignAdvertaiser as string,\n\t\tMediaCost as decimal(18,0),\n\t\tClicks as integer,\n\t\tFilePath as string,\n\t\tDWH_LoadDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSDatorama\nFilterLasUploadAndNulls select(mapColumn(\n\t\tcompany\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectCompany\nODSTelevision filter(toDate(DWH_LoadDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(DWH_LoadDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(company)) ~> FilterLasUploadAndNulls\nDistinctCompany derive(SourceSystem = 'Marketing',\n\t\tIsActive = toBoolean('1'),\n\t\tCompanyName = initCap(trim(company))) ~> AddCustomColumns\nUnion, SourceDimCompany exists(Union@CompanyName == SourceDimCompany@CompanyName,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists\nUnion, SourceDimCompany exists(Union@CompanyName == SourceDimCompany@CompanyName,\n\tnegate:true,\n\tbroadcast: 'auto')~> DoesNotExist\nDoesNotExist derive(DWH_CreatedDate = currentTimestamp(),\n\t\tDWH_LastUpdateDate = currentTimestamp()) ~> AddDatesColumns\nExists alterRow(updateIf(true())) ~> AllowUpdate\nAllowUpdate derive(DWH_LastUpdateDate = currentTimestamp()) ~> AddDateColumn\nCleanCompany aggregate(groupBy(company),\n\teach(match(name!='company'), $$ = first($$))) ~> DistinctCompany\nDistinctCompanyDatorama filter(toDate(DWH_LoadDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(DWH_LoadDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(CompanyName)) ~> FilterNullAndLastUploaded\nODSDatorama derive(CompanyName = initCap(trim(split(DataStream, '|')[3]))) ~> SplitDataStream\nFilterNullAndLastUploaded derive(IsActive = toBoolean('1'),\n\t\tSourceSystem = 'SocialMedia') ~> AddCustomColumnsDatorama\nSplitDataStream aggregate(groupBy(CompanyName),\n\teach(match(name!='CompanyName'), $$ = first($$))) ~> DistinctCompanyDatorama\nAddTelevisionHash, AddCustomColumnsDatorama union(byName: true)~> Union\nSelectCompany derive(company = trim(initCap(lower(company)))) ~> CleanCompany\nAddCustomColumnsDatorama derive(Hash = sha2(256, concat(CompanyName,SourceSystem))) ~> AddSocialMediaHash\nAddCustomColumns derive(Hash = sha2(256, concat(company,SourceSystem))) ~> AddTelevisionHash\nAddDatesColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCompanyKey as integer,\n\t\tCompanyName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCompanyName,\n\t\tDWH_CreatedDate,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive,\n\t\tSourceSystem,\n\t\tHash\n\t)) ~> InsertDimCompany\nAddDateColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCompanyKey as integer,\n\t\tCompanyName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['CompanyName'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCompanyName,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive,\n\t\tSourceSystem,\n\t\tHash\n\t)) ~> UpdateDimCompany"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ODSOpportunity')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/ODS"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_SF_Opportunity",
                                "type": "DatasetReference"
                            },
                            "name": "OpportunityParquet"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Opportunity",
                                "type": "DatasetReference"
                            },
                            "name": "UpsertOdsOpportunity"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AllowUpsert"
                        }
                    ],
                    "script": "source(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tAccountId as string,\n\t\tRecordTypeId as string,\n\t\tName as string,\n\t\tDescription as string,\n\t\tStageName as string,\n\t\tAmount as decimal(38,18),\n\t\tProbability as decimal(38,18),\n\t\tCloseDate as timestamp,\n\t\tType as string,\n\t\tNextStep as string,\n\t\tLeadSource as string,\n\t\tIsClosed as boolean,\n\t\tIsWon as boolean,\n\t\tForecastCategory as string,\n\t\tForecastCategoryName as string,\n\t\tCurrencyIsoCode as string,\n\t\tCampaignId as string,\n\t\tHasOpportunityLineItem as boolean,\n\t\tPricebook2Id as string,\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tFiscalQuarter as integer,\n\t\tFiscalYear as integer,\n\t\tFiscal as string,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tSyncedQuoteId as string,\n\t\tContractId as string,\n\t\tHasOpenActivity as boolean,\n\t\tHasOverdueTask as boolean,\n\t\tIqScore as integer,\n\t\tBudget_Confirmed__c as boolean,\n\t\tDiscovery_Completed__c as boolean,\n\t\tROI_Analysis_Completed__c as boolean,\n\t\tAppointment_Source__c as string,\n\t\tLoss_Reason__c as string,\n\t\tCancellation_Reason__c as string,\n\t\tHair_Loss_Experience__c as string,\n\t\tHair_Loss_Family__c as string,\n\t\tHair_Loss_Or_Volume__c as string,\n\t\tHair_Loss_Product_Other__c as string,\n\t\tHair_Loss_Product_Used__c as string,\n\t\tHair_Loss_Spot__c as string,\n\t\tIP_Address__c as string,\n\t\tLudwig_Scale__c as string,\n\t\tNorwood_Scale__c as string,\n\t\tReferral_Code_Expiration_Date__c as timestamp,\n\t\tReferral_Code__c as string,\n\t\tService_Territory__c as string,\n\t\tSource_Code__c as string,\n\t\tSubmitted_for_Approval__c as boolean,\n\t\tAmmount__c as decimal(38,18),\n\t\tGCLID__c as string,\n\t\tPromo_Code__c as string,\n\t\tSolutionOffered__c as string,\n\t\tApprover__c as string,\n\t\tEmail__c as string,\n\t\tGoals_Expectations__c as string,\n\t\tHow_many_times_a_week_do_you_think__c as string,\n\t\tHow_much_time_a_week_do_you_spend__c as string,\n\t\tMobile__c as string,\n\t\tOpportunity_Owner__c as string,\n\t\tOther_Reason__c as string,\n\t\tOwner__c as string,\n\t\tPhone__c as string,\n\t\tWhat_are_your_main_concerns_today__c as string,\n\t\tWhat_else_would_be_helpful_for_your__c as string,\n\t\tWhat_methods_have_you_used_or_currently__c as string,\n\t\tRefersionLogId__c as string,\n\t\tCommission_Paid__c as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> OpportunityParquet\nOpportunityParquet alterRow(upsertIf(true())) ~> AllowUpsert\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tAccountId as string,\n\t\tRecordTypeId as string,\n\t\tIsPrivate as boolean,\n\t\tName as string,\n\t\tDescription as string,\n\t\tStageName as string,\n\t\tAmount as decimal(38,18),\n\t\tProbability as decimal(38,18),\n\t\tExpectedRevenue as decimal(38,18),\n\t\tTotalOpportunityQuantity as decimal(38,18),\n\t\tCloseDate as timestamp,\n\t\tType as string,\n\t\tNextStep as string,\n\t\tLeadSource as string,\n\t\tIsClosed as boolean,\n\t\tIsWon as boolean,\n\t\tForecastCategory as string,\n\t\tForecastCategoryName as string,\n\t\tCurrencyIsoCode as string,\n\t\tCampaignId as string,\n\t\tHasOpportunityLineItem as boolean,\n\t\tPricebook2Id as string,\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tFiscalQuarter as integer,\n\t\tFiscalYear as integer,\n\t\tFiscal as string,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tSyncedQuoteId as string,\n\t\tContractId as string,\n\t\tHasOpenActivity as boolean,\n\t\tHasOverdueTask as boolean,\n\t\tBudget_Confirmed__c as boolean,\n\t\tDiscovery_Completed__c as boolean,\n\t\tROI_Analysis_Completed__c as boolean,\n\t\tLoss_Reason__c as string,\n\t\tAppointment_Source__c as string,\n\t\tHair_Loss_Experience__c as string,\n\t\tHair_Loss_Family__c as string,\n\t\tHair_Loss_Or_Volume__c as string,\n\t\tHair_Loss_Product_Other__c as string,\n\t\tHair_Loss_Product_Used__c as string,\n\t\tHair_Loss_Spot__c as string,\n\t\tIP_Address__c as string,\n\t\tLudwig_Scale__c as string,\n\t\tNorwood_Scale__c as string,\n\t\tReferral_Code_Expiration_Date__c as timestamp,\n\t\tReferral_Code__c as string,\n\t\tSolution_Offered__c as string,\n\t\tSource_Code__c as string,\n\t\tService_Territory__c as string,\n\t\tGCLID__c as string,\n\t\tPromo_Code__c as string,\n\t\tAmmount__c as decimal(38,18)\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Id'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tId,\n\t\tIsDeleted,\n\t\tAccountId,\n\t\tRecordTypeId,\n\t\tName,\n\t\tDescription,\n\t\tStageName,\n\t\tAmount,\n\t\tProbability,\n\t\tCloseDate,\n\t\tType,\n\t\tNextStep,\n\t\tLeadSource,\n\t\tIsClosed,\n\t\tIsWon,\n\t\tForecastCategory,\n\t\tForecastCategoryName,\n\t\tCurrencyIsoCode,\n\t\tCampaignId,\n\t\tHasOpportunityLineItem,\n\t\tPricebook2Id,\n\t\tOwnerId,\n\t\tCreatedDate,\n\t\tCreatedById,\n\t\tLastModifiedDate,\n\t\tLastModifiedById,\n\t\tSystemModstamp,\n\t\tLastActivityDate,\n\t\tFiscalQuarter,\n\t\tFiscalYear,\n\t\tFiscal,\n\t\tLastViewedDate,\n\t\tLastReferencedDate,\n\t\tSyncedQuoteId,\n\t\tContractId,\n\t\tHasOpenActivity,\n\t\tHasOverdueTask,\n\t\tBudget_Confirmed__c,\n\t\tDiscovery_Completed__c,\n\t\tROI_Analysis_Completed__c,\n\t\tLoss_Reason__c,\n\t\tAppointment_Source__c,\n\t\tHair_Loss_Experience__c,\n\t\tHair_Loss_Family__c,\n\t\tHair_Loss_Or_Volume__c,\n\t\tHair_Loss_Product_Other__c,\n\t\tHair_Loss_Product_Used__c,\n\t\tHair_Loss_Spot__c,\n\t\tIP_Address__c,\n\t\tLudwig_Scale__c,\n\t\tNorwood_Scale__c,\n\t\tReferral_Code_Expiration_Date__c,\n\t\tReferral_Code__c,\n\t\tSolution_Offered__c = SolutionOffered__c,\n\t\tSource_Code__c,\n\t\tService_Territory__c,\n\t\tGCLID__c,\n\t\tPromo_Code__c,\n\t\tAmmount__c\n\t)) ~> UpsertOdsOpportunity"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/FactMarketingActivity_OTT')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/Marketing"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_MA_OTT",
                                "type": "DatasetReference"
                            },
                            "name": "OTTODS"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimAgency",
                                "type": "DatasetReference"
                            },
                            "name": "DimAgency"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimSource",
                                "type": "DatasetReference"
                            },
                            "name": "DimSource"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCompany",
                                "type": "DatasetReference"
                            },
                            "name": "DimCompany"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimDate",
                                "type": "DatasetReference"
                            },
                            "name": "DimDate"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimMedium",
                                "type": "DatasetReference"
                            },
                            "name": "DimMedium"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_FactMarketingActivity",
                                "type": "DatasetReference"
                            },
                            "name": "FactMarketingActivity"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FilterLastUpdate"
                        },
                        {
                            "name": "MarketingColumns"
                        },
                        {
                            "name": "FilterAgency"
                        },
                        {
                            "name": "FilterSource"
                        },
                        {
                            "name": "JoinAgency"
                        },
                        {
                            "name": "JoinSource"
                        },
                        {
                            "name": "FilterCompany"
                        },
                        {
                            "name": "JoinCompany"
                        },
                        {
                            "name": "FinalColumns"
                        },
                        {
                            "name": "JoinDate"
                        },
                        {
                            "name": "AllowUpsert"
                        },
                        {
                            "name": "JoinMedium"
                        },
                        {
                            "name": "FilterMedium"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer,\n\tFilePath as string\n}\nsource(output(\n\t\tDate as string,\n\t\tAdvertiser as string,\n\t\tAdvertiserCurrencyCode as string,\n\t\tCampaign as string,\n\t\tAdGroup as string,\n\t\tCreative as string,\n\t\tImpressions as string,\n\t\tCNSpend as string,\n\t\tFilePath as string,\n\t\tDWH_LoadDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> OTTODS\nsource(output(\n\t\tAgencyKey as integer,\n\t\tHash as string,\n\t\tAgencyName as string,\n\t\tAgencyAddress as string,\n\t\tAgencyDomain as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as integer,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimAgency\nsource(output(\n\t\tSourceKey as integer,\n\t\tSourceName as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimSource\nsource(output(\n\t\tCompanyKey as integer,\n\t\tCompanyName as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimCompany\nsource(output(\n\t\tDateKey as integer,\n\t\tFullDate as date,\n\t\tISODate as string,\n\t\tYearNumber as integer,\n\t\tYearQuarterNumber as integer,\n\t\tYearMonthNumber as integer,\n\t\tYearQuarterMonthNumber as integer,\n\t\tYearWeekNumber as integer,\n\t\tDateName as string,\n\t\tWeekName as string,\n\t\tWeekNameWithYear as string,\n\t\tWeekShortName as string,\n\t\tWeekShortNameWithYear as string,\n\t\tWeekNumber as integer,\n\t\tFirstDateOfWeek as date,\n\t\tLastDateOfWeek as date,\n\t\tDayOfWeek as integer,\n\t\tDayOfWeekName as string,\n\t\tIsWeekday as boolean,\n\t\tIsWeekend as boolean,\n\t\tMonthName as string,\n\t\tMonthNameWithYear as string,\n\t\tMonthShortName as string,\n\t\tMonthShortNameWithYear as string,\n\t\tMonthNumber as integer,\n\t\tFirstDateOfMonth as date,\n\t\tLastDateOfMonth as date,\n\t\tDayOfMonth as integer,\n\t\tDayOfMonthName as string,\n\t\tIsLastDayOfMonth as boolean,\n\t\tQuarterName as string,\n\t\tQuarterNameWithYear as string,\n\t\tQuarterShortName as string,\n\t\tQuarterShortNameWithYear as string,\n\t\tQuarterNumber as integer,\n\t\tFirstDateOfQuarter as date,\n\t\tLastDateOfQuarter as date,\n\t\tDayOfQuarter as integer,\n\t\tDayOfQuarterName as string,\n\t\tHalfName as string,\n\t\tHalfNameWithYear as string,\n\t\tHalfShortName as string,\n\t\tHalfShortNameWithYear as string,\n\t\tHalfNumber as integer,\n\t\tYearHalfNumber as integer,\n\t\tFirstDateOfHalf as date,\n\t\tLastDateOfHalf as date,\n\t\tDayOfHalf as integer,\n\t\tDayOfHalfName as string,\n\t\tYearName as string,\n\t\tYearShortName as string,\n\t\tFirstDateOfYear as date,\n\t\tLastDateOfYear as date,\n\t\tDayOfYear as integer,\n\t\tDayOfYearName as string,\n\t\tCalendarQuarter as integer,\n\t\tCalendarYear as integer,\n\t\tCalendarYearMonth as string,\n\t\tCalendarYearQtr as string,\n\t\tFiscalYear as integer,\n\t\tFiscalWeek as integer,\n\t\tFiscalPeriod as integer,\n\t\tFiscalMonth as integer,\n\t\tFiscalQuarter as integer,\n\t\tFiscalYearFiscalWeek as integer,\n\t\tFiscalYearFiscalPeriod as integer,\n\t\tFiscalYearFiscalMonth as integer,\n\t\tFiscalYearFiscalQuarter as integer,\n\t\tFiscalYearFiscalQuarterFiscalMonth as integer,\n\t\tFiscalYearName as string,\n\t\tFiscalYearLongName as string,\n\t\tFiscalYearShortName as string,\n\t\tFiscalQuarterName as string,\n\t\tFiscalQuarterLongName as string,\n\t\tFiscalQuarterNameWithYear as string,\n\t\tFiscalQuarterLongNameWithYear as string,\n\t\tFiscalQuarterShortName as string,\n\t\tFiscalQuarterShortNameWithYear as string,\n\t\tFiscalMonthName as string,\n\t\tFiscalMonthNameWithYear as string,\n\t\tFiscalMonthShortName as string,\n\t\tFiscalMonthShortNameWithYear as string,\n\t\tFiscalMonthCalendarShortName as string,\n\t\tFiscalMonthCalendarShortNameWithYear as string,\n\t\tFiscalWeekName as string,\n\t\tFiscalWeekLongName as string,\n\t\tFiscalWeekNameWithYear as string,\n\t\tFiscalWeekLongNameWithYear as string,\n\t\tFiscalWeekShortName as string,\n\t\tFiscalWeekShortNameWithYear as string,\n\t\tFiscalPeriodName as string,\n\t\tFiscalPeriodLongName as string,\n\t\tFiscalPeriodNameWithYear as string,\n\t\tFiscalPeriodLongNameWithYear as string,\n\t\tFiscalPeriodShortName as string,\n\t\tFiscalPeriodShortNameWithYear as string,\n\t\tCummWorkdays as integer,\n\t\tMonthWorkdays as integer,\n\t\tMonthWorkdaysTotal as integer,\n\t\tIsHoliday as boolean,\n\t\tMonthOfQuarter as integer,\n\t\tBroadcastYearBroadcastQuarter as integer,\n\t\tBroadcastYearBroadcastMonth as integer,\n\t\tBroadcastYearBroadcastWeek as integer,\n\t\tBroadcastYearQtrMonthWeekDay as integer,\n\t\tBroadcastYearQtrMonth as integer,\n\t\tBroadcastYearShortName as string,\n\t\tBroadcastYearLongName as string,\n\t\tBroadcastYeartName as string,\n\t\tBroadcastQuarterName as string,\n\t\tBroadcastWeekName as string,\n\t\tBroadcastDayName as string,\n\t\tmsrepl_tran_version as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimDate\nsource(output(\n\t\tMediumKey as integer,\n\t\tMediumName as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimMedium\nOTTODS filter(iif($DaysToLoad == -1,  like(FilePath, concat('%', $FilePath)), toDate(DWH_LoadDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(DWH_LoadDate) <= addDays(toDate(currentTimestamp()), -1))) ~> FilterLastUpdate\nFilterLastUpdate derive(Agency = 'Intermedia',\n\t\tCompany = initCap(replace(Advertiser, ' ', '')),\n\t\tSource = initCap(trim(Campaign)),\n\t\tGrossSpend = toDecimal(CNSpend),\n\t\tImpressions = toInteger(Impressions),\n\t\tNetSpend = toDecimal(CNSpend)*1.10,\n\t\tFile = FilePath,\n\t\tMedium = 'OTT',\n\t\tDWH_LoadDate = DWH_LoadDate,\n\t\tFactDate = toTimestamp(concat(Date, ' ', '00:00:00'))) ~> MarketingColumns\nDimAgency filter(SourceSystem == 'Salesforce') ~> FilterAgency\nDimSource filter(SourceSystem == 'Marketing') ~> FilterSource\nJoinDate, FilterAgency join(lower(trim(Agency)) == lower(trim(AgencyName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinAgency\nJoinAgency, FilterSource join(lower(trim(Source)) == lower(trim(SourceName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSource\nDimCompany filter(SourceSystem == 'Marketing') ~> FilterCompany\nJoinSource, FilterCompany join(lower(trim(Company)) == lower(trim(CompanyName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCompany\nJoinCompany derive(AgencyKey = coalesce(AgencyKey, -1),\n\t\tSourceKey = coalesce(SourceKey, -1),\n\t\tCompanyKey = coalesce(CompanyKey, -1),\n\t\tHash = sha2(256,concat(Date,Agency,Company,Source, Creative)),\n\t\tFactDateKey = DateKey,\n\t\tDMAKey = -1,\n\t\tAudienceKey = -1,\n\t\tChannelKey = -1,\n\t\tFormatKey = -1,\n\t\tTacticKey = -1,\n\t\tMediumKey = coalesce(MediumKey, -1),\n\t\tPurposeKey = -1,\n\t\tMethodKey = -1,\n\t\tBudgetTypeKey = -1,\n\t\tLocationKey = -1,\n\t\tLanguageKey = -1,\n\t\tCampaignKey = -1,\n\t\tMedium = Medium) ~> FinalColumns\nJoinMedium, DimDate join(toDate(Date) == FullDate,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDate\nFinalColumns alterRow(upsertIf(true())) ~> AllowUpsert\nMarketingColumns, FilterMedium join(lower(trim(Medium)) == lower(trim(MediumName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinMedium\nDimMedium filter(SourceSystem =='Marketing') ~> FilterMedium\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Hash'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFactDateKey,\n\t\tFactDate,\n\t\tAgencyName = Agency,\n\t\tFile,\n\t\tGrossSpend,\n\t\tNetSpend,\n\t\tDMAkey = DMAKey,\n\t\tAgencyKey,\n\t\tAgency,\n\t\tAudienceKey,\n\t\tChannelKey,\n\t\tFormatKey,\n\t\tTacticKey,\n\t\tSourceKey,\n\t\tSource,\n\t\tMediumKey,\n\t\tPurposeKey,\n\t\tMethodKey,\n\t\tBudgetTypeKey,\n\t\tCampaignKey,\n\t\tCompanyKey,\n\t\tCompany,\n\t\tLocationKey,\n\t\tLanguageKey,\n\t\tDWH_LoadDate = MarketingColumns@DWH_LoadDate,\n\t\tHash,\n\t\tImpressions,\n\t\tMedium\n\t)) ~> FactMarketingActivity"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ODS_MA_Havas')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "MarketingAgencies/ODS"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_MA_Havas",
                                "type": "DatasetReference"
                            },
                            "name": "HavasParquet"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_ODS_MA_Television",
                                "type": "DatasetReference"
                            },
                            "name": "ODSTelevision"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FilterNulls"
                        },
                        {
                            "name": "SelectColumns"
                        },
                        {
                            "name": "AddCalculateColumns"
                        }
                    ],
                    "script": "parameters{\n\tFilePath as string\n}\nsource(output(\n\t\ttransactionid as string,\n\t\tcalendardateest as string,\n\t\tcalendartimeest as string,\n\t\tbroadcastdateest as string,\n\t\tlocalairtime as string,\n\t\tpurpose as string,\n\t\tmethod as string,\n\t\tchannel as string,\n\t\tmedium as string,\n\t\tcompany as string,\n\t\tlocation as string,\n\t\tbudgettype as string,\n\t\tbudgetname as string,\n\t\tsource as string,\n\t\taffiliate as string,\n\t\tstation as string,\n\t\tshow as string,\n\t\tcontenttype as string,\n\t\tcontent as string,\n\t\tcampaigntype as string,\n\t\tcampaign as string,\n\t\tisci as string,\n\t\tmasternumber as string,\n\t\ttfn as string,\n\t\tsourcecode as string,\n\t\tpromocode as string,\n\t\turl as string,\n\t\tagency as string,\n\t\tregion as string,\n\t\tdmacode as string,\n\t\tdmaname as string,\n\t\taudience as string,\n\t\ttactic as string,\n\t\tplacement as string,\n\t\tformat as string,\n\t\tlanguage as string,\n\t\tgrossspend as string,\n\t\tnetspend as string,\n\t\t{[impressions18-65]} as string,\n\t\tgrp as string,\n\t\tspots as string,\n\t\tlogtype as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> HavasParquet\nHavasParquet filter(!isNull(transactionid)) ~> FilterNulls\nFilterNulls select(mapColumn(\n\t\ttransactionid,\n\t\tcalendardateest,\n\t\tcalendartimeest,\n\t\tbroadcastdateest,\n\t\tlocalairtime,\n\t\tpurpose,\n\t\tmethod,\n\t\tchannel,\n\t\tmedium,\n\t\tcompany,\n\t\tlocation,\n\t\tbudgettype,\n\t\tbudgetname,\n\t\tsource,\n\t\taffiliate,\n\t\tstation,\n\t\tshow,\n\t\tcontenttype,\n\t\tcontent,\n\t\tcampaigntype,\n\t\tcampaign,\n\t\tisci,\n\t\tmasternumber,\n\t\ttfn,\n\t\tsourcecode,\n\t\tpromocode,\n\t\turl,\n\t\tagency,\n\t\tregion,\n\t\tdmacode,\n\t\tdmaname,\n\t\taudience,\n\t\ttactic,\n\t\tplacement,\n\t\tformat,\n\t\tlanguage,\n\t\tgrossspend,\n\t\tnetspend,\n\t\t{impressions18-65} = {[impressions18-65]},\n\t\tgrp,\n\t\tspots,\n\t\tlogtype\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSelectColumns derive(DWH_LoadDate = currentTimestamp(),\n\t\tFilePath = $FilePath) ~> AddCalculateColumns\nAddCalculateColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\ttransactionid as string,\n\t\tcalendardateest as string,\n\t\tcalendartimeest as string,\n\t\tbroadcastdateest as string,\n\t\tlocalairtime as string,\n\t\tpurpose as string,\n\t\tmethod as string,\n\t\tchannel as string,\n\t\tmedium as string,\n\t\tcompany as string,\n\t\tlocation as string,\n\t\tbudgettype as string,\n\t\tbudgetname as string,\n\t\tsource as string,\n\t\taffiliate as string,\n\t\tstation as string,\n\t\tshow as string,\n\t\tcontenttype as string,\n\t\tcontent as string,\n\t\tcampaigntype as string,\n\t\tcampaign as string,\n\t\tisci as string,\n\t\tmasternumber as string,\n\t\ttfn as string,\n\t\tsourcecode as string,\n\t\tpromocode as string,\n\t\turl as string,\n\t\tagency as string,\n\t\tregion as string,\n\t\tdmacode as string,\n\t\tdmaname as string,\n\t\taudiene as string,\n\t\ttactic as string,\n\t\tplacement as string,\n\t\tformat as string,\n\t\tlanguage as string,\n\t\tgrossspend as string,\n\t\tnetspend as string,\n\t\t{impressions18-65} as string,\n\t\tgrp as string,\n\t\tspots as string,\n\t\tlogtype as string,\n\t\t{impressions35+} as string,\n\t\ttrp as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tFilePath as string,\n\t\tCADSpend as decimal(19,4),\n\t\tCADPrice as decimal(19,4)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\ttransactionid,\n\t\tcalendardateest,\n\t\tcalendartimeest,\n\t\tbroadcastdateest,\n\t\tlocalairtime,\n\t\tpurpose,\n\t\tmethod,\n\t\tchannel,\n\t\tmedium,\n\t\tcompany,\n\t\tlocation,\n\t\tbudgettype,\n\t\tbudgetname,\n\t\tsource,\n\t\taffiliate,\n\t\tstation,\n\t\tshow,\n\t\tcontenttype,\n\t\tcontent,\n\t\tcampaigntype,\n\t\tcampaign,\n\t\tisci,\n\t\tmasternumber,\n\t\ttfn,\n\t\tsourcecode,\n\t\tpromocode,\n\t\turl,\n\t\tagency,\n\t\tregion,\n\t\tdmacode,\n\t\tdmaname,\n\t\taudiene = audience,\n\t\ttactic,\n\t\tplacement,\n\t\tformat,\n\t\tlanguage,\n\t\tgrossspend,\n\t\tnetspend,\n\t\t{impressions18-65},\n\t\tgrp,\n\t\tspots,\n\t\tlogtype,\n\t\tDWH_LoadDate,\n\t\tFilePath\n\t)) ~> ODSTelevision"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CNCT_lkpTimeZone')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "CONNECT"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_CNCT_lkpTimeZone",
                                "type": "DatasetReference"
                            },
                            "name": "CNCTlkpTimeZone"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_lkpTimeZone",
                                "type": "DatasetReference"
                            },
                            "name": "ODSlkpTimeZone"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AlterRow1"
                        }
                    ],
                    "script": "source(output(\n\t\tTimeZoneID as integer,\n\t\tTimeZoneSortOrder as integer,\n\t\tTimeZoneDescription as string,\n\t\tTimeZoneDescriptionShort as string,\n\t\tUTCOffset as integer,\n\t\tUsesDayLightSavingsFlag as boolean,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> CNCTlkpTimeZone\nCNCTlkpTimeZone alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tTimeZoneID as integer,\n\t\tTimeZoneSortOrder as integer,\n\t\tTimeZoneDescription as string,\n\t\tTimeZoneDescriptionShort as string,\n\t\tUTCOffset as integer,\n\t\tUsesDayLightSavingsFlag as boolean,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['TimeZoneID'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSlkpTimeZone"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimGender')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Account",
                                "type": "DatasetReference"
                            },
                            "name": "ODSAccount"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimGender",
                                "type": "DatasetReference"
                            },
                            "name": "DimGender"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_Gender",
                                "type": "DatasetReference"
                            },
                            "name": "ConectGender"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimGender",
                                "type": "DatasetReference"
                            },
                            "name": "InsertGender"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SelectHash"
                        },
                        {
                            "name": "FilterLastModified"
                        },
                        {
                            "name": "SelectGender"
                        },
                        {
                            "name": "DistinctGender"
                        },
                        {
                            "name": "CustomeColumns"
                        },
                        {
                            "name": "Hash"
                        },
                        {
                            "name": "DoesNotExist"
                        },
                        {
                            "name": "FilterLastUpdate"
                        },
                        {
                            "name": "SelectFields"
                        },
                        {
                            "name": "CustomColumn"
                        },
                        {
                            "name": "HashConect"
                        },
                        {
                            "name": "SelectFinalFields"
                        },
                        {
                            "name": "Union"
                        },
                        {
                            "name": "SelectFinalFieldsSalesforce"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tMasterRecordId as string,\n\t\tName as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tSalutation as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tType as string,\n\t\tRecordTypeId as string,\n\t\tParentId as string,\n\t\tBillingStreet as string,\n\t\tBillingCity as string,\n\t\tBillingState as string,\n\t\tBillingPostalCode as string,\n\t\tBillingCountry as string,\n\t\tBillingStateCode as string,\n\t\tBillingCountryCode as string,\n\t\tBillingLatitude as decimal(38,18),\n\t\tBillingLongitude as decimal(38,18),\n\t\tBillingGeocodeAccuracy as string,\n\t\tShippingStreet as string,\n\t\tShippingCity as string,\n\t\tShippingState as string,\n\t\tShippingPostalCode as string,\n\t\tShippingCountry as string,\n\t\tShippingStateCode as string,\n\t\tShippingCountryCode as string,\n\t\tShippingLatitude as decimal(38,18),\n\t\tShippingLongitude as decimal(38,18),\n\t\tShippingGeocodeAccuracy as string,\n\t\tPhone as string,\n\t\tWebsite as string,\n\t\tPhotoUrl as string,\n\t\tIndustry as string,\n\t\tNumberOfEmployees as integer,\n\t\tDescription as string,\n\t\tCurrencyIsoCode as string,\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tPersonContactId as string,\n\t\tIsPersonAccount as boolean,\n\t\tPersonMailingStreet as string,\n\t\tPersonMailingCity as string,\n\t\tPersonMailingState as string,\n\t\tPersonMailingPostalCode as string,\n\t\tPersonMailingCountry as string,\n\t\tPersonMailingStateCode as string,\n\t\tPersonMailingCountryCode as string,\n\t\tPersonMailingLatitude as decimal(38,18),\n\t\tPersonMailingLongitude as decimal(38,18),\n\t\tPersonMailingGeocodeAccuracy as string,\n\t\tPersonMobilePhone as string,\n\t\tPersonEmail as string,\n\t\tPersonTitle as string,\n\t\tPersonDepartment as string,\n\t\tPersonLastCURequestDate as timestamp,\n\t\tPersonLastCUUpdateDate as timestamp,\n\t\tPersonEmailBouncedReason as string,\n\t\tPersonEmailBouncedDate as timestamp,\n\t\tJigsaw as string,\n\t\tJigsawCompanyId as string,\n\t\tAccountSource as string,\n\t\tSicDesc as string,\n\t\tOperatingHoursId as string,\n\t\tActive__c as boolean,\n\t\tCompany__c as string,\n\t\tConectCreationDate__c as timestamp,\n\t\tConectLastUpdate__c as timestamp,\n\t\tExternal_Id__c as string,\n\t\tCount_Close_Won_Opportunities__c as decimal(38,18),\n\t\tCustomer_Status__c as string,\n\t\tDisc__pc as string,\n\t\tDoNotContact__pc as boolean,\n\t\tDoNotEmail__pc as boolean,\n\t\tDoNotMail__pc as boolean,\n\t\tDoNotText__pc as boolean,\n\t\tEthnicity__pc as string,\n\t\tGender__pc as string,\n\t\tHairLossExperience__pc as string,\n\t\tHairLossFamily__pc as string,\n\t\tHairLossOrVolume__pc as string,\n\t\tHairLossProductOther__pc as string,\n\t\tHairLossProductUsed__pc as string,\n\t\tHairLossSpot__pc as string,\n\t\tHardCopyPreferred__pc as boolean,\n\t\tLanguage__pc as string,\n\t\tMaritalStatus__pc as string,\n\t\tText_Reminder_Opt_In__pc as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSAccount\nsource(output(\n\t\tGenderKey as integer,\n\t\tGenderId as integer,\n\t\tGenderName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimGender\nsource(output(\n\t\tGenderID as integer,\n\t\tGenderSortOrder as integer,\n\t\tGenderDescription as string,\n\t\tGenderDescriptionShort as string,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary,\n\t\tDescriptionResourceKey as string,\n\t\tDescriptionShortResourceKey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: true) ~> ConectGender\nDimGender select(mapColumn(\n\t\tHash\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectHash\nODSAccount filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(Gender__pc)) ~> FilterLastModified\nFilterLastModified select(mapColumn(\n\t\tGender = Gender__pc\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectGender\nSelectGender aggregate(groupBy(Gender),\n\teach(match(name!='Gender'), $$ = first($$))) ~> DistinctGender\nDistinctGender derive(SourceSystem = 'Salesforce',\n\t\tIsActive = toBoolean('1'),\n\t\tDWH_LoadDate = currentTimestamp(),\n\t\tDWH_LastUpdateDate = currentTimestamp(),\n\t\tGenderName = initCap(Gender),\n\t\tGenderId = 99999) ~> CustomeColumns\nCustomeColumns derive(Hash = sha2(256, concat(GenderName, SourceSystem))) ~> Hash\nUnion, SelectHash exists(Union@Hash == SelectHash@Hash,\n\tnegate:true,\n\tbroadcast: 'auto')~> DoesNotExist\nConectGender filter(toDate(LastUpdate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastUpdate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(GenderID)) ~> FilterLastUpdate\nFilterLastUpdate select(mapColumn(\n\t\tGenderID,\n\t\tGenderDescription,\n\t\tIsActiveFlag\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectFields\nSelectFields derive(SourceSystem = 'Conect',\n\t\tIsActive = IsActiveFlag,\n\t\tDWH_LoadDate = currentTimestamp(),\n\t\tDWH_LastUpdateDate = currentTimestamp(),\n\t\tGenderName = initCap(GenderDescription),\n\t\tGenderId = GenderID) ~> CustomColumn\nCustomColumn derive(Hash = sha2(256, concat(GenderName, SourceSystem))) ~> HashConect\nHashConect select(mapColumn(\n\t\tSourceSystem,\n\t\tIsActive,\n\t\tDWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tGenderName,\n\t\tGenderId = CustomColumn@GenderId,\n\t\tHash\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectFinalFields\nSelectFinalFieldsSalesforce, SelectFinalFields union(byName: true)~> Union\nHash select(mapColumn(\n\t\tSourceSystem,\n\t\tIsActive,\n\t\tDWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tGenderName,\n\t\tGenderId,\n\t\tHash\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectFinalFieldsSalesforce\nDoesNotExist sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tGenderKey as integer,\n\t\tGenderId as integer,\n\t\tGenderName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tGenderName,\n\t\tHash,\n\t\tDWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive,\n\t\tSourceSystem,\n\t\tGenderId\n\t)) ~> InsertGender"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimCurrency')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Campaign",
                                "type": "DatasetReference"
                            },
                            "name": "ODSCampaign"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCurrency",
                                "type": "DatasetReference"
                            },
                            "name": "DimCurrency"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCurrency",
                                "type": "DatasetReference"
                            },
                            "name": "UpdateDimCurrency"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCurrency",
                                "type": "DatasetReference"
                            },
                            "name": "InsertDimCurrency"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "DistinctCurrency"
                        },
                        {
                            "name": "AddCustomColumns"
                        },
                        {
                            "name": "SelectCurrency"
                        },
                        {
                            "name": "AlterRow1"
                        },
                        {
                            "name": "Exists"
                        },
                        {
                            "name": "FilterLastModifiedCampaign"
                        },
                        {
                            "name": "DoesNotExist"
                        },
                        {
                            "name": "AddDateColumns"
                        },
                        {
                            "name": "AddDateColumns1"
                        },
                        {
                            "name": "FilterNull"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tName as string,\n\t\tParentId as string,\n\t\tType as string,\n\t\tRecordTypeId as string,\n\t\tStatus as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tCurrencyIsoCode as string,\n\t\tExpectedRevenue as decimal(38,18),\n\t\tBudgetedCost as decimal(38,18),\n\t\tActualCost as decimal(38,18),\n\t\tExpectedResponse as decimal(38,18),\n\t\tNumberSent as decimal(38,18),\n\t\tIsActive as boolean,\n\t\tDescription as string,\n\t\tNumberOfLeads as integer,\n\t\tNumberOfConvertedLeads as integer,\n\t\tNumberOfContacts as integer,\n\t\tNumberOfResponses as integer,\n\t\tNumberOfOpportunities as integer,\n\t\tNumberOfWonOpportunities as integer,\n\t\tAmountAllOpportunities as decimal(38,18),\n\t\tAmountWonOpportunities as decimal(38,18),\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tCampaignMemberRecordTypeId as string,\n\t\tChannel__c as string,\n\t\tCompany__c as string,\n\t\tExternal_Id__c as string,\n\t\tLanguage__c as string,\n\t\tSourceCode_L__c as string,\n\t\tPromo_Code__c as string,\n\t\tTollFreeNumber__c as string,\n\t\tLocation__c as string,\n\t\tMedia__c as string,\n\t\tFormat__c as string,\n\t\tAudience__c as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSCampaign\nsource(output(\n\t\tCurrencyKey as integer,\n\t\tCurrencyName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimCurrency\nFilterLastModifiedCampaign aggregate(groupBy(CurrencyIsoCode),\n\teach(match(name!='CurrencyIsoCode'), $$ = first($$))) ~> DistinctCurrency\nFilterNull derive(isActive = 1,\n\t\tsourcesystem = 'Salesforce',\n\t\tHash = sha2(256, CurrencyIsoCode)) ~> AddCustomColumns\nDistinctCurrency select(mapColumn(\n\t\tCurrencyIsoCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCurrency\nAddDateColumns alterRow(updateIf(true())) ~> AlterRow1\nAddCustomColumns, DimCurrency exists(AddCustomColumns@Hash == DimCurrency@Hash,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists\nODSCampaign filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1)) ~> FilterLastModifiedCampaign\nAddCustomColumns, DimCurrency exists(AddCustomColumns@Hash == DimCurrency@Hash,\n\tnegate:true,\n\tbroadcast: 'auto')~> DoesNotExist\nExists derive(DWH_LastUpdateDate = currentTimestamp()) ~> AddDateColumns\nDoesNotExist derive(DWH_LastUpdateDate = currentTimestamp(),\n\t\tDWH_LoadDate = currentTimestamp()) ~> AddDateColumns1\nSelectCurrency filter(!isNull(CurrencyIsoCode) && !(trim(CurrencyIsoCode) == 'Unknown')) ~> FilterNull\nAlterRow1 sink(allowSchemaDrift: false,\n\tvalidateSchema: true,\n\tinput(\n\t\tCurrencyKey as integer,\n\t\tCurrencyName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['CurrencyName'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tHash,\n\t\tCurrencyName = CurrencyIsoCode,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive = isActive,\n\t\tSourceSystem = sourcesystem\n\t)) ~> UpdateDimCurrency\nAddDateColumns1 sink(allowSchemaDrift: false,\n\tvalidateSchema: true,\n\tinput(\n\t\tCurrencyKey as integer,\n\t\tCurrencyName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tHash,\n\t\tCurrencyName = CurrencyIsoCode,\n\t\tDWH_CreatedDate = DWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive = isActive,\n\t\tSourceSystem = sourcesystem\n\t)) ~> InsertDimCurrency"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimMaritalStatus')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Account",
                                "type": "DatasetReference"
                            },
                            "name": "ODSAccount"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimMaritalStatus",
                                "type": "DatasetReference"
                            },
                            "name": "DimMaritalStatus"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimMaritalStatus",
                                "type": "DatasetReference"
                            },
                            "name": "InsertCompany"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SelectHash"
                        },
                        {
                            "name": "FilterLastModified"
                        },
                        {
                            "name": "SelectMaritalStatus"
                        },
                        {
                            "name": "DistinctMaritalStatus"
                        },
                        {
                            "name": "CustomeColumns"
                        },
                        {
                            "name": "Hash"
                        },
                        {
                            "name": "DoesNotExist"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tMasterRecordId as string,\n\t\tName as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tSalutation as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tType as string,\n\t\tRecordTypeId as string,\n\t\tParentId as string,\n\t\tBillingStreet as string,\n\t\tBillingCity as string,\n\t\tBillingState as string,\n\t\tBillingPostalCode as string,\n\t\tBillingCountry as string,\n\t\tBillingStateCode as string,\n\t\tBillingCountryCode as string,\n\t\tBillingLatitude as decimal(38,18),\n\t\tBillingLongitude as decimal(38,18),\n\t\tBillingGeocodeAccuracy as string,\n\t\tShippingStreet as string,\n\t\tShippingCity as string,\n\t\tShippingState as string,\n\t\tShippingPostalCode as string,\n\t\tShippingCountry as string,\n\t\tShippingStateCode as string,\n\t\tShippingCountryCode as string,\n\t\tShippingLatitude as decimal(38,18),\n\t\tShippingLongitude as decimal(38,18),\n\t\tShippingGeocodeAccuracy as string,\n\t\tPhone as string,\n\t\tWebsite as string,\n\t\tPhotoUrl as string,\n\t\tIndustry as string,\n\t\tNumberOfEmployees as integer,\n\t\tDescription as string,\n\t\tCurrencyIsoCode as string,\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tPersonContactId as string,\n\t\tIsPersonAccount as boolean,\n\t\tPersonMailingStreet as string,\n\t\tPersonMailingCity as string,\n\t\tPersonMailingState as string,\n\t\tPersonMailingPostalCode as string,\n\t\tPersonMailingCountry as string,\n\t\tPersonMailingStateCode as string,\n\t\tPersonMailingCountryCode as string,\n\t\tPersonMailingLatitude as decimal(38,18),\n\t\tPersonMailingLongitude as decimal(38,18),\n\t\tPersonMailingGeocodeAccuracy as string,\n\t\tPersonMobilePhone as string,\n\t\tPersonEmail as string,\n\t\tPersonTitle as string,\n\t\tPersonDepartment as string,\n\t\tPersonLastCURequestDate as timestamp,\n\t\tPersonLastCUUpdateDate as timestamp,\n\t\tPersonEmailBouncedReason as string,\n\t\tPersonEmailBouncedDate as timestamp,\n\t\tJigsaw as string,\n\t\tJigsawCompanyId as string,\n\t\tAccountSource as string,\n\t\tSicDesc as string,\n\t\tOperatingHoursId as string,\n\t\tActive__c as boolean,\n\t\tCompany__c as string,\n\t\tConectCreationDate__c as timestamp,\n\t\tConectLastUpdate__c as timestamp,\n\t\tExternal_Id__c as string,\n\t\tCount_Close_Won_Opportunities__c as decimal(38,18),\n\t\tCustomer_Status__c as string,\n\t\tDisc__pc as string,\n\t\tDoNotContact__pc as boolean,\n\t\tDoNotEmail__pc as boolean,\n\t\tDoNotMail__pc as boolean,\n\t\tDoNotText__pc as boolean,\n\t\tEthnicity__pc as string,\n\t\tGender__pc as string,\n\t\tHairLossExperience__pc as string,\n\t\tHairLossFamily__pc as string,\n\t\tHairLossOrVolume__pc as string,\n\t\tHairLossProductOther__pc as string,\n\t\tHairLossProductUsed__pc as string,\n\t\tHairLossSpot__pc as string,\n\t\tHardCopyPreferred__pc as boolean,\n\t\tLanguage__pc as string,\n\t\tMaritalStatus__pc as string,\n\t\tText_Reminder_Opt_In__pc as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSAccount\nsource(output(\n\t\tMaritalStatusKey as integer,\n\t\tMaritalStatusName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimMaritalStatus\nDimMaritalStatus select(mapColumn(\n\t\tHash\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectHash\nODSAccount filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(MaritalStatus__pc)) ~> FilterLastModified\nFilterLastModified select(mapColumn(\n\t\tMaritalStatus = MaritalStatus__pc\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectMaritalStatus\nSelectMaritalStatus aggregate(groupBy(MaritalStatus),\n\teach(match(name!='MaritalStatus'), $$ = first($$))) ~> DistinctMaritalStatus\nDistinctMaritalStatus derive(SourceSystem = 'Salesforce',\n\t\tIsActive = toBoolean('1'),\n\t\tDWH_LoadDate = currentTimestamp(),\n\t\tDWH_LastUpdateDate = currentTimestamp(),\n\t\tMaritalStatusName = initCap(MaritalStatus)) ~> CustomeColumns\nCustomeColumns derive(Hash = sha2(256, concat(MaritalStatusName, SourceSystem))) ~> Hash\nHash, SelectHash exists(Hash@Hash == SelectHash@Hash,\n\tnegate:true,\n\tbroadcast: 'auto')~> DoesNotExist\nDoesNotExist sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tMaritalStatusKey as integer,\n\t\tMaritalStatusName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tMaritalStatusName,\n\t\tHash,\n\t\tDWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive,\n\t\tSourceSystem\n\t)) ~> InsertCompany"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ODSAccount')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/ODS"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_SF_Account",
                                "type": "DatasetReference"
                            },
                            "name": "AccountParquet"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Account",
                                "type": "DatasetReference"
                            },
                            "name": "UpsertOdsAccount"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AllowUpsert"
                        }
                    ],
                    "script": "source(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tMasterRecordId as string,\n\t\tName as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tSalutation as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tType as string,\n\t\tRecordTypeId as string,\n\t\tParentId as string,\n\t\tBillingStreet as string,\n\t\tBillingCity as string,\n\t\tBillingState as string,\n\t\tBillingPostalCode as string,\n\t\tBillingCountry as string,\n\t\tBillingStateCode as string,\n\t\tBillingCountryCode as string,\n\t\tBillingLatitude as decimal(38,18),\n\t\tBillingLongitude as decimal(38,18),\n\t\tBillingGeocodeAccuracy as string,\n\t\tShippingStreet as string,\n\t\tShippingCity as string,\n\t\tShippingState as string,\n\t\tShippingPostalCode as string,\n\t\tShippingCountry as string,\n\t\tShippingStateCode as string,\n\t\tShippingCountryCode as string,\n\t\tShippingLatitude as decimal(38,18),\n\t\tShippingLongitude as decimal(38,18),\n\t\tShippingGeocodeAccuracy as string,\n\t\tPhone as string,\n\t\tWebsite as string,\n\t\tPhotoUrl as string,\n\t\tIndustry as string,\n\t\tNumberOfEmployees as integer,\n\t\tDescription as string,\n\t\tCurrencyIsoCode as string,\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tPersonContactId as string,\n\t\tIsPersonAccount as boolean,\n\t\tPersonMailingStreet as string,\n\t\tPersonMailingCity as string,\n\t\tPersonMailingState as string,\n\t\tPersonMailingPostalCode as string,\n\t\tPersonMailingCountry as string,\n\t\tPersonMailingStateCode as string,\n\t\tPersonMailingCountryCode as string,\n\t\tPersonMailingLatitude as decimal(38,18),\n\t\tPersonMailingLongitude as decimal(38,18),\n\t\tPersonMailingGeocodeAccuracy as string,\n\t\tPersonMobilePhone as string,\n\t\tPersonEmail as string,\n\t\tPersonTitle as string,\n\t\tPersonDepartment as string,\n\t\tPersonLastCURequestDate as timestamp,\n\t\tPersonLastCUUpdateDate as timestamp,\n\t\tPersonEmailBouncedReason as string,\n\t\tPersonEmailBouncedDate as timestamp,\n\t\tJigsaw as string,\n\t\tJigsawCompanyId as string,\n\t\tAccountSource as string,\n\t\tSicDesc as string,\n\t\tOperatingHoursId as string,\n\t\tActive__c as boolean,\n\t\tCompany__c as string,\n\t\tConectCreationDate__c as timestamp,\n\t\tConectLastUpdate__c as timestamp,\n\t\tExternal_Id__c as string,\n\t\tCount_Close_Won_Opportunities__c as decimal(38,18),\n\t\tCustomer_Status__c as string,\n\t\tDisc__pc as string,\n\t\tDoNotContact__pc as boolean,\n\t\tDoNotEmail__pc as boolean,\n\t\tDoNotMail__pc as boolean,\n\t\tDoNotText__pc as boolean,\n\t\tEthnicity__pc as string,\n\t\tGender__pc as string,\n\t\tHairLossExperience__pc as string,\n\t\tHairLossFamily__pc as string,\n\t\tHairLossOrVolume__pc as string,\n\t\tHairLossProductOther__pc as string,\n\t\tHairLossProductUsed__pc as string,\n\t\tHairLossSpot__pc as string,\n\t\tHardCopyPreferred__pc as boolean,\n\t\tLanguage__pc as string,\n\t\tMaritalStatus__pc as string,\n\t\tText_Reminder_Opt_In__pc as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> AccountParquet\nAccountParquet alterRow(upsertIf(true())) ~> AllowUpsert\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tMasterRecordId as string,\n\t\tName as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tSalutation as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tType as string,\n\t\tRecordTypeId as string,\n\t\tParentId as string,\n\t\tBillingStreet as string,\n\t\tBillingCity as string,\n\t\tBillingState as string,\n\t\tBillingPostalCode as string,\n\t\tBillingCountry as string,\n\t\tBillingStateCode as string,\n\t\tBillingCountryCode as string,\n\t\tBillingLatitude as decimal(38,18),\n\t\tBillingLongitude as decimal(38,18),\n\t\tBillingGeocodeAccuracy as string,\n\t\tShippingStreet as string,\n\t\tShippingCity as string,\n\t\tShippingState as string,\n\t\tShippingPostalCode as string,\n\t\tShippingCountry as string,\n\t\tShippingStateCode as string,\n\t\tShippingCountryCode as string,\n\t\tShippingLatitude as decimal(38,18),\n\t\tShippingLongitude as decimal(38,18),\n\t\tShippingGeocodeAccuracy as string,\n\t\tPhone as string,\n\t\tWebsite as string,\n\t\tPhotoUrl as string,\n\t\tIndustry as string,\n\t\tNumberOfEmployees as integer,\n\t\tDescription as string,\n\t\tCurrencyIsoCode as string,\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tPersonContactId as string,\n\t\tIsPersonAccount as boolean,\n\t\tPersonMailingStreet as string,\n\t\tPersonMailingCity as string,\n\t\tPersonMailingState as string,\n\t\tPersonMailingPostalCode as string,\n\t\tPersonMailingCountry as string,\n\t\tPersonMailingStateCode as string,\n\t\tPersonMailingCountryCode as string,\n\t\tPersonMailingLatitude as decimal(38,18),\n\t\tPersonMailingLongitude as decimal(38,18),\n\t\tPersonMailingGeocodeAccuracy as string,\n\t\tPersonMobilePhone as string,\n\t\tPersonEmail as string,\n\t\tPersonTitle as string,\n\t\tPersonDepartment as string,\n\t\tPersonLastCURequestDate as timestamp,\n\t\tPersonLastCUUpdateDate as timestamp,\n\t\tPersonEmailBouncedReason as string,\n\t\tPersonEmailBouncedDate as timestamp,\n\t\tJigsaw as string,\n\t\tJigsawCompanyId as string,\n\t\tAccountSource as string,\n\t\tSicDesc as string,\n\t\tOperatingHoursId as string,\n\t\tActive__c as boolean,\n\t\tCompany__c as string,\n\t\tConectCreationDate__c as timestamp,\n\t\tConectLastUpdate__c as timestamp,\n\t\tExternal_Id__c as string,\n\t\tCount_Close_Won_Opportunities__c as decimal(38,18),\n\t\tCustomer_Status__c as string,\n\t\tDisc__pc as string,\n\t\tDoNotContact__pc as boolean,\n\t\tDoNotEmail__pc as boolean,\n\t\tDoNotMail__pc as boolean,\n\t\tDoNotText__pc as boolean,\n\t\tEthnicity__pc as string,\n\t\tGender__pc as string,\n\t\tHairLossExperience__pc as string,\n\t\tHairLossFamily__pc as string,\n\t\tHairLossOrVolume__pc as string,\n\t\tHairLossProductOther__pc as string,\n\t\tHairLossProductUsed__pc as string,\n\t\tHairLossSpot__pc as string,\n\t\tHardCopyPreferred__pc as boolean,\n\t\tLanguage__pc as string,\n\t\tMaritalStatus__pc as string,\n\t\tText_Reminder_Opt_In__pc as boolean\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Id'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tId,\n\t\tIsDeleted,\n\t\tMasterRecordId,\n\t\tName,\n\t\tLastName,\n\t\tFirstName,\n\t\tSalutation,\n\t\tMiddleName,\n\t\tSuffix,\n\t\tType,\n\t\tRecordTypeId,\n\t\tParentId,\n\t\tBillingStreet,\n\t\tBillingCity,\n\t\tBillingState,\n\t\tBillingPostalCode,\n\t\tBillingCountry,\n\t\tBillingStateCode,\n\t\tBillingCountryCode,\n\t\tBillingLatitude,\n\t\tBillingLongitude,\n\t\tBillingGeocodeAccuracy,\n\t\tShippingStreet,\n\t\tShippingCity,\n\t\tShippingState,\n\t\tShippingPostalCode,\n\t\tShippingCountry,\n\t\tShippingStateCode,\n\t\tShippingCountryCode,\n\t\tShippingLatitude,\n\t\tShippingLongitude,\n\t\tShippingGeocodeAccuracy,\n\t\tPhone,\n\t\tWebsite,\n\t\tPhotoUrl,\n\t\tIndustry,\n\t\tNumberOfEmployees,\n\t\tDescription,\n\t\tCurrencyIsoCode,\n\t\tOwnerId,\n\t\tCreatedDate,\n\t\tCreatedById,\n\t\tLastModifiedDate,\n\t\tLastModifiedById,\n\t\tSystemModstamp,\n\t\tLastActivityDate,\n\t\tLastViewedDate,\n\t\tLastReferencedDate,\n\t\tPersonContactId,\n\t\tIsPersonAccount,\n\t\tPersonMailingStreet,\n\t\tPersonMailingCity,\n\t\tPersonMailingState,\n\t\tPersonMailingPostalCode,\n\t\tPersonMailingCountry,\n\t\tPersonMailingStateCode,\n\t\tPersonMailingCountryCode,\n\t\tPersonMailingLatitude,\n\t\tPersonMailingLongitude,\n\t\tPersonMailingGeocodeAccuracy,\n\t\tPersonMobilePhone,\n\t\tPersonEmail,\n\t\tPersonTitle,\n\t\tPersonDepartment,\n\t\tPersonLastCURequestDate,\n\t\tPersonLastCUUpdateDate,\n\t\tPersonEmailBouncedReason,\n\t\tPersonEmailBouncedDate,\n\t\tJigsaw,\n\t\tJigsawCompanyId,\n\t\tAccountSource,\n\t\tSicDesc,\n\t\tOperatingHoursId,\n\t\tActive__c,\n\t\tCompany__c,\n\t\tConectCreationDate__c,\n\t\tConectLastUpdate__c,\n\t\tExternal_Id__c,\n\t\tCount_Close_Won_Opportunities__c,\n\t\tCustomer_Status__c,\n\t\tDisc__pc,\n\t\tDoNotContact__pc,\n\t\tDoNotEmail__pc,\n\t\tDoNotMail__pc,\n\t\tDoNotText__pc,\n\t\tEthnicity__pc,\n\t\tGender__pc,\n\t\tHairLossExperience__pc,\n\t\tHairLossFamily__pc,\n\t\tHairLossOrVolume__pc,\n\t\tHairLossProductOther__pc,\n\t\tHairLossProductUsed__pc,\n\t\tHairLossSpot__pc,\n\t\tHardCopyPreferred__pc,\n\t\tLanguage__pc,\n\t\tMaritalStatus__pc,\n\t\tText_Reminder_Opt_In__pc\n\t)) ~> UpsertOdsAccount"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CNCT_PaymentSalesCode')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "CONNECT"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_CNCT_PaymentSalesCode",
                                "type": "DatasetReference"
                            },
                            "name": "source1"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_PaymentSalesCode",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AlterRow1"
                        }
                    ],
                    "script": "source(output(\n\t\tSalesCodeID as integer,\n\t\tSalesCodeSortOrder as integer,\n\t\tSalesCodeDescription as string,\n\t\tSalesCodeDescriptionShort as string,\n\t\tSalesCodeTypeID as integer,\n\t\tSalesCodeDepartmentID as integer,\n\t\tVendorID as integer,\n\t\tBarcode as string,\n\t\tPriceDefault as decimal(19,4),\n\t\tGLNumber as integer,\n\t\tServiceDuration as integer,\n\t\tCanScheduleFlag as boolean,\n\t\tFactoryOrderFlag as boolean,\n\t\tIsRefundableFlag as boolean,\n\t\tInventoryFlag as boolean,\n\t\tSurgeryCloseoutFlag as boolean,\n\t\tTechnicalProfileFlag as boolean,\n\t\tAdjustContractPaidAmountFlag as boolean,\n\t\tIsPriceAdjustableFlag as boolean,\n\t\tIsDiscountableFlag as boolean,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary,\n\t\tIsARTenderRequiredFlag as boolean,\n\t\tCanOrderFlag as boolean,\n\t\tIsQuantityAdjustableFlag as boolean,\n\t\tIsPhotoEnabledFlag as boolean,\n\t\tIsEXTOnlyProductFlag as boolean,\n\t\tHairSystemID as integer,\n\t\tSaleCount as integer,\n\t\tIsSalesCodeKitFlag as boolean,\n\t\tBIOGeneralLedgerID as integer,\n\t\tEXTGeneralLedgerID as integer,\n\t\tSURGeneralLedgerID as integer,\n\t\tBrandID as integer,\n\t\tProduct as string,\n\t\tSize as string,\n\t\tIsRefundablePayment as boolean,\n\t\tIsNSFChargebackFee as boolean,\n\t\tInterCompanyPrice as decimal(19,4),\n\t\tIsQuantityRequired as boolean,\n\t\tXTRGeneralLedgerID as integer,\n\t\tDescriptionResourceKey as string,\n\t\tIsBosleySalesCode as boolean,\n\t\tIsVisibleToConsultant as boolean,\n\t\tIsSerialized as boolean,\n\t\tSerialNumberRegEx as string,\n\t\tQuantityPerPack as integer,\n\t\tPackUnitOfMeasureID as integer,\n\t\tInventorySalesCodeID as integer,\n\t\tIsVisibleToClient as boolean,\n\t\tCanBeManagedByClient as boolean,\n\t\tIsManagedByClientOnly as boolean,\n\t\tClientDescription as string,\n\t\tMDPGeneralLedgerID as integer,\n\t\tPackSKU as string,\n\t\tIsBackBarApproved as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> source1\nsource1 alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSalesCodeID as integer,\n\t\tSalesCodeSortOrder as integer,\n\t\tSalesCodeDescription as string,\n\t\tSalesCodeDescriptionShort as string,\n\t\tSalesCodeTypeID as integer,\n\t\tSalesCodeDepartmentID as integer,\n\t\tVendorID as integer,\n\t\tBarcode as string,\n\t\tPriceDefault as decimal(19,4),\n\t\tGLNumber as integer,\n\t\tServiceDuration as integer,\n\t\tCanScheduleFlag as boolean,\n\t\tFactoryOrderFlag as boolean,\n\t\tIsRefundableFlag as boolean,\n\t\tInventoryFlag as boolean,\n\t\tSurgeryCloseoutFlag as boolean,\n\t\tTechnicalProfileFlag as boolean,\n\t\tAdjustContractPaidAmountFlag as boolean,\n\t\tIsPriceAdjustableFlag as boolean,\n\t\tIsDiscountableFlag as boolean,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary,\n\t\tIsARTenderRequiredFlag as boolean,\n\t\tCanOrderFlag as boolean,\n\t\tIsQuantityAdjustableFlag as boolean,\n\t\tIsPhotoEnabledFlag as boolean,\n\t\tIsEXTOnlyProductFlag as boolean,\n\t\tHairSystemID as integer,\n\t\tSaleCount as integer,\n\t\tIsSalesCodeKitFlag as boolean,\n\t\tBIOGeneralLedgerID as integer,\n\t\tEXTGeneralLedgerID as integer,\n\t\tSURGeneralLedgerID as integer,\n\t\tBrandID as integer,\n\t\tProduct as string,\n\t\tSize as string,\n\t\tIsRefundablePayment as boolean,\n\t\tIsNSFChargebackFee as boolean,\n\t\tInterCompanyPrice as decimal(19,4),\n\t\tIsQuantityRequired as boolean,\n\t\tXTRGeneralLedgerID as integer,\n\t\tDescriptionResourceKey as string,\n\t\tIsBosleySalesCode as boolean,\n\t\tIsVisibleToConsultant as boolean,\n\t\tIsSerialized as boolean,\n\t\tSerialNumberRegEx as string,\n\t\tQuantityPerPack as integer,\n\t\tPackUnitOfMeasureID as integer,\n\t\tInventorySalesCodeID as integer,\n\t\tIsVisibleToClient as boolean,\n\t\tCanBeManagedByClient as boolean,\n\t\tIsManagedByClientOnly as boolean,\n\t\tClientDescription as string,\n\t\tMDPGeneralLedgerID as integer,\n\t\tPackSKU as string,\n\t\tIsBackBarApproved as boolean\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['SalesCodeID'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimHairLossScale_Pending')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Account",
                                "type": "DatasetReference"
                            },
                            "name": "ODSAccount"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimHairLossScale",
                                "type": "DatasetReference"
                            },
                            "name": "DimHairLossScale"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCompany",
                                "type": "DatasetReference"
                            },
                            "name": "InsertCompany"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SelectHash"
                        },
                        {
                            "name": "FilterLastModified"
                        },
                        {
                            "name": "SelectHairLossScale"
                        },
                        {
                            "name": "DistinctCompany"
                        },
                        {
                            "name": "CustomeColumns"
                        },
                        {
                            "name": "Hash"
                        },
                        {
                            "name": "DoesNotExist"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tMasterRecordId as string,\n\t\tName as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tSalutation as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tType as string,\n\t\tRecordTypeId as string,\n\t\tParentId as string,\n\t\tBillingStreet as string,\n\t\tBillingCity as string,\n\t\tBillingState as string,\n\t\tBillingPostalCode as string,\n\t\tBillingCountry as string,\n\t\tBillingStateCode as string,\n\t\tBillingCountryCode as string,\n\t\tBillingLatitude as decimal(38,18),\n\t\tBillingLongitude as decimal(38,18),\n\t\tBillingGeocodeAccuracy as string,\n\t\tShippingStreet as string,\n\t\tShippingCity as string,\n\t\tShippingState as string,\n\t\tShippingPostalCode as string,\n\t\tShippingCountry as string,\n\t\tShippingStateCode as string,\n\t\tShippingCountryCode as string,\n\t\tShippingLatitude as decimal(38,18),\n\t\tShippingLongitude as decimal(38,18),\n\t\tShippingGeocodeAccuracy as string,\n\t\tPhone as string,\n\t\tWebsite as string,\n\t\tPhotoUrl as string,\n\t\tIndustry as string,\n\t\tNumberOfEmployees as integer,\n\t\tDescription as string,\n\t\tCurrencyIsoCode as string,\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tPersonContactId as string,\n\t\tIsPersonAccount as boolean,\n\t\tPersonMailingStreet as string,\n\t\tPersonMailingCity as string,\n\t\tPersonMailingState as string,\n\t\tPersonMailingPostalCode as string,\n\t\tPersonMailingCountry as string,\n\t\tPersonMailingStateCode as string,\n\t\tPersonMailingCountryCode as string,\n\t\tPersonMailingLatitude as decimal(38,18),\n\t\tPersonMailingLongitude as decimal(38,18),\n\t\tPersonMailingGeocodeAccuracy as string,\n\t\tPersonMobilePhone as string,\n\t\tPersonEmail as string,\n\t\tPersonTitle as string,\n\t\tPersonDepartment as string,\n\t\tPersonLastCURequestDate as timestamp,\n\t\tPersonLastCUUpdateDate as timestamp,\n\t\tPersonEmailBouncedReason as string,\n\t\tPersonEmailBouncedDate as timestamp,\n\t\tJigsaw as string,\n\t\tJigsawCompanyId as string,\n\t\tAccountSource as string,\n\t\tSicDesc as string,\n\t\tOperatingHoursId as string,\n\t\tActive__c as boolean,\n\t\tCompany__c as string,\n\t\tConectCreationDate__c as timestamp,\n\t\tConectLastUpdate__c as timestamp,\n\t\tExternal_Id__c as string,\n\t\tCount_Close_Won_Opportunities__c as decimal(38,18),\n\t\tCustomer_Status__c as string,\n\t\tDisc__pc as string,\n\t\tDoNotContact__pc as boolean,\n\t\tDoNotEmail__pc as boolean,\n\t\tDoNotMail__pc as boolean,\n\t\tDoNotText__pc as boolean,\n\t\tEthnicity__pc as string,\n\t\tGender__pc as string,\n\t\tHairLossExperience__pc as string,\n\t\tHairLossFamily__pc as string,\n\t\tHairLossOrVolume__pc as string,\n\t\tHairLossProductOther__pc as string,\n\t\tHairLossProductUsed__pc as string,\n\t\tHairLossSpot__pc as string,\n\t\tHardCopyPreferred__pc as boolean,\n\t\tLanguage__pc as string,\n\t\tMaritalStatus__pc as string,\n\t\tText_Reminder_Opt_In__pc as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSAccount\nsource(output(\n\t\tHairLossScaleKey as integer,\n\t\tHairLossScaleName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimHairLossScale\nDimHairLossScale select(mapColumn(\n\t\tHash\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectHash\nODSAccount filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1) && !isNull(Company__c)) ~> FilterLastModified\nFilterLastModified select(mapColumn(\n\t\tCompany = Company__c\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectHairLossScale\nSelectHairLossScale aggregate(groupBy(Company),\n\teach(match(name!='Company'), $$ = first($$))) ~> DistinctCompany\nDistinctCompany derive(SourceSystem = 'Salesforce',\n\t\tIsActive = toBoolean('1'),\n\t\tDWH_LoadDate = currentTimestamp(),\n\t\tDWH_LastUpdateDate = currentTimestamp(),\n\t\tCompanyName = initCap(Company)) ~> CustomeColumns\nCustomeColumns derive(Hash = sha2(256, concat(CompanyName, SourceSystem))) ~> Hash\nHash, SelectHash exists(Hash@Hash == SelectHash@Hash,\n\tnegate:true,\n\tbroadcast: 'auto')~> DoesNotExist\nDoesNotExist sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCompanyKey as integer,\n\t\tCompanyName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCompanyName,\n\t\tHash,\n\t\tDWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive,\n\t\tSourceSystem\n\t)) ~> InsertCompany"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CNCT_SalesType')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "CONNECT"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_CNCT_SalesType",
                                "type": "DatasetReference"
                            },
                            "name": "CNTSalesType"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_SalesType",
                                "type": "DatasetReference"
                            },
                            "name": "ODSSalesType"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AlterRow1"
                        }
                    ],
                    "script": "source(output(\n\t\tSalesCodeTypeID as integer,\n\t\tSalesCodeTypeSortOrder as integer,\n\t\tSalesCodeTypeDescription as string,\n\t\tSalesCodeTypeDescriptionShort as string,\n\t\tIsInventory as boolean,\n\t\tIsSerialized as boolean,\n\t\tIsHairSystem as boolean,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> CNTSalesType\nCNTSalesType alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSalesCodeTypeID as integer,\n\t\tSalesCodeTypeSortOrder as integer,\n\t\tSalesCodeTypeDescription as string,\n\t\tSalesCodeTypeDescriptionShort as string,\n\t\tIsInventory as boolean,\n\t\tIsSerialized as boolean,\n\t\tIsHairSystem as boolean,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['SalesCodeTypeID'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSSalesType"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/FactMarketingActivity_Datorama')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/Marketing"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ASA_ODS_Datorama_SocialMedia_Filtered",
                                "type": "DatasetReference"
                            },
                            "name": "ODSSocialMedia"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimAgency",
                                "type": "DatasetReference"
                            },
                            "name": "DimAgency"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimSource",
                                "type": "DatasetReference"
                            },
                            "name": "DimSource"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimBudget",
                                "type": "DatasetReference"
                            },
                            "name": "DimBudget"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimLocation",
                                "type": "DatasetReference"
                            },
                            "name": "DimLocation"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCompany",
                                "type": "DatasetReference"
                            },
                            "name": "DimCompany"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimDate",
                                "type": "DatasetReference"
                            },
                            "name": "DimDate"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimChannel",
                                "type": "DatasetReference"
                            },
                            "name": "DimChannel"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimMedium",
                                "type": "DatasetReference"
                            },
                            "name": "DimMedium"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimMarketingFee",
                                "type": "DatasetReference"
                            },
                            "name": "DimMarketingFeed"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_FactMarketingBudget",
                                "type": "DatasetReference"
                            },
                            "name": "FactMarketingBudget"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_FactMarketingActivity",
                                "type": "DatasetReference"
                            },
                            "name": "InsertFactMarketingActivity"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SocialMediaFinalColumns"
                        },
                        {
                            "name": "JoinAgency"
                        },
                        {
                            "name": "JoinSource"
                        },
                        {
                            "name": "JoinCompany"
                        },
                        {
                            "name": "JoinLocation"
                        },
                        {
                            "name": "JoinBudget"
                        },
                        {
                            "name": "SelectColumns"
                        },
                        {
                            "name": "FilterLocationSocialMedia"
                        },
                        {
                            "name": "JoinDate"
                        },
                        {
                            "name": "AddCustomKey"
                        },
                        {
                            "name": "FilterSocialMedia"
                        },
                        {
                            "name": "FilterBudgetSocialMedia"
                        },
                        {
                            "name": "FilterCompany"
                        },
                        {
                            "name": "FilterSocialMediaAgency"
                        },
                        {
                            "name": "AlterRow1"
                        },
                        {
                            "name": "JoinChannel"
                        },
                        {
                            "name": "JoinMedium"
                        },
                        {
                            "name": "SelectFeeColumns"
                        },
                        {
                            "name": "FilterKingstar"
                        },
                        {
                            "name": "SelectBudgetColumns"
                        },
                        {
                            "name": "DerivedColumn1"
                        },
                        {
                            "name": "FilterLastMonth"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer,\n\tFilePath as string\n}\nsource(output(\n\t\tDataStream as string,\n\t\tCRMDay as date,\n\t\tCampaignAdvertiserID as string,\n\t\tCampaignAdvertaiser as string,\n\t\tMediaCost as decimal(18,0),\n\t\tClicks as integer,\n\t\tFilePath as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tMediaSpend as decimal(18,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: true) ~> ODSSocialMedia\nsource(output(\n\t\tAgencyKey as integer,\n\t\tHash as string,\n\t\tAgencyName as string,\n\t\tAgencyAddress as string,\n\t\tAgencyDomain as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as integer,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimAgency\nsource(output(\n\t\tSourceKey as integer,\n\t\tSourceName as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimSource\nsource(output(\n\t\tBudgetKey as integer,\n\t\tBudgetName as string,\n\t\tBudgetType as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimBudget\nsource(output(\n\t\tLocationKey as integer,\n\t\tLocationName as string,\n\t\tShortCodeLocation as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimLocation\nsource(output(\n\t\tCompanyKey as integer,\n\t\tCompanyName as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimCompany\nsource(output(\n\t\tDateKey as integer,\n\t\tFullDate as date,\n\t\tISODate as string,\n\t\tYearNumber as integer,\n\t\tYearQuarterNumber as integer,\n\t\tYearMonthNumber as integer,\n\t\tYearQuarterMonthNumber as integer,\n\t\tYearWeekNumber as integer,\n\t\tDateName as string,\n\t\tWeekName as string,\n\t\tWeekNameWithYear as string,\n\t\tWeekShortName as string,\n\t\tWeekShortNameWithYear as string,\n\t\tWeekNumber as integer,\n\t\tFirstDateOfWeek as date,\n\t\tLastDateOfWeek as date,\n\t\tDayOfWeek as integer,\n\t\tDayOfWeekName as string,\n\t\tIsWeekday as boolean,\n\t\tIsWeekend as boolean,\n\t\tMonthName as string,\n\t\tMonthNameWithYear as string,\n\t\tMonthShortName as string,\n\t\tMonthShortNameWithYear as string,\n\t\tMonthNumber as integer,\n\t\tFirstDateOfMonth as date,\n\t\tLastDateOfMonth as date,\n\t\tDayOfMonth as integer,\n\t\tDayOfMonthName as string,\n\t\tIsLastDayOfMonth as boolean,\n\t\tQuarterName as string,\n\t\tQuarterNameWithYear as string,\n\t\tQuarterShortName as string,\n\t\tQuarterShortNameWithYear as string,\n\t\tQuarterNumber as integer,\n\t\tFirstDateOfQuarter as date,\n\t\tLastDateOfQuarter as date,\n\t\tDayOfQuarter as integer,\n\t\tDayOfQuarterName as string,\n\t\tHalfName as string,\n\t\tHalfNameWithYear as string,\n\t\tHalfShortName as string,\n\t\tHalfShortNameWithYear as string,\n\t\tHalfNumber as integer,\n\t\tYearHalfNumber as integer,\n\t\tFirstDateOfHalf as date,\n\t\tLastDateOfHalf as date,\n\t\tDayOfHalf as integer,\n\t\tDayOfHalfName as string,\n\t\tYearName as string,\n\t\tYearShortName as string,\n\t\tFirstDateOfYear as date,\n\t\tLastDateOfYear as date,\n\t\tDayOfYear as integer,\n\t\tDayOfYearName as string,\n\t\tCalendarQuarter as integer,\n\t\tCalendarYear as integer,\n\t\tCalendarYearMonth as string,\n\t\tCalendarYearQtr as string,\n\t\tFiscalYear as integer,\n\t\tFiscalWeek as integer,\n\t\tFiscalPeriod as integer,\n\t\tFiscalMonth as integer,\n\t\tFiscalQuarter as integer,\n\t\tFiscalYearFiscalWeek as integer,\n\t\tFiscalYearFiscalPeriod as integer,\n\t\tFiscalYearFiscalMonth as integer,\n\t\tFiscalYearFiscalQuarter as integer,\n\t\tFiscalYearFiscalQuarterFiscalMonth as integer,\n\t\tFiscalYearName as string,\n\t\tFiscalYearLongName as string,\n\t\tFiscalYearShortName as string,\n\t\tFiscalQuarterName as string,\n\t\tFiscalQuarterLongName as string,\n\t\tFiscalQuarterNameWithYear as string,\n\t\tFiscalQuarterLongNameWithYear as string,\n\t\tFiscalQuarterShortName as string,\n\t\tFiscalQuarterShortNameWithYear as string,\n\t\tFiscalMonthName as string,\n\t\tFiscalMonthNameWithYear as string,\n\t\tFiscalMonthShortName as string,\n\t\tFiscalMonthShortNameWithYear as string,\n\t\tFiscalMonthCalendarShortName as string,\n\t\tFiscalMonthCalendarShortNameWithYear as string,\n\t\tFiscalWeekName as string,\n\t\tFiscalWeekLongName as string,\n\t\tFiscalWeekNameWithYear as string,\n\t\tFiscalWeekLongNameWithYear as string,\n\t\tFiscalWeekShortName as string,\n\t\tFiscalWeekShortNameWithYear as string,\n\t\tFiscalPeriodName as string,\n\t\tFiscalPeriodLongName as string,\n\t\tFiscalPeriodNameWithYear as string,\n\t\tFiscalPeriodLongNameWithYear as string,\n\t\tFiscalPeriodShortName as string,\n\t\tFiscalPeriodShortNameWithYear as string,\n\t\tCummWorkdays as integer,\n\t\tMonthWorkdays as integer,\n\t\tMonthWorkdaysTotal as integer,\n\t\tIsHoliday as boolean,\n\t\tMonthOfQuarter as integer,\n\t\tBroadcastYearBroadcastQuarter as integer,\n\t\tBroadcastYearBroadcastMonth as integer,\n\t\tBroadcastYearBroadcastWeek as integer,\n\t\tBroadcastYearQtrMonthWeekDay as integer,\n\t\tBroadcastYearQtrMonth as integer,\n\t\tBroadcastYearShortName as string,\n\t\tBroadcastYearLongName as string,\n\t\tBroadcastYeartName as string,\n\t\tBroadcastQuarterName as string,\n\t\tBroadcastWeekName as string,\n\t\tBroadcastDayName as string,\n\t\tmsrepl_tran_version as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimDate\nsource(output(\n\t\tChannelKey as integer,\n\t\tChannelName as string,\n\t\tChannelShortCode as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimChannel\nsource(output(\n\t\tMediumKey as integer,\n\t\tMediumName as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimMedium\nsource(output(\n\t\tMarketingFeeKey as integer,\n\t\tInitialDate as date,\n\t\tFinalDate as date,\n\t\tMonth as string,\n\t\tDataStream as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tFee as decimal(18,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimMarketingFeed\nsource(output(\n\t\tFactDate as string,\n\t\tMonth as string,\n\t\tBudgetType as string,\n\t\tAgency as string,\n\t\tChannel as string,\n\t\tMedium as string,\n\t\tSource as string,\n\t\tBudget as string,\n\t\tLocation as string,\n\t\tBudgetAmount as string,\n\t\tTaregetLeads as string,\n\t\tCurrencyConversion as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_UpdatedDate as timestamp,\n\t\tFee as string,\n\t\tDataStreamID as integer,\n\t\tDataStreamName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> FactMarketingBudget\nFilterLastMonth derive(Company = initCap(trim(split(DataStream, '|')[1])),\n\t\tAgency = initCap(trim(split(DataStream, '|')[2])),\n\t\tSourceMedia = initCap(trim(split(DataStream, '|')[3])),\n\t\tLocation = initCap(trim(split(DataStream, '|')[4])),\n\t\tBudgetType = initCap(trim(split(DataStream, '|')[5])),\n\t\tBudgetName = initCap(trim(split(DataStream, '|')[6])),\n\t\tChannel = initCap(trim(split(DataStream, '|')[7])),\n\t\tMedium = initCap(trim(split(DataStream, '|')[8])),\n\t\tCRMDay = toTimestamp(CRMDay),\n\t\tTime = '00:00:00') ~> SocialMediaFinalColumns\nSocialMediaFinalColumns, FilterSocialMediaAgency join(lower(trim(Agency)) == lower(trim(AgencyName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinAgency\nJoinAgency, FilterSocialMedia join(lower(trim(SourceMedia)) == lower(trim(SourceName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSource\nJoinSource, FilterCompany join(lower(trim(Company)) == lower(trim(CompanyName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCompany\nJoinCompany, FilterLocationSocialMedia join(lower(trim(Location)) == lower(trim(LocationName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinLocation\nJoinLocation, FilterBudgetSocialMedia join(lower(trim(SocialMediaFinalColumns@BudgetType)) == lower(trim(DimBudget@BudgetType))\n\t&& lower(trim(SocialMediaFinalColumns@BudgetName)) == lower(trim(DimBudget@BudgetName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinBudget\nDerivedColumn1 select(mapColumn(\n\t\tCRMDay,\n\t\tMediaCost,\n\t\tClicks,\n\t\tFilePath,\n\t\tDWH_LoadDate = ODSSocialMedia@DWH_LoadDate,\n\t\tAgency,\n\t\tCompany,\n\t\tLocation,\n\t\tChannel,\n\t\tMedium,\n\t\tBudgetName = SocialMediaFinalColumns@BudgetName,\n\t\tAgencyKey,\n\t\tSourceKey,\n\t\tCompanyKey,\n\t\tLocationKey,\n\t\tBudgetKey,\n\t\tSource = Agency,\n\t\tDateKey,\n\t\tTime,\n\t\tCRMDay,\n\t\tBudgetType = SocialMediaFinalColumns@BudgetType,\n\t\tDataStream,\n\t\tSourceMedia,\n\t\tMediumKey,\n\t\tChannelKey,\n\t\tFee = FeeFact,\n\t\tMediaSpend\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nDimLocation filter(Source == 'SocialMedia') ~> FilterLocationSocialMedia\nJoinBudget, DimDate join(toDate(CRMDay) == FullDate,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDate\nSelectColumns derive(AudienceKey = -1,\n\t\tChannelKey = coalesce(ChannelKey, -1),\n\t\tFormatKey = -1,\n\t\tTacticKey = -1,\n\t\tLanguageKey = -1,\n\t\tMediumKey = coalesce(MediumKey, -1),\n\t\tMethodKey = -1,\n\t\tPurposeKey = -1,\n\t\tAgencyKey = iifNull(AgencyKey,-1),\n\t\tSourceKey = iifNull(SourceKey,-1),\n\t\tCompanyKey = iifNull(CompanyKey,-1),\n\t\tLocationKey = iifNull(LocationKey,-1),\n\t\tBudgetKey = iifNull(BudgetKey, -1),\n\t\tDateKey = iifNull(DateKey,-1),\n\t\tHash = sha2(256, concat(DataStream, toString(CRMDay))),\n\t\tGrossSpend = toDecimal(MediaCost),\n\t\tNetSpend = MediaSpend,\n\t\tFee = coalesce(toDecimal(Fee), toDecimal('-1'))) ~> AddCustomKey\nDimSource filter(SourceSystem == 'Social Media') ~> FilterSocialMedia\nDimBudget filter(SourceSystem == 'Social Media') ~> FilterBudgetSocialMedia\nDimCompany filter(SourceSystem == 'SocialMedia') ~> FilterCompany\nDimAgency filter(SourceSystem == 'Social Media') ~> FilterSocialMediaAgency\nAddCustomKey alterRow(upsertIf(true())) ~> AlterRow1\nJoinDate, DimChannel join(lower(trim(Channel)) == lower(trim(ChannelName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinChannel\nJoinChannel, DimMedium join(lower(trim(Medium)) == lower(trim(MediumName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinMedium\nDimMarketingFeed select(mapColumn(\n\t\tMarketingFeeKey,\n\t\tInitialDate,\n\t\tDimDataStream = DataStream,\n\t\tFee\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectFeeColumns\nODSSocialMedia filter(true()) ~> FilterKingstar\nFactMarketingBudget select(mapColumn(\n\t\tFactDate,\n\t\tBudgetTypeFact = BudgetType,\n\t\tAgencyFact = Agency,\n\t\tChannelFact = Channel,\n\t\tMediumFact = Medium,\n\t\tSourceFact = Source,\n\t\tBudgetFact = Budget,\n\t\tLocationFact = Location,\n\t\tCurrencyConversionFact = CurrencyConversion,\n\t\tFeefact = Fee\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectBudgetColumns\nJoinMedium derive(FeeFact = toInteger(null())) ~> DerivedColumn1\nFilterKingstar filter(month(CRMDay) == month(addDays(currentTimestamp(),-1)) && year(CRMDay) == year(addDays(currentTimestamp(),-1))) ~> FilterLastMonth\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Hash'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFactDateKey = DateKey,\n\t\tFactDate = CRMDay,\n\t\tAgencyName = Agency,\n\t\tFile = FilePath,\n\t\tNetSpend,\n\t\tAgencyKey,\n\t\tAgency,\n\t\tChannelKey,\n\t\tFormatKey,\n\t\tTacticKey,\n\t\tSourceKey,\n\t\tSource = SourceMedia,\n\t\tMediumKey,\n\t\tPurposeKey,\n\t\tMethodKey,\n\t\tBudgetTypeKey = BudgetKey,\n\t\tBudgetName,\n\t\tBudgetType,\n\t\tCompanyKey,\n\t\tCompany,\n\t\tLocationKey,\n\t\tLocation,\n\t\tLanguageKey,\n\t\tDWH_LoadDate,\n\t\tGrossSpend,\n\t\tHash,\n\t\tChannel,\n\t\tMedium,\n\t\tFee\n\t)) ~> InsertFactMarketingActivity"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CNCT_lkpGeneralLedger')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "CONNECT"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "DL_CNCT_lkpGeneralLedger",
                                "type": "DatasetReference"
                            },
                            "name": "CNCTlkpGeneralLedger"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ODS_CNCT_lkpGeneralLedger",
                                "type": "DatasetReference"
                            },
                            "name": "ODSlkpGeneralLedger"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AlterRow1"
                        }
                    ],
                    "script": "source(output(\n\t\tGeneralLedgerID as integer,\n\t\tGeneralLedgerSortOrder as integer,\n\t\tGeneralLedgerDescription as string,\n\t\tGeneralLedgerDescriptionShort as string,\n\t\tQuickBooksDescription as string,\n\t\tQuickBooksAccountType as string,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> CNCTlkpGeneralLedger\nCNCTlkpGeneralLedger alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tGeneralLedgerID as integer,\n\t\tGeneralLedgerSortOrder as integer,\n\t\tGeneralLedgerDescription as string,\n\t\tGeneralLedgerDescriptionShort as string,\n\t\tQuickBooksDescription as string,\n\t\tQuickBooksAccountType as string,\n\t\tIsActiveFlag as boolean,\n\t\tCreateDate as timestamp,\n\t\tCreateUser as string,\n\t\tLastUpdate as timestamp,\n\t\tLastUpdateUser as string,\n\t\tUpdateStamp as binary\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['GeneralLedgerID'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSlkpGeneralLedger"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimCampaign')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Campaign",
                                "type": "DatasetReference"
                            },
                            "name": "ODSCampaign"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimStatus",
                                "type": "DatasetReference"
                            },
                            "name": "DimStatus"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimAgency",
                                "type": "DatasetReference"
                            },
                            "name": "DimAgency"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCurrency",
                                "type": "DatasetReference"
                            },
                            "name": "DimCurrency"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimPromotion",
                                "type": "DatasetReference"
                            },
                            "name": "DimPromotion"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimChannel",
                                "type": "DatasetReference"
                            },
                            "name": "DimChannel"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimLanguage",
                                "type": "DatasetReference"
                            },
                            "name": "DimLanguage"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimMedia",
                                "type": "DatasetReference"
                            },
                            "name": "DimMedia"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_TollFree",
                                "type": "DatasetReference"
                            },
                            "name": "ODSTollFree"
                        },
                        {
                            "dataset": {
                                "referenceName": "ODS_Campaign_Old_Prod",
                                "type": "DatasetReference"
                            },
                            "name": "ODSOldCampaing"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCampaign",
                                "type": "DatasetReference"
                            },
                            "name": "UpsertDimCampaign"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SelectCampaignColumns"
                        },
                        {
                            "name": "SelectAgencyColumns"
                        },
                        {
                            "name": "FilterAgencySource"
                        },
                        {
                            "name": "JoinAgency"
                        },
                        {
                            "name": "SelectCurrencyColumns"
                        },
                        {
                            "name": "FilterCurrencySource"
                        },
                        {
                            "name": "JoinCurrency"
                        },
                        {
                            "name": "SelectPromotionColumns"
                        },
                        {
                            "name": "JoinPromotion"
                        },
                        {
                            "name": "Select1ChannelColumns"
                        },
                        {
                            "name": "FilterChannelSource"
                        },
                        {
                            "name": "JoinChannel"
                        },
                        {
                            "name": "SelectStatusColumns"
                        },
                        {
                            "name": "FilterStatusBySourceSystemAndgroup"
                        },
                        {
                            "name": "JoinStatus"
                        },
                        {
                            "name": "SelectLanguagecolumns"
                        },
                        {
                            "name": "FilterLanguageSource"
                        },
                        {
                            "name": "JoinLanguage"
                        },
                        {
                            "name": "SelectMediaColumns"
                        },
                        {
                            "name": "FilterMediaSource"
                        },
                        {
                            "name": "JoinMedia"
                        },
                        {
                            "name": "SelectLastCampaignColumns"
                        },
                        {
                            "name": "AddCustomColumns"
                        },
                        {
                            "name": "AllowUpsert"
                        },
                        {
                            "name": "SelectTollFree"
                        },
                        {
                            "name": "SelectOldCampaing"
                        },
                        {
                            "name": "JoinOldCampaing"
                        },
                        {
                            "name": "JoinTollFree"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer (3500)\n}\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tName as string,\n\t\tParentId as string,\n\t\tType as string,\n\t\tRecordTypeId as string,\n\t\tStatus as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tCurrencyIsoCode as string,\n\t\tExpectedRevenue as decimal(38,18),\n\t\tBudgetedCost as decimal(38,18),\n\t\tActualCost as decimal(38,18),\n\t\tExpectedResponse as decimal(38,18),\n\t\tNumberSent as decimal(38,18),\n\t\tIsActive as boolean,\n\t\tDescription as string,\n\t\tNumberOfLeads as integer,\n\t\tNumberOfConvertedLeads as integer,\n\t\tNumberOfContacts as integer,\n\t\tNumberOfResponses as integer,\n\t\tNumberOfOpportunities as integer,\n\t\tNumberOfWonOpportunities as integer,\n\t\tAmountAllOpportunities as decimal(38,18),\n\t\tAmountWonOpportunities as decimal(38,18),\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tCampaignMemberRecordTypeId as string,\n\t\tChannel__c as string,\n\t\tCompany__c as string,\n\t\tExternal_Id__c as string,\n\t\tLanguage__c as string,\n\t\tSourceCode_L__c as string,\n\t\tPromo_Code__c as string,\n\t\tTollFreeNumber__c as string,\n\t\tLocation__c as string,\n\t\tMedia__c as string,\n\t\tFormat__c as string,\n\t\tAudience__c as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: true) ~> ODSCampaign\nsource(output(\n\t\tStatusKey as integer,\n\t\tHash as string,\n\t\tStatusName as string,\n\t\tStatusGroup as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as integer,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimStatus\nsource(output(\n\t\tAgencyKey as integer,\n\t\tAgencyName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimAgency\nsource(output(\n\t\tCurrencyKey as integer,\n\t\tCurrencyName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimCurrency\nsource(output(\n\t\tPromotionkey as integer,\n\t\tPromotionId as string,\n\t\tPromotionName as string,\n\t\tPromotionCurrency as string,\n\t\tPromotionLongName as string,\n\t\tDiscountType as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tIsActive as boolean,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimPromotion\nsource(output(\n\t\tChannelKey as integer,\n\t\tChannelName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimChannel\nsource(output(\n\t\tLanguageKey as integer,\n\t\tLanguageName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimLanguage\nsource(output(\n\t\tMediaKey as integer,\n\t\tMediaName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimMedia\nsource(output(\n\t\tId as string,\n\t\tOwnerId as string,\n\t\tIsDeleted as boolean,\n\t\tName as string,\n\t\tCurrencyIsoCode as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tACEDescription__c as string,\n\t\tActiveCampaignsDesktop__c as decimal(38,18),\n\t\tActiveCampaignsMobile__c as decimal(38,18),\n\t\tCompany__c as string,\n\t\tDNIS__c as decimal(38,18),\n\t\tDescription__c as string,\n\t\tLanguageCode__c as decimal(38,18),\n\t\tLocationCode__c as decimal(38,18),\n\t\tMisc_Code__c as decimal(38,18),\n\t\tNotes__c as string,\n\t\tNumber__c as string,\n\t\tPDNIS__c as decimal(38,18),\n\t\tPromoCode__c as string,\n\t\tSourceCode__c as string,\n\t\tTotalActiveCampaigns__c as decimal(38,18),\n\t\tTotalCampaignsDesktop__c as decimal(38,18),\n\t\tTotalCampaignsMobile__c as decimal(38,18),\n\t\tTotalCampaigns__c as decimal(38,18),\n\t\tExternal_ID__c as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSTollFree\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tName as string,\n\t\tParentId as string,\n\t\tType as string,\n\t\tRecordTypeId as string,\n\t\tStatus as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tCurrencyIsoCode as string,\n\t\tExpectedRevenue as decimal(38,18),\n\t\tBudgetedCost as decimal(38,18),\n\t\tActualCost as decimal(38,18),\n\t\tExpectedResponse as decimal(38,18),\n\t\tNumberSent as decimal(38,18),\n\t\tIsActive as boolean,\n\t\tDescription as string,\n\t\tCampaignImageId as string,\n\t\tNumberOfLeads as integer,\n\t\tNumberOfConvertedLeads as integer,\n\t\tNumberOfContacts as integer,\n\t\tNumberOfResponses as integer,\n\t\tNumberOfOpportunities as integer,\n\t\tNumberOfWonOpportunities as integer,\n\t\tAmountAllOpportunities as decimal(38,18),\n\t\tAmountWonOpportunities as decimal(38,18),\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tCampaignMemberRecordTypeId as string,\n\t\tPromoCode__c as string,\n\t\tSourceCode__c as string,\n\t\tPromoCodeName__c as string,\n\t\tChannel__c as string,\n\t\tLocation__c as string,\n\t\tLanguage__c as string,\n\t\tMedia__c as string,\n\t\tSource__c as string,\n\t\tGoal__c as string,\n\t\tFormat__c as string,\n\t\tACE_Decription__c as string,\n\t\tGender__c as string,\n\t\tCampaignType__c as string,\n\t\tCommunicationType__c as string,\n\t\tToll_Free_Number__c as string,\n\t\tDNIS__c as string,\n\t\tSourceCode_L__c as string,\n\t\tSourceID_L__c as string,\n\t\tSourceName_L__c as string,\n\t\tIsInHouseSourceFlag_L__c as string,\n\t\tPhoneID_L__c as string,\n\t\tNumber_L__c as string,\n\t\tNumberTypeID_L__c as string,\n\t\tMediaID_L__c as string,\n\t\tNumberType_L__c as string,\n\t\tMediaCode_L__c as string,\n\t\tMedia_L__c as string,\n\t\tLevel02Location_L__c as string,\n\t\tNotes_L__c as string,\n\t\tCreationDate_L__c as string,\n\t\tLastUpdateDate_L__c as string,\n\t\tLevel02LocationCode_L__c as string,\n\t\tLevel05ID_L__c as string,\n\t\tLevel05CreativeCode_L__c as string,\n\t\tLevel05Creative_L__c as string,\n\t\tLevel03ID_L__c as string,\n\t\tLevel03LanguageCode_L__c as string,\n\t\tLevel03Language_L__c as string,\n\t\tLevel04ID_L__c as string,\n\t\tLevel04FormatCode_L__c as string,\n\t\tLevel04Format_L__c as string,\n\t\tPromo_Code_L__c as string,\n\t\tPromoCodeDisplay__c as string,\n\t\tTollFreeNumberMobile__c as string,\n\t\tDNISMobile__c as decimal(38,18),\n\t\tURLDomain__c as string,\n\t\tReferrer__c as string,\n\t\tCampaign_Counter__c as string,\n\t\tTollFreeName__c as string,\n\t\tTollFreeMobileName__c as string,\n\t\tSourceCodeNumber__c as string,\n\t\tSCNumber__c as string,\n\t\tDPNCode__c as string,\n\t\tDWCCode__c as string,\n\t\tDWFCode__c as string,\n\t\tGenerateCodes__c as boolean,\n\t\tMPNCode__c as string,\n\t\tMWCCode__c as string,\n\t\tMWFCode__c as string,\n\t\tShortcodeChannel__c as string,\n\t\tShortcodeFormat__c as string,\n\t\tShortcodeMedia__c as string,\n\t\tShortcodeOrigin__c as string,\n\t\tWebCode__c as string,\n\t\tShortcodeLocation__c as string,\n\t\tDialerMiscCode__c as string,\n\t\tCompany__c as string,\n\t\tAction_Criteria__c as string,\n\t\tExcluded_Centers__c as string,\n\t\tGender_Criteria__c as string,\n\t\tLanguage_Criteria__c as string,\n\t\tLeads_Created_From__c as timestamp,\n\t\tLeads_Created_Until__c as timestamp,\n\t\tPriority__c as string,\n\t\tDB_Campaign_Tactic__c as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSOldCampaing\nODSCampaign select(mapColumn(\n\t\tCampaignId = Id,\n\t\tCampaignName = Name,\n\t\tIsDeleted,\n\t\tCampaignDescription = Description,\n\t\tAgencyName = Type,\n\t\tCampaignStatus = Status,\n\t\tStartDate,\n\t\tEndDate,\n\t\tCurrencyIsoCode,\n\t\tPromoCode = Promo_Code__c,\n\t\tCampaignChannel = Channel__c,\n\t\tCampaignLocation = Location__c,\n\t\tCampaignLanguage = Language__c,\n\t\tCampaignMedia = Media__c,\n\t\tSourceCode = SourceCode_L__c,\n\t\tBudgetedCost,\n\t\tActualCost,\n\t\tIsActive,\n\t\tCampaignFormat = Format__c,\n\t\tExternalID = External_Id__c,\n\t\tTollFreeNumber = TollFreeNumber__c\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCampaignColumns\nDimAgency select(mapColumn(\n\t\tAgencyKey,\n\t\tDimAgencyName = AgencyName,\n\t\tSourceSystem\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAgencyColumns\nSelectAgencyColumns filter(lower(SourceSystem) == 'salesforce') ~> FilterAgencySource\nSelectCampaignColumns, FilterAgencySource join(lower(trim(AgencyName)) == lower(trim(DimAgencyName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinAgency\nDimCurrency select(mapColumn(\n\t\tCurrencyKey,\n\t\tCurrencyName,\n\t\tSourceSystem\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCurrencyColumns\nSelectCurrencyColumns filter(lower(SourceSystem) == 'salesforce') ~> FilterCurrencySource\nJoinAgency, FilterCurrencySource join(lower(trim(CurrencyIsoCode)) == lower(trim(CurrencyName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCurrency\nDimPromotion select(mapColumn(\n\t\tPromotionkey,\n\t\tDimPromoName = PromotionName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPromotionColumns\nJoinCurrency, SelectPromotionColumns join(lower(trim(PromoCode)) == lower(trim(DimPromoName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinPromotion\nDimChannel select(mapColumn(\n\t\tChannelKey,\n\t\tDimChannelName = ChannelName,\n\t\tSourceSystem\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1ChannelColumns\nSelect1ChannelColumns filter(lower(SourceSystem) == 'salesforce') ~> FilterChannelSource\nJoinPromotion, FilterChannelSource join(lower(trim(CampaignChannel)) == lower(trim(DimChannelName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinChannel\nDimStatus select(mapColumn(\n\t\tStatusKey,\n\t\tStatusName,\n\t\tStatusGroup,\n\t\tSourceSystem\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectStatusColumns\nSelectStatusColumns filter(lower(SourceSystem) == 'salesforce' && lower(StatusGroup) == 'campaign') ~> FilterStatusBySourceSystemAndgroup\nJoinChannel, FilterStatusBySourceSystemAndgroup join(lower(trim(CampaignStatus)) == lower(trim(StatusName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinStatus\nDimLanguage select(mapColumn(\n\t\tLanguageKey,\n\t\tLanguageName,\n\t\tSourceSystem\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLanguagecolumns\nSelectLanguagecolumns filter(lower(SourceSystem) == 'salesforce') ~> FilterLanguageSource\nJoinStatus, FilterLanguageSource join(lower(trim(CampaignLanguage)) == lower(trim(LanguageName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinLanguage\nDimMedia select(mapColumn(\n\t\tMediaKey,\n\t\tMediaName,\n\t\tSourceSystem\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectMediaColumns\nSelectMediaColumns filter(lower(SourceSystem) == 'salesforce') ~> FilterMediaSource\nJoinLanguage, FilterMediaSource join(lower(trim(CampaignMedia)) == lower(trim(MediaName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinMedia\nJoinTollFree select(mapColumn(\n\t\teach(match((instr(name,'SourceSystem')==0)))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLastCampaignColumns\nSelectLastCampaignColumns derive(AgencyKey = coalesce(AgencyKey, -1),\n\t\tStatusKey = coalesce(StatusKey, -1),\n\t\tCurrencyKey = coalesce(CurrencyKey, -1),\n\t\tPromokey = coalesce(Promotionkey, -1),\n\t\tChannelKey = coalesce(ChannelKey, -1),\n\t\tLanguageKey = coalesce(LanguageKey, -1),\n\t\tMediaKey = coalesce(MediaKey, -1),\n\t\tReferralFlag = toBoolean(iif(in(['7011V000000z7JjQAI','701f4000000U56LAAS','701f4000000U5JiAAK','701f4000000U5JiAAK','701f4000000U5KOAA0','701f4000000U5rnAAC','701f4000000U5SkAAK','701f4000000U7JZAA0','701f4000000U7NvAAK'], ExternalID), '1', '0')),\n\t\tDWH_LoadDate = currentTimestamp(),\n\t\tDWH_LastUpdateDate = currentTimestamp(),\n\t\tSourceSystem = 'Salesforce') ~> AddCustomColumns\nAddCustomColumns alterRow(upsertIf(true())) ~> AllowUpsert\nODSTollFree select(mapColumn(\n\t\tTollFreeID = Id,\n\t\tNewTollFreeName = Name,\n\t\tExternal_ID__c\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTollFree\nODSOldCampaing select(mapColumn(\n\t\tOldCampaignId = Id,\n\t\tTollFreeMobileNameOld = TollFreeMobileName__c\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOldCampaing\nJoinMedia, SelectOldCampaing join(ExternalID == OldCampaignId,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinOldCampaing\nJoinOldCampaing, SelectTollFree join(TollFreeNumber == TollFreeID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinTollFree\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCampaignKey as integer,\n\t\tCampaignId as string,\n\t\tCampaignName as string,\n\t\tCampaignDescription as string,\n\t\tAgencyKey as integer,\n\t\tAgencyName as string,\n\t\tCampaignStatus as string,\n\t\tStatusKey as integer,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tCurrencyIsoCode as string,\n\t\tCurrencyKey as integer,\n\t\tPromoCode as string,\n\t\tPromotioKey as integer,\n\t\tCampaignChannel as string,\n\t\tChannelKey as integer,\n\t\tCampaignLocation as string,\n\t\tCampaignLanguage as string,\n\t\tLanguageKey as integer,\n\t\tCampaignMedia as string,\n\t\tMediaKey as integer,\n\t\tCampaignSource as string,\n\t\tSourceKey as integer,\n\t\tCampaigngender as string,\n\t\tGenderKey as integer,\n\t\tCampaignType as string,\n\t\tBudgetedCost as decimal(38,18),\n\t\tActualCost as decimal(38,18),\n\t\tDNIS as string,\n\t\tReferrer as string,\n\t\tReferralFlag as boolean,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string,\n\t\tCampaignFormat as string,\n\t\tCampaignDeviceType as string,\n\t\tCampaignDNIS as string,\n\t\tCampaignTactic as string,\n\t\tCampaignPromoDescription as string,\n\t\tSourceCode as string,\n\t\tTollFreeName as string,\n\t\tTollFreeMobileName as string,\n\t\tTollFreeNumber as string,\n\t\tExternalID as string,\n\t\tIsDeleted as boolean\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['CampaignId'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCampaignId,\n\t\tCampaignName,\n\t\tCampaignDescription,\n\t\tAgencyKey,\n\t\tAgencyName,\n\t\tCampaignStatus,\n\t\tStatusKey,\n\t\tStartDate,\n\t\tEndDate,\n\t\tCurrencyIsoCode,\n\t\tCurrencyKey,\n\t\tPromoCode,\n\t\tPromotioKey = Promokey,\n\t\tCampaignChannel,\n\t\tChannelKey,\n\t\tCampaignLocation,\n\t\tCampaignLanguage,\n\t\tLanguageKey,\n\t\tCampaignMedia,\n\t\tMediaKey,\n\t\tBudgetedCost,\n\t\tActualCost,\n\t\tReferralFlag,\n\t\tDWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive,\n\t\tSourceSystem,\n\t\tCampaignFormat,\n\t\tSourceCode,\n\t\tTollFreeName = NewTollFreeName,\n\t\tTollFreeMobileName = TollFreeMobileNameOld,\n\t\tTollFreeNumber,\n\t\tExternalID,\n\t\tIsDeleted\n\t)) ~> UpsertDimCampaign"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/FactCampaignHistory')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_CampaignMember",
                                "type": "DatasetReference"
                            },
                            "name": "ODSCampaignMember"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimLead",
                                "type": "DatasetReference"
                            },
                            "name": "DimLead"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCampaign",
                                "type": "DatasetReference"
                            },
                            "name": "DimCampaign"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimStatus",
                                "type": "DatasetReference"
                            },
                            "name": "DimStatus"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimGeography",
                                "type": "DatasetReference"
                            },
                            "name": "DimGeography"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimDate",
                                "type": "DatasetReference"
                            },
                            "name": "DimDate"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimTimeOfDay",
                                "type": "DatasetReference"
                            },
                            "name": "DimTimeOfDay"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_FactCampaignHistory",
                                "type": "DatasetReference"
                            },
                            "name": "UpsertCampaignHistory"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FilterByLastModified"
                        },
                        {
                            "name": "SelectColumnsODS"
                        },
                        {
                            "name": "SelectLeadColumns"
                        },
                        {
                            "name": "JoinDimLead"
                        },
                        {
                            "name": "SelectCampaignColumn"
                        },
                        {
                            "name": "SelectStatusColumns"
                        },
                        {
                            "name": "JoinCampaign"
                        },
                        {
                            "name": "JoinStatus"
                        },
                        {
                            "name": "FilterStatusGroupAndSource"
                        },
                        {
                            "name": "SelectGeographyColumns"
                        },
                        {
                            "name": "JoinGeography"
                        },
                        {
                            "name": "Allow"
                        },
                        {
                            "name": "AddKeyColumns"
                        },
                        {
                            "name": "SelectDateColumns"
                        },
                        {
                            "name": "JoinDate"
                        },
                        {
                            "name": "SelectTimeOfDayColumns"
                        },
                        {
                            "name": "JoinTimeOfDay"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tCampaignId as string,\n\t\tLeadId as string,\n\t\tContactId as string,\n\t\tStatus as string,\n\t\tHasResponded as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tFirstRespondedDate as timestamp,\n\t\tCurrencyIsoCode as string,\n\t\tSalutation as string,\n\t\tName as string,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tTitle as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tEmail as string,\n\t\tPhone as string,\n\t\tFax as string,\n\t\tMobilePhone as string,\n\t\tDescription as string,\n\t\tDoNotCall as boolean,\n\t\tHasOptedOutOfEmail as boolean,\n\t\tHasOptedOutOfFax as boolean,\n\t\tLeadSource as string,\n\t\tCompanyOrAccount as string,\n\t\tType as string,\n\t\tLeadOrContactId as string,\n\t\tLeadOrContactOwnerId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSCampaignMember\nsource(output(\n\t\tLeadKey as integer,\n\t\tLeadId as string,\n\t\tLeadFirstName as string,\n\t\tLeadLastname as string,\n\t\tLeadFullName as string,\n\t\tLeadBirthday as date,\n\t\tLeadAddress as string,\n\t\tIsActive as boolean,\n\t\tIsConsultFormComplete as boolean,\n\t\tIsvalid as boolean,\n\t\tLeadEmail as string,\n\t\tLeadPhone as string,\n\t\tLeadMobilePhone as string,\n\t\tNorwoodScale as string,\n\t\tLudwigScale as string,\n\t\tHairLossInFamily as string,\n\t\tHairLossProductUsed as string,\n\t\tHairLossSpot as string,\n\t\tGeographyKey as integer,\n\t\tLeadPostalCode as string,\n\t\tEthnicityKey as integer,\n\t\tLeadEthnicity as string,\n\t\tGenderKey as integer,\n\t\tLeadGender as string,\n\t\tCenterKey as integer,\n\t\tCenterNumber as string,\n\t\tLanguageKey as integer,\n\t\tLeadLanguage as string,\n\t\tStatusKey as integer,\n\t\tLeadStatus as string,\n\t\tLeadCreatedDate as timestamp,\n\t\tCreatedDateKey as integer,\n\t\tCreatedTimeKey as integer,\n\t\tLeadLastActivityDate as timestamp,\n\t\tLastActivityDateKey as integer,\n\t\tLastActivityTimekey as integer,\n\t\tDISCStyle as string,\n\t\tLeadMaritalStatus as string,\n\t\tLeadConsultReady as integer,\n\t\tConsultationFormReady as integer,\n\t\tIsDeleted as boolean,\n\t\tDoNotCall as boolean,\n\t\tDoNotContact as boolean,\n\t\tDoNotEmail as boolean,\n\t\tDoNotMail as boolean,\n\t\tDoNotText as boolean,\n\t\tCreateUser as string,\n\t\tUpdateUser as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tMaritalStatusKey as integer,\n\t\tLeadSource as string,\n\t\tSourceKey as integer,\n\t\tOriginalCommMethodkey as integer,\n\t\tRecentCommMethodKey as integer,\n\t\tCommunicationMethod as string,\n\t\tIsValidLeadName as boolean,\n\t\tIsValidLeadLastName as boolean,\n\t\tIsValidLeadFullName as boolean,\n\t\tIsValidLeadPhone as boolean,\n\t\tIsValidLeadMobilePhone as boolean,\n\t\tIsValidLeadEmail as boolean,\n\t\tReviewNeeded as boolean,\n\t\tConvertedContactId as string,\n\t\tConvertedAccountId as string,\n\t\tConvertedOpportunityId as string,\n\t\tConvertedDate as timestamp,\n\t\tLastModifiedDate as timestamp,\n\t\tSourceSystem as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tLeadExternalID as string,\n\t\tServiceTerritoryID as string,\n\t\tOriginalCampaignId as string,\n\t\tOriginalCampaignKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimLead\nsource(output(\n\t\tCampaignKey as integer,\n\t\tCampaignId as string,\n\t\tCampaignName as string,\n\t\tCampaignDescription as string,\n\t\tAgencyKey as integer,\n\t\tAgencyName as string,\n\t\tCampaignStatus as string,\n\t\tStatusKey as integer,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tCurrencyIsoCode as string,\n\t\tCurrencyKey as integer,\n\t\tPromoCode as string,\n\t\tPromotioKey as integer,\n\t\tCampaignChannel as string,\n\t\tChannelKey as integer,\n\t\tCampaignLocation as string,\n\t\tCampaignLanguage as string,\n\t\tLanguageKey as integer,\n\t\tCampaignMedia as string,\n\t\tMediaKey as integer,\n\t\tCampaignSource as string,\n\t\tSourceKey as integer,\n\t\tCampaigngender as string,\n\t\tGenderKey as integer,\n\t\tCampaignType as string,\n\t\tBudgetedCost as decimal(38,18),\n\t\tActualCost as decimal(38,18),\n\t\tDNIS as string,\n\t\tReferrer as string,\n\t\tReferralFlag as boolean,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string,\n\t\tCampaignFormat as string,\n\t\tCampaignDeviceType as string,\n\t\tCampaignDNIS as string,\n\t\tCampaignTactic as string,\n\t\tCampaignPromoDescription as string,\n\t\tSourceCode as string,\n\t\tTollFreeName as string,\n\t\tTollFreeMobileName as string,\n\t\tTollFreeNumber as string,\n\t\tExternalID as string,\n\t\tIsDeleted as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimCampaign\nsource(output(\n\t\tStatusKey as integer,\n\t\tHash as string,\n\t\tStatusName as string,\n\t\tStatusGroup as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as integer,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimStatus\nsource(output(\n\t\tGeographyKey as integer,\n\t\tDigitZIPCode as string,\n\t\tLongitudeZIPCode as double,\n\t\tLatitudeZIPCode as double,\n\t\tZIPCodeClassification as string,\n\t\tNameOfCityOrORG as string,\n\t\tFIPSCode as integer,\n\t\tTwoLetterAbbrevForState as string,\n\t\tFullNameOfStateOrTerritory as string,\n\t\tFIPSCountyCode as integer,\n\t\tNameOfCounty as string,\n\t\tMetroStatisticalAreaCode as integer,\n\t\tSingleAreaCodeForZIPCode as integer,\n\t\tMultipleAreaCodesForZIPCode as string,\n\t\tTimeZoneForZIPCode as string,\n\t\tHrsDiff as integer,\n\t\tZIPCodeObeysDaylightSavings as boolean,\n\t\tUSPSPostOfficeName as string,\n\t\tUSPSAlternateNamesOfCity as string,\n\t\tLocalAlternateNamesOfCity as string,\n\t\tCleanCITYNameForGeocoding as string,\n\t\tCleanSTATENAMEForGeocoding as string,\n\t\tFIPSStateNumericCode as integer,\n\t\tName as string,\n\t\tDMADescription as string,\n\t\tDMAMarketRegion as string,\n\t\tDMACode as integer,\n\t\tDMANameNielsen as string,\n\t\tDMANameInternal as string,\n\t\tDMANameAlternate as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tSourceSystem as string,\n\t\tCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimGeography\nsource(output(\n\t\tDateKey as integer,\n\t\tFullDate as date,\n\t\tISODate as string,\n\t\tYearNumber as integer,\n\t\tYearQuarterNumber as integer,\n\t\tYearMonthNumber as integer,\n\t\tYearQuarterMonthNumber as integer,\n\t\tYearWeekNumber as integer,\n\t\tDateName as string,\n\t\tWeekName as string,\n\t\tWeekNameWithYear as string,\n\t\tWeekShortName as string,\n\t\tWeekShortNameWithYear as string,\n\t\tWeekNumber as integer,\n\t\tFirstDateOfWeek as date,\n\t\tLastDateOfWeek as date,\n\t\tDayOfWeek as integer,\n\t\tDayOfWeekName as string,\n\t\tIsWeekday as boolean,\n\t\tIsWeekend as boolean,\n\t\tMonthName as string,\n\t\tMonthNameWithYear as string,\n\t\tMonthShortName as string,\n\t\tMonthShortNameWithYear as string,\n\t\tMonthNumber as integer,\n\t\tFirstDateOfMonth as date,\n\t\tLastDateOfMonth as date,\n\t\tDayOfMonth as integer,\n\t\tDayOfMonthName as string,\n\t\tIsLastDayOfMonth as boolean,\n\t\tQuarterName as string,\n\t\tQuarterNameWithYear as string,\n\t\tQuarterShortName as string,\n\t\tQuarterShortNameWithYear as string,\n\t\tQuarterNumber as integer,\n\t\tFirstDateOfQuarter as date,\n\t\tLastDateOfQuarter as date,\n\t\tDayOfQuarter as integer,\n\t\tDayOfQuarterName as string,\n\t\tHalfName as string,\n\t\tHalfNameWithYear as string,\n\t\tHalfShortName as string,\n\t\tHalfShortNameWithYear as string,\n\t\tHalfNumber as integer,\n\t\tYearHalfNumber as integer,\n\t\tFirstDateOfHalf as date,\n\t\tLastDateOfHalf as date,\n\t\tDayOfHalf as integer,\n\t\tDayOfHalfName as string,\n\t\tYearName as string,\n\t\tYearShortName as string,\n\t\tFirstDateOfYear as date,\n\t\tLastDateOfYear as date,\n\t\tDayOfYear as integer,\n\t\tDayOfYearName as string,\n\t\tCalendarQuarter as integer,\n\t\tCalendarYear as integer,\n\t\tCalendarYearMonth as string,\n\t\tCalendarYearQtr as string,\n\t\tFiscalYear as integer,\n\t\tFiscalWeek as integer,\n\t\tFiscalPeriod as integer,\n\t\tFiscalMonth as integer,\n\t\tFiscalQuarter as integer,\n\t\tFiscalYearFiscalWeek as integer,\n\t\tFiscalYearFiscalPeriod as integer,\n\t\tFiscalYearFiscalMonth as integer,\n\t\tFiscalYearFiscalQuarter as integer,\n\t\tFiscalYearFiscalQuarterFiscalMonth as integer,\n\t\tFiscalYearName as string,\n\t\tFiscalYearLongName as string,\n\t\tFiscalYearShortName as string,\n\t\tFiscalQuarterName as string,\n\t\tFiscalQuarterLongName as string,\n\t\tFiscalQuarterNameWithYear as string,\n\t\tFiscalQuarterLongNameWithYear as string,\n\t\tFiscalQuarterShortName as string,\n\t\tFiscalQuarterShortNameWithYear as string,\n\t\tFiscalMonthName as string,\n\t\tFiscalMonthNameWithYear as string,\n\t\tFiscalMonthShortName as string,\n\t\tFiscalMonthShortNameWithYear as string,\n\t\tFiscalMonthCalendarShortName as string,\n\t\tFiscalMonthCalendarShortNameWithYear as string,\n\t\tFiscalWeekName as string,\n\t\tFiscalWeekLongName as string,\n\t\tFiscalWeekNameWithYear as string,\n\t\tFiscalWeekLongNameWithYear as string,\n\t\tFiscalWeekShortName as string,\n\t\tFiscalWeekShortNameWithYear as string,\n\t\tFiscalPeriodName as string,\n\t\tFiscalPeriodLongName as string,\n\t\tFiscalPeriodNameWithYear as string,\n\t\tFiscalPeriodLongNameWithYear as string,\n\t\tFiscalPeriodShortName as string,\n\t\tFiscalPeriodShortNameWithYear as string,\n\t\tCummWorkdays as integer,\n\t\tMonthWorkdays as integer,\n\t\tMonthWorkdaysTotal as integer,\n\t\tIsHoliday as boolean,\n\t\tMonthOfQuarter as integer,\n\t\tBroadcastYearBroadcastQuarter as integer,\n\t\tBroadcastYearBroadcastMonth as integer,\n\t\tBroadcastYearBroadcastWeek as integer,\n\t\tBroadcastYearQtrMonthWeekDay as integer,\n\t\tBroadcastYearQtrMonth as integer,\n\t\tBroadcastYearShortName as string,\n\t\tBroadcastYearLongName as string,\n\t\tBroadcastYeartName as string,\n\t\tBroadcastQuarterName as string,\n\t\tBroadcastWeekName as string,\n\t\tBroadcastDayName as string,\n\t\tmsrepl_tran_version as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimDate\nsource(output(\n\t\tTimeOfDayKey as integer,\n\t\tTime as string,\n\t\tTime24 as string,\n\t\tTime24HM as string,\n\t\tHour as integer,\n\t\tHourC as integer,\n\t\tHourName as string,\n\t\tMinute as integer,\n\t\tMinuteC as integer,\n\t\tMinuteKey as integer,\n\t\tMinuteName as string,\n\t\tSecond as integer,\n\t\tHour24 as integer,\n\t\tAM as string,\n\t\t{30MinuteInterval} as integer,\n\t\tDayPart as string,\n\t\tTimeNumber as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimTimeOfDay\nODSCampaignMember filter(LastModifiedDate <= currentTimestamp() && toDate(LastModifiedDate) > toDate(addDays(currentTimestamp(), $DaysToLoad*-1))) ~> FilterByLastModified\nFilterByLastModified select(mapColumn(\n\t\tCampaignHistoryId = Id,\n\t\tFactDate = CreatedDate,\n\t\tCampaignId,\n\t\tLeadId,\n\t\tContactId,\n\t\tCompanyOrAccount,\n\t\tCampaignHistoryStatus = Status,\n\t\tIsDeleted,\n\t\tHasResponded,\n\t\tCreatedDate,\n\t\tCreatedById,\n\t\tLastModifiedDate,\n\t\tLastModifiedById,\n\t\tContactPostalCode = PostalCode,\n\t\tContactName = Name,\n\t\tContactCity = City,\n\t\tContactState = State,\n\t\tContactAddress = Street,\n\t\tContactCountry = Country,\n\t\tLeadSource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumnsODS\nDimLead select(mapColumn(\n\t\tLeadKey,\n\t\tLeadId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLeadColumns\nSelectColumnsODS, SelectLeadColumns join(SelectColumnsODS@LeadId == SelectLeadColumns@LeadId,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDimLead\nDimCampaign select(mapColumn(\n\t\tCampaignKey,\n\t\tCampaignId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCampaignColumn\nFilterStatusGroupAndSource select(mapColumn(\n\t\tStatusKey,\n\t\tHash,\n\t\tStatusName,\n\t\tStatusGroup,\n\t\tDWH_LoadDate,\n\t\tDWH_LastUpdateDate,\n\t\tIsActive,\n\t\tSourceSystem\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectStatusColumns\nJoinDimLead, SelectCampaignColumn join(SelectColumnsODS@CampaignId == SelectCampaignColumn@CampaignId,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCampaign\nJoinCampaign, SelectStatusColumns join(lower(trim(CampaignHistoryStatus)) == lower(trim(StatusName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinStatus\nDimStatus filter(lower(trim(StatusGroup)) == 'campaignmember' && lower(trim(StatusName)) == 'salesforce') ~> FilterStatusGroupAndSource\nDimGeography select(mapColumn(\n\t\tGeographyKey,\n\t\tDigitZIPCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectGeographyColumns\nJoinStatus, SelectGeographyColumns join(lower(trim(ContactPostalCode)) == trim(lower(DigitZIPCode)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinGeography\nAddKeyColumns alterRow(upsertIf(true())) ~> Allow\nJoinTimeOfDay derive(CampaignKey = coalesce(CampaignKey, -1),\n\t\tGeographyKey = coalesce(GeographyKey, -1),\n\t\tLeadKey = coalesce(LeadKey, -1),\n\t\tStatusKey = coalesce(StatusKey, -1),\n\t\tSourceSystem = 'Salesforce',\n\t\tFactDateKey = coalesce(DateKey, -1),\n\t\tFactTimeKey = coalesce(TimeOfDayKey, -1)) ~> AddKeyColumns\nDimDate select(mapColumn(\n\t\tDateKey,\n\t\tFullDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDateColumns\nJoinGeography, SelectDateColumns join(toDate(FactDate) == FullDate,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDate\nDimTimeOfDay select(mapColumn(\n\t\tMinute,\n\t\tSecond,\n\t\tHour24,\n\t\tTimeOfDayKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTimeOfDayColumns\nJoinDate, SelectTimeOfDayColumns join(hour(FactDate) == Hour24\n\t&& minute(FactDate) == Minute\n\t&& second(FactDate) == Second,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinTimeOfDay\nAllow sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCampaignHistoryId as string,\n\t\tFactDateKey as integer,\n\t\tFactTimeKey as integer,\n\t\tFactDate as timestamp,\n\t\tCampaignKey as integer,\n\t\tCampaignId as string,\n\t\tLeadKey as integer,\n\t\tLeadId as string,\n\t\tAccountKey as integer,\n\t\tAccountId as string,\n\t\tContactId as string,\n\t\tStatusKey as integer,\n\t\tCampaignHistoryStatus as string,\n\t\tIsDeleted as boolean,\n\t\tHasResponded as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tContactName as string,\n\t\tContactAddress as string,\n\t\tContactCity as string,\n\t\tContactState as string,\n\t\tContactPostalCode as string,\n\t\tContactCountry as string,\n\t\tGeographyKey as integer,\n\t\tSourceCode as string,\n\t\tLeadSource as string,\n\t\tSourceSystem as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['CampaignHistoryId'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCampaignHistoryId,\n\t\tFactDateKey,\n\t\tFactTimeKey,\n\t\tFactDate,\n\t\tCampaignKey,\n\t\tCampaignId = SelectColumnsODS@CampaignId,\n\t\tLeadKey,\n\t\tLeadId = SelectColumnsODS@LeadId,\n\t\tContactId,\n\t\tStatusKey,\n\t\tCampaignHistoryStatus,\n\t\tIsDeleted,\n\t\tHasResponded,\n\t\tCreatedDate = FactDate,\n\t\tCreatedById,\n\t\tLastModifiedDate,\n\t\tLastModifiedById,\n\t\tContactName,\n\t\tContactAddress,\n\t\tContactCity,\n\t\tContactState,\n\t\tContactPostalCode,\n\t\tContactCountry,\n\t\tGeographyKey,\n\t\tLeadSource,\n\t\tSourceSystem\n\t)) ~> UpsertCampaignHistory"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimAccount')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Synapse/DWH"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ODS_SF_Account",
                                "type": "DatasetReference"
                            },
                            "name": "ODSAccount"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimDate",
                                "type": "DatasetReference"
                            },
                            "name": "DimDate"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimTimeOfDay",
                                "type": "DatasetReference"
                            },
                            "name": "DimTimeOfDay"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimSystemUser",
                                "type": "DatasetReference"
                            },
                            "name": "DimSystemUser"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimGeography",
                                "type": "DatasetReference"
                            },
                            "name": "DimGeography"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimEthnicity",
                                "type": "DatasetReference"
                            },
                            "name": "DimEthnicity"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimGender",
                                "type": "DatasetReference"
                            },
                            "name": "DimGender"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimMaritalStatus",
                                "type": "DatasetReference"
                            },
                            "name": "DimMaritalStatus"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimCompany",
                                "type": "DatasetReference"
                            },
                            "name": "DimCompany"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimSource",
                                "type": "DatasetReference"
                            },
                            "name": "DimSource"
                        },
                        {
                            "dataset": {
                                "referenceName": "ASA_DimStatus",
                                "type": "DatasetReference"
                            },
                            "name": "DimStatus"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ASA_DimAccount",
                                "type": "DatasetReference"
                            },
                            "name": "UpsertDimAccount"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FilterLastModified"
                        },
                        {
                            "name": "SelectColumns"
                        },
                        {
                            "name": "SelectDateColumns"
                        },
                        {
                            "name": "JoinDate"
                        },
                        {
                            "name": "SelectTimeColumns"
                        },
                        {
                            "name": "JoinTimeOfDay"
                        },
                        {
                            "name": "FilterSourceSystem"
                        },
                        {
                            "name": "SelectCreatedUserColumn"
                        },
                        {
                            "name": "JoinSystemUserCreated"
                        },
                        {
                            "name": "JoinSystemUserLastModified"
                        },
                        {
                            "name": "SelectLastModifiedUserColumn"
                        },
                        {
                            "name": "SelectGeographyColumns"
                        },
                        {
                            "name": "JoinDimGeography"
                        },
                        {
                            "name": "FilterEthnicitySourceSystem"
                        },
                        {
                            "name": "SelectEthnicityColumns"
                        },
                        {
                            "name": "JoinEthnicity"
                        },
                        {
                            "name": "FilterGenderSourceSystem"
                        },
                        {
                            "name": "SelectGenderColumns"
                        },
                        {
                            "name": "JoinGender"
                        },
                        {
                            "name": "FilterMaritalStatusSourceSystem"
                        },
                        {
                            "name": "SelectMaritalStatusColumns"
                        },
                        {
                            "name": "JoinMaritalStatus"
                        },
                        {
                            "name": "FilterCompanySourceSystem"
                        },
                        {
                            "name": "SelectCompanyColumns"
                        },
                        {
                            "name": "JoinDimCompany"
                        },
                        {
                            "name": "FilterSourceSourceSystem"
                        },
                        {
                            "name": "SelectSourceColumns"
                        },
                        {
                            "name": "JoinSource"
                        },
                        {
                            "name": "CalculatedColumns"
                        },
                        {
                            "name": "AllowUpsert"
                        },
                        {
                            "name": "FilterDimStatus"
                        },
                        {
                            "name": "SelectStatusName"
                        },
                        {
                            "name": "JoinStatus"
                        }
                    ],
                    "script": "parameters{\n\tDaysToLoad as integer\n}\nsource(output(\n\t\tId as string,\n\t\tIsDeleted as boolean,\n\t\tMasterRecordId as string,\n\t\tName as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tSalutation as string,\n\t\tMiddleName as string,\n\t\tSuffix as string,\n\t\tType as string,\n\t\tRecordTypeId as string,\n\t\tParentId as string,\n\t\tBillingStreet as string,\n\t\tBillingCity as string,\n\t\tBillingState as string,\n\t\tBillingPostalCode as string,\n\t\tBillingCountry as string,\n\t\tBillingStateCode as string,\n\t\tBillingCountryCode as string,\n\t\tBillingLatitude as decimal(38,18),\n\t\tBillingLongitude as decimal(38,18),\n\t\tBillingGeocodeAccuracy as string,\n\t\tShippingStreet as string,\n\t\tShippingCity as string,\n\t\tShippingState as string,\n\t\tShippingPostalCode as string,\n\t\tShippingCountry as string,\n\t\tShippingStateCode as string,\n\t\tShippingCountryCode as string,\n\t\tShippingLatitude as decimal(38,18),\n\t\tShippingLongitude as decimal(38,18),\n\t\tShippingGeocodeAccuracy as string,\n\t\tPhone as string,\n\t\tWebsite as string,\n\t\tPhotoUrl as string,\n\t\tIndustry as string,\n\t\tNumberOfEmployees as integer,\n\t\tDescription as string,\n\t\tCurrencyIsoCode as string,\n\t\tOwnerId as string,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tSystemModstamp as timestamp,\n\t\tLastActivityDate as timestamp,\n\t\tLastViewedDate as timestamp,\n\t\tLastReferencedDate as timestamp,\n\t\tPersonContactId as string,\n\t\tIsPersonAccount as boolean,\n\t\tPersonMailingStreet as string,\n\t\tPersonMailingCity as string,\n\t\tPersonMailingState as string,\n\t\tPersonMailingPostalCode as string,\n\t\tPersonMailingCountry as string,\n\t\tPersonMailingStateCode as string,\n\t\tPersonMailingCountryCode as string,\n\t\tPersonMailingLatitude as decimal(38,18),\n\t\tPersonMailingLongitude as decimal(38,18),\n\t\tPersonMailingGeocodeAccuracy as string,\n\t\tPersonMobilePhone as string,\n\t\tPersonEmail as string,\n\t\tPersonTitle as string,\n\t\tPersonDepartment as string,\n\t\tPersonLastCURequestDate as timestamp,\n\t\tPersonLastCUUpdateDate as timestamp,\n\t\tPersonEmailBouncedReason as string,\n\t\tPersonEmailBouncedDate as timestamp,\n\t\tJigsaw as string,\n\t\tJigsawCompanyId as string,\n\t\tAccountSource as string,\n\t\tSicDesc as string,\n\t\tOperatingHoursId as string,\n\t\tActive__c as boolean,\n\t\tCompany__c as string,\n\t\tConectCreationDate__c as timestamp,\n\t\tConectLastUpdate__c as timestamp,\n\t\tExternal_Id__c as string,\n\t\tCount_Close_Won_Opportunities__c as decimal(38,18),\n\t\tCustomer_Status__c as string,\n\t\tDisc__pc as string,\n\t\tDoNotContact__pc as boolean,\n\t\tDoNotEmail__pc as boolean,\n\t\tDoNotMail__pc as boolean,\n\t\tDoNotText__pc as boolean,\n\t\tEthnicity__pc as string,\n\t\tGender__pc as string,\n\t\tHairLossExperience__pc as string,\n\t\tHairLossFamily__pc as string,\n\t\tHairLossOrVolume__pc as string,\n\t\tHairLossProductOther__pc as string,\n\t\tHairLossProductUsed__pc as string,\n\t\tHairLossSpot__pc as string,\n\t\tHardCopyPreferred__pc as boolean,\n\t\tLanguage__pc as string,\n\t\tMaritalStatus__pc as string,\n\t\tText_Reminder_Opt_In__pc as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> ODSAccount\nsource(output(\n\t\tDateKey as integer,\n\t\tFullDate as date,\n\t\tISODate as string,\n\t\tYearNumber as integer,\n\t\tYearQuarterNumber as integer,\n\t\tYearMonthNumber as integer,\n\t\tYearQuarterMonthNumber as integer,\n\t\tYearWeekNumber as integer,\n\t\tDateName as string,\n\t\tWeekName as string,\n\t\tWeekNameWithYear as string,\n\t\tWeekShortName as string,\n\t\tWeekShortNameWithYear as string,\n\t\tWeekNumber as integer,\n\t\tFirstDateOfWeek as date,\n\t\tLastDateOfWeek as date,\n\t\tDayOfWeek as integer,\n\t\tDayOfWeekName as string,\n\t\tIsWeekday as boolean,\n\t\tIsWeekend as boolean,\n\t\tMonthName as string,\n\t\tMonthNameWithYear as string,\n\t\tMonthShortName as string,\n\t\tMonthShortNameWithYear as string,\n\t\tMonthNumber as integer,\n\t\tFirstDateOfMonth as date,\n\t\tLastDateOfMonth as date,\n\t\tDayOfMonth as integer,\n\t\tDayOfMonthName as string,\n\t\tIsLastDayOfMonth as boolean,\n\t\tQuarterName as string,\n\t\tQuarterNameWithYear as string,\n\t\tQuarterShortName as string,\n\t\tQuarterShortNameWithYear as string,\n\t\tQuarterNumber as integer,\n\t\tFirstDateOfQuarter as date,\n\t\tLastDateOfQuarter as date,\n\t\tDayOfQuarter as integer,\n\t\tDayOfQuarterName as string,\n\t\tHalfName as string,\n\t\tHalfNameWithYear as string,\n\t\tHalfShortName as string,\n\t\tHalfShortNameWithYear as string,\n\t\tHalfNumber as integer,\n\t\tYearHalfNumber as integer,\n\t\tFirstDateOfHalf as date,\n\t\tLastDateOfHalf as date,\n\t\tDayOfHalf as integer,\n\t\tDayOfHalfName as string,\n\t\tYearName as string,\n\t\tYearShortName as string,\n\t\tFirstDateOfYear as date,\n\t\tLastDateOfYear as date,\n\t\tDayOfYear as integer,\n\t\tDayOfYearName as string,\n\t\tCalendarQuarter as integer,\n\t\tCalendarYear as integer,\n\t\tCalendarYearMonth as string,\n\t\tCalendarYearQtr as string,\n\t\tFiscalYear as integer,\n\t\tFiscalWeek as integer,\n\t\tFiscalPeriod as integer,\n\t\tFiscalMonth as integer,\n\t\tFiscalQuarter as integer,\n\t\tFiscalYearFiscalWeek as integer,\n\t\tFiscalYearFiscalPeriod as integer,\n\t\tFiscalYearFiscalMonth as integer,\n\t\tFiscalYearFiscalQuarter as integer,\n\t\tFiscalYearFiscalQuarterFiscalMonth as integer,\n\t\tFiscalYearName as string,\n\t\tFiscalYearLongName as string,\n\t\tFiscalYearShortName as string,\n\t\tFiscalQuarterName as string,\n\t\tFiscalQuarterLongName as string,\n\t\tFiscalQuarterNameWithYear as string,\n\t\tFiscalQuarterLongNameWithYear as string,\n\t\tFiscalQuarterShortName as string,\n\t\tFiscalQuarterShortNameWithYear as string,\n\t\tFiscalMonthName as string,\n\t\tFiscalMonthNameWithYear as string,\n\t\tFiscalMonthShortName as string,\n\t\tFiscalMonthShortNameWithYear as string,\n\t\tFiscalMonthCalendarShortName as string,\n\t\tFiscalMonthCalendarShortNameWithYear as string,\n\t\tFiscalWeekName as string,\n\t\tFiscalWeekLongName as string,\n\t\tFiscalWeekNameWithYear as string,\n\t\tFiscalWeekLongNameWithYear as string,\n\t\tFiscalWeekShortName as string,\n\t\tFiscalWeekShortNameWithYear as string,\n\t\tFiscalPeriodName as string,\n\t\tFiscalPeriodLongName as string,\n\t\tFiscalPeriodNameWithYear as string,\n\t\tFiscalPeriodLongNameWithYear as string,\n\t\tFiscalPeriodShortName as string,\n\t\tFiscalPeriodShortNameWithYear as string,\n\t\tCummWorkdays as integer,\n\t\tMonthWorkdays as integer,\n\t\tMonthWorkdaysTotal as integer,\n\t\tIsHoliday as boolean,\n\t\tMonthOfQuarter as integer,\n\t\tBroadcastYearBroadcastQuarter as integer,\n\t\tBroadcastYearBroadcastMonth as integer,\n\t\tBroadcastYearBroadcastWeek as integer,\n\t\tBroadcastYearQtrMonthWeekDay as integer,\n\t\tBroadcastYearQtrMonth as integer,\n\t\tBroadcastYearShortName as string,\n\t\tBroadcastYearLongName as string,\n\t\tBroadcastYeartName as string,\n\t\tBroadcastQuarterName as string,\n\t\tBroadcastWeekName as string,\n\t\tBroadcastDayName as string,\n\t\tmsrepl_tran_version as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimDate\nsource(output(\n\t\tTimeOfDayKey as integer,\n\t\tTime as string,\n\t\tTime24 as string,\n\t\tTime24HM as string,\n\t\tHour as integer,\n\t\tHourC as integer,\n\t\tHourName as string,\n\t\tMinute as integer,\n\t\tMinuteC as integer,\n\t\tMinuteKey as integer,\n\t\tMinuteName as string,\n\t\tSecond as integer,\n\t\tHour24 as integer,\n\t\tAM as string,\n\t\t{30MinuteInterval} as integer,\n\t\tDayPart as string,\n\t\tTimeNumber as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimTimeOfDay\nsource(output(\n\t\tUserKey as integer,\n\t\tUserId as string,\n\t\tUserLogin as string,\n\t\tUserName as string,\n\t\tCompanyName as string,\n\t\tStreet as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tTeamName as string,\n\t\tcONEctUserLogin as string,\n\t\tcONEctGUID as string,\n\t\tCenterId as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimSystemUser\nsource(output(\n\t\tGeographyKey as integer,\n\t\tDigitZIPCode as string,\n\t\tLongitudeZIPCode as double,\n\t\tLatitudeZIPCode as double,\n\t\tZIPCodeClassification as string,\n\t\tNameOfCityOrORG as string,\n\t\tFIPSCode as integer,\n\t\tTwoLetterAbbrevForState as string,\n\t\tFullNameOfStateOrTerritory as string,\n\t\tFIPSCountyCode as integer,\n\t\tNameOfCounty as string,\n\t\tMetroStatisticalAreaCode as integer,\n\t\tSingleAreaCodeForZIPCode as integer,\n\t\tMultipleAreaCodesForZIPCode as string,\n\t\tTimeZoneForZIPCode as string,\n\t\tHrsDiff as integer,\n\t\tZIPCodeObeysDaylightSavings as boolean,\n\t\tUSPSPostOfficeName as string,\n\t\tUSPSAlternateNamesOfCity as string,\n\t\tLocalAlternateNamesOfCity as string,\n\t\tCleanCITYNameForGeocoding as string,\n\t\tCleanSTATENAMEForGeocoding as string,\n\t\tFIPSStateNumericCode as integer,\n\t\tName as string,\n\t\tDMADescription as string,\n\t\tDMAMarketRegion as string,\n\t\tDMACode as integer,\n\t\tDMANameNielsen as string,\n\t\tDMANameInternal as string,\n\t\tDMANameAlternate as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tSourceSystem as string,\n\t\tCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimGeography\nsource(output(\n\t\tEthnicityKey as integer,\n\t\tEthnicityName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimEthnicity\nsource(output(\n\t\tGenderKey as integer,\n\t\tGenderName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimGender\nsource(output(\n\t\tMaritalStatusKey as integer,\n\t\tMaritalStatusName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimMaritalStatus\nsource(output(\n\t\tCompanyKey as integer,\n\t\tCompanyName as string,\n\t\tHash as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimCompany\nsource(output(\n\t\tSourceKey as integer,\n\t\tSourceName as string,\n\t\tHash as string,\n\t\tDWH_CreatedDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as boolean,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimSource\nsource(output(\n\t\tStatusKey as integer,\n\t\tHash as string,\n\t\tStatusName as string,\n\t\tStatusGroup as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp,\n\t\tIsActive as integer,\n\t\tSourceSystem as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimStatus\nODSAccount filter(toDate(LastModifiedDate) >= addDays(toDate(currentTimestamp()), ($DaysToLoad * -1)) && toDate(LastModifiedDate) <= addDays(toDate(currentTimestamp()), -1)) ~> FilterLastModified\nFilterLastModified select(mapColumn(\n\t\tAccountId = Id,\n\t\tAccountFirstName = FirstName,\n\t\tAccountLastName = LastName,\n\t\tAccountFullName = Name,\n\t\tIsActive = Active__c,\n\t\tCreatedDate,\n\t\tCreatedById,\n\t\tLastModifiedDate,\n\t\tLastModifiedById,\n\t\tBillingStreet,\n\t\tBillingCity,\n\t\tBillingState,\n\t\tBillingPostalCode,\n\t\tBillingCountry,\n\t\tBillingStateCode,\n\t\tBillingCountryCode,\n\t\tAccountEthnicity = Ethnicity__pc,\n\t\tAccountGender = Gender__pc,\n\t\tAccountPhone = Phone,\n\t\tAccountEmail = PersonEmail,\n\t\tPersonContactId,\n\t\tIsPersonAccount,\n\t\tDoNotContact = DoNotContact__pc,\n\t\tDoNotEmail = DoNotEmail__pc,\n\t\tDoNotMail = DoNotMail__pc,\n\t\tDoNotText = DoNotText__pc,\n\t\tHairLossFamily = HairLossFamily__pc,\n\t\tHairLossProductUsed = HairLossProductUsed__pc,\n\t\tHairLossSpot = HairLossSpot__pc,\n\t\tDiscStyle = Disc__pc,\n\t\tAccountCompany = Company__c,\n\t\tAccountSource,\n\t\tAccountExternalId = External_Id__c,\n\t\tMaritalStatus = MaritalStatus__pc,\n\t\tIsDeleted,\n\t\tAccountStatus = Customer_Status__c\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nDimDate select(mapColumn(\n\t\tDateKey,\n\t\tFullDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDateColumns\nSelectColumns, SelectDateColumns join(toDate(CreatedDate) == FullDate,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDate\nDimTimeOfDay select(mapColumn(\n\t\tTimeOfDayKey,\n\t\tHour24,\n\t\tMinute,\n\t\tSecond\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTimeColumns\nJoinDate, SelectTimeColumns join(hour(CreatedDate) == Hour24\n\t&& minute(CreatedDate) == Minute\n\t&& second(CreatedDate) == Second,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinTimeOfDay\nDimSystemUser filter(SourceSystem == 'Salesforce') ~> FilterSourceSystem\nFilterSourceSystem select(mapColumn(\n\t\tCreatedUserKey = UserKey,\n\t\tCreatedUserId = UserId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCreatedUserColumn\nJoinTimeOfDay, SelectCreatedUserColumn join(CreatedById == CreatedUserId,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSystemUserCreated\nJoinSystemUserCreated, SelectLastModifiedUserColumn join(LastModifiedById == LastModifiedUserId,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSystemUserLastModified\nFilterSourceSystem select(mapColumn(\n\t\tLastModifiedUserKey = UserKey,\n\t\tLastModifiedUserId = UserId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLastModifiedUserColumn\nDimGeography select(mapColumn(\n\t\tBillingGeographyKey = GeographyKey,\n\t\tDigitZIPCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectGeographyColumns\nJoinSystemUserLastModified, SelectGeographyColumns join(lower(iif(length(replace(BillingPostalCode, ' ',''))==6, left(BillingPostalCode, 3), BillingPostalCode)) == lower(DigitZIPCode),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDimGeography\nDimEthnicity filter(SourceSystem == 'Salesforce') ~> FilterEthnicitySourceSystem\nFilterEthnicitySourceSystem select(mapColumn(\n\t\tEthnicityKey,\n\t\tEthnicityName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectEthnicityColumns\nJoinDimGeography, SelectEthnicityColumns join(lower(trim(AccountEthnicity)) == lower(trim(EthnicityName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinEthnicity\nDimGender filter(SourceSystem == 'Salesforce') ~> FilterGenderSourceSystem\nFilterGenderSourceSystem select(mapColumn(\n\t\tGenderKey,\n\t\tGenderName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectGenderColumns\nJoinEthnicity, SelectGenderColumns join(lower(trim(AccountGender)) == lower(trim(GenderName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinGender\nDimMaritalStatus filter(SourceSystem == 'Salesforce') ~> FilterMaritalStatusSourceSystem\nFilterMaritalStatusSourceSystem select(mapColumn(\n\t\tMaritalStatusKey,\n\t\tMaritalStatusName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectMaritalStatusColumns\nJoinGender, SelectMaritalStatusColumns join(lower(trim(MaritalStatus)) == lower(trim(MaritalStatusName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinMaritalStatus\nDimCompany filter(SourceSystem == 'Salesforce') ~> FilterCompanySourceSystem\nFilterCompanySourceSystem select(mapColumn(\n\t\tCompanyKey,\n\t\tCompanyName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCompanyColumns\nJoinMaritalStatus, SelectCompanyColumns join(lower(trim(AccountCompany)) == lower(trim(CompanyName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinDimCompany\nDimSource filter(SourceSystem == 'Salesforce') ~> FilterSourceSourceSystem\nFilterSourceSourceSystem select(mapColumn(\n\t\tSourceKey,\n\t\tSourceName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSourceColumns\nJoinDimCompany, SelectSourceColumns join(lower(trim(AccountSource)) == lower(trim(SourceName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSource\nJoinStatus derive(CreatedDateKey = coalesce(DateKey, -1),\n\t\tCreatedTimeKey = coalesce(TimeOfDayKey, -1),\n\t\tCreatedUserKey = coalesce(CreatedUserKey, -1),\n\t\tLastModifiedUserKey = coalesce(LastModifiedUserKey, -1),\n\t\tBillingGeographyKey = coalesce(BillingGeographyKey),\n\t\tEthnicityKey = coalesce(EthnicityKey, -1),\n\t\tGenderKey = coalesce(GenderKey, -1),\n\t\tCompanyKey = coalesce(CompanyKey, -1),\n\t\tSourceKey = coalesce(SourceKey, -1),\n\t\tMaritalStatusKey = coalesce(MaritalStatusKey, -1),\n\t\tDWH_LoadDate = currentTimestamp(),\n\t\tDWH_LastUpdateDate = currentTimestamp(),\n\t\tSourceSystem = 'Salesforce',\n\t\tAccountStatusKey = coalesce(StatusKey, -1)) ~> CalculatedColumns\nCalculatedColumns alterRow(upsertIf(true())) ~> AllowUpsert\nDimStatus filter(SourceSystem == 'Salesforce' && StatusGroup == 'Account') ~> FilterDimStatus\nFilterDimStatus select(mapColumn(\n\t\tStatusKey,\n\t\tStatusName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectStatusName\nJoinSource, SelectStatusName join(lower(trim(AccountStatus)) == lower(trim(StatusName)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinStatus\nAllowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tAccountKey as integer,\n\t\tAccountId as string,\n\t\tAccountFirstName as string,\n\t\tAccountLastName as string,\n\t\tAccountFullName as string,\n\t\tIsActive as boolean,\n\t\tCreatedDate as timestamp,\n\t\tCreatedById as string,\n\t\tCreatedDateKey as integer,\n\t\tCreatedTimeKey as integer,\n\t\tCreatedUserKey as integer,\n\t\tLastModifiedDate as timestamp,\n\t\tLastModifiedById as string,\n\t\tLastModifiedUserKey as integer,\n\t\tBillingStreet as string,\n\t\tBillingCity as string,\n\t\tBillingState as string,\n\t\tBillingPostalCode as string,\n\t\tBillingCountry as string,\n\t\tBillingStateCode as string,\n\t\tBillingCountryCode as string,\n\t\tBillingGeographyKey as integer,\n\t\tEthnicityKey as integer,\n\t\tAccountEtnicity as string,\n\t\tGenderKey as integer,\n\t\tAccountGender as string,\n\t\tAccountPhone as string,\n\t\tAccountEmail as string,\n\t\tPersonContactId as string,\n\t\tIsPersonAccount as boolean,\n\t\tDoNotCall as boolean,\n\t\tDoNotContact as boolean,\n\t\tDoNotEmail as boolean,\n\t\tDoNotMail as boolean,\n\t\tDoNotText as boolean,\n\t\tNorwoodScale as string,\n\t\tLudwigScale as string,\n\t\tHairLossScaleKey as integer,\n\t\tHairLossInFamily as boolean,\n\t\tHairLossProductUsed as string,\n\t\tHairLossSpot as string,\n\t\tDiscStyle as string,\n\t\tAccountStatusKey as integer,\n\t\tAccountStatus as string,\n\t\tCompanyKey as integer,\n\t\tAccountCompany as string,\n\t\tSourceKey as integer,\n\t\tAccountSource as string,\n\t\tAccountExternalId as string,\n\t\tMaritalStatusKey as integer,\n\t\tMaritalStatus as string,\n\t\tSourceSystem as string,\n\t\tDWH_LoadDate as timestamp,\n\t\tDWH_LastUpdateDate as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['AccountId'],\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tAccountId,\n\t\tAccountFirstName,\n\t\tAccountLastName,\n\t\tAccountFullName,\n\t\tIsActive,\n\t\tCreatedDate,\n\t\tCreatedById,\n\t\tCreatedDateKey,\n\t\tCreatedTimeKey,\n\t\tCreatedUserKey,\n\t\tLastModifiedDate,\n\t\tLastModifiedById,\n\t\tLastModifiedUserKey,\n\t\tBillingStreet,\n\t\tBillingCity,\n\t\tBillingState,\n\t\tBillingPostalCode,\n\t\tBillingCountry,\n\t\tBillingStateCode,\n\t\tBillingCountryCode,\n\t\tBillingGeographyKey,\n\t\tEthnicityKey,\n\t\tGenderKey,\n\t\tAccountGender,\n\t\tAccountPhone,\n\t\tAccountEmail,\n\t\tPersonContactId,\n\t\tIsPersonAccount,\n\t\tDoNotContact,\n\t\tDoNotEmail,\n\t\tDoNotMail,\n\t\tDoNotText,\n\t\tHairLossProductUsed,\n\t\tHairLossSpot,\n\t\tDiscStyle,\n\t\tAccountStatusKey,\n\t\tAccountStatus,\n\t\tCompanyKey,\n\t\tAccountCompany,\n\t\tSourceKey,\n\t\tAccountSource,\n\t\tAccountExternalId,\n\t\tMaritalStatusKey,\n\t\tMaritalStatus,\n\t\tSourceSystem,\n\t\tDWH_LoadDate,\n\t\tDWH_LastUpdateDate\n\t)) ~> UpsertDimAccount"
                }
            },
            "dependsOn": []
        }
    ]
}