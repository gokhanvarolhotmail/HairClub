IF OBJECT_ID('[SF].[sp_AssignedResource_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_AssignedResource_Merge]
GO
CREATE PROCEDURE [SF].[sp_AssignedResource_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[AssignedResource])
RETURN ;

BEGIN TRY
;MERGE [SF].[AssignedResource] AS [t]
USING [SFStaging].[AssignedResource] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[AssignedResourceNumber] = [t].[AssignedResourceNumber]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[ServiceAppointmentId] = [t].[ServiceAppointmentId]
	, [t].[ServiceResourceId] = [t].[ServiceResourceId]
	, [t].[IsRequiredResource] = [t].[IsRequiredResource]
	, [t].[Role] = [t].[Role]
	, [t].[EventId] = [t].[EventId]
	, [t].[ServiceResourceId__c] = [t].[ServiceResourceId__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [AssignedResourceNumber]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [ServiceAppointmentId]
	, [ServiceResourceId]
	, [IsRequiredResource]
	, [Role]
	, [EventId]
	, [ServiceResourceId__c]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[AssignedResourceNumber]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[ServiceAppointmentId]
	, [s].[ServiceResourceId]
	, [s].[IsRequiredResource]
	, [s].[Role]
	, [s].[EventId]
	, [s].[ServiceResourceId__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[AssignedResource] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_Campaign_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_Campaign_Merge]
GO
CREATE PROCEDURE [SF].[sp_Campaign_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[Campaign])
RETURN ;

BEGIN TRY
;MERGE [SF].[Campaign] AS [t]
USING [SFStaging].[Campaign] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[Name] = [t].[Name]
	, [t].[ParentId] = [t].[ParentId]
	, [t].[Type] = [t].[Type]
	, [t].[RecordTypeId] = [t].[RecordTypeId]
	, [t].[Status] = [t].[Status]
	, [t].[StartDate] = [t].[StartDate]
	, [t].[EndDate] = [t].[EndDate]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[ExpectedRevenue] = [t].[ExpectedRevenue]
	, [t].[BudgetedCost] = [t].[BudgetedCost]
	, [t].[ActualCost] = [t].[ActualCost]
	, [t].[ExpectedResponse] = [t].[ExpectedResponse]
	, [t].[NumberSent] = [t].[NumberSent]
	, [t].[IsActive] = [t].[IsActive]
	, [t].[Description] = [t].[Description]
	, [t].[NumberOfLeads] = [t].[NumberOfLeads]
	, [t].[NumberOfConvertedLeads] = [t].[NumberOfConvertedLeads]
	, [t].[NumberOfContacts] = [t].[NumberOfContacts]
	, [t].[NumberOfResponses] = [t].[NumberOfResponses]
	, [t].[NumberOfOpportunities] = [t].[NumberOfOpportunities]
	, [t].[NumberOfWonOpportunities] = [t].[NumberOfWonOpportunities]
	, [t].[AmountAllOpportunities] = [t].[AmountAllOpportunities]
	, [t].[AmountWonOpportunities] = [t].[AmountWonOpportunities]
	, [t].[HierarchyNumberOfLeads] = [t].[HierarchyNumberOfLeads]
	, [t].[HierarchyNumberOfConvertedLeads] = [t].[HierarchyNumberOfConvertedLeads]
	, [t].[HierarchyNumberOfContacts] = [t].[HierarchyNumberOfContacts]
	, [t].[HierarchyNumberOfResponses] = [t].[HierarchyNumberOfResponses]
	, [t].[HierarchyNumberOfOpportunities] = [t].[HierarchyNumberOfOpportunities]
	, [t].[HierarchyNumberOfWonOpportunities] = [t].[HierarchyNumberOfWonOpportunities]
	, [t].[HierarchyAmountAllOpportunities] = [t].[HierarchyAmountAllOpportunities]
	, [t].[HierarchyAmountWonOpportunities] = [t].[HierarchyAmountWonOpportunities]
	, [t].[HierarchyNumberSent] = [t].[HierarchyNumberSent]
	, [t].[HierarchyExpectedRevenue] = [t].[HierarchyExpectedRevenue]
	, [t].[HierarchyBudgetedCost] = [t].[HierarchyBudgetedCost]
	, [t].[HierarchyActualCost] = [t].[HierarchyActualCost]
	, [t].[OwnerId] = [t].[OwnerId]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastActivityDate] = [t].[LastActivityDate]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[CampaignMemberRecordTypeId] = [t].[CampaignMemberRecordTypeId]
	, [t].[Channel__c] = [t].[Channel__c]
	, [t].[Company__c] = [t].[Company__c]
	, [t].[External_Id__c] = [t].[External_Id__c]
	, [t].[Language__c] = [t].[Language__c]
	, [t].[Priority__c] = [t].[Priority__c]
	, [t].[Promo_Code__c] = [t].[Promo_Code__c]
	, [t].[SourceCode_L__c] = [t].[SourceCode_L__c]
	, [t].[TollFreeNumber__c] = [t].[TollFreeNumber__c]
	, [t].[Audience__c] = [t].[Audience__c]
	, [t].[Format__c] = [t].[Format__c]
	, [t].[Location__c] = [t].[Location__c]
	, [t].[Media__c] = [t].[Media__c]
	, [t].[DPNCode__c] = [t].[DPNCode__c]
	, [t].[DWCCode__c] = [t].[DWCCode__c]
	, [t].[DWFCode__c] = [t].[DWFCode__c]
	, [t].[MPNCode__c] = [t].[MPNCode__c]
	, [t].[MWCCode__c] = [t].[MWCCode__c]
	, [t].[MWFCode__c] = [t].[MWFCode__c]
	, [t].[Gleam_Id__c] = [t].[Gleam_Id__c]
	, [t].[DialerMiscCode__c] = [t].[DialerMiscCode__c]
	, [t].[Origin__c] = [t].[Origin__c]
	, [t].[Dialer_Misc_Code__c] = [t].[Dialer_Misc_Code__c]
	, [t].[Toll_Free_Desktop__c] = [t].[Toll_Free_Desktop__c]
	, [t].[Toll_Free_Mobile__c] = [t].[Toll_Free_Mobile__c]
	, [t].[DB_Campaign_Tactic__c] = [t].[DB_Campaign_Tactic__c]
	, [t].[CampaignSource__c] = [t].[CampaignSource__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [Name]
	, [ParentId]
	, [Type]
	, [RecordTypeId]
	, [Status]
	, [StartDate]
	, [EndDate]
	, [CurrencyIsoCode]
	, [ExpectedRevenue]
	, [BudgetedCost]
	, [ActualCost]
	, [ExpectedResponse]
	, [NumberSent]
	, [IsActive]
	, [Description]
	, [NumberOfLeads]
	, [NumberOfConvertedLeads]
	, [NumberOfContacts]
	, [NumberOfResponses]
	, [NumberOfOpportunities]
	, [NumberOfWonOpportunities]
	, [AmountAllOpportunities]
	, [AmountWonOpportunities]
	, [HierarchyNumberOfLeads]
	, [HierarchyNumberOfConvertedLeads]
	, [HierarchyNumberOfContacts]
	, [HierarchyNumberOfResponses]
	, [HierarchyNumberOfOpportunities]
	, [HierarchyNumberOfWonOpportunities]
	, [HierarchyAmountAllOpportunities]
	, [HierarchyAmountWonOpportunities]
	, [HierarchyNumberSent]
	, [HierarchyExpectedRevenue]
	, [HierarchyBudgetedCost]
	, [HierarchyActualCost]
	, [OwnerId]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastActivityDate]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [CampaignMemberRecordTypeId]
	, [Channel__c]
	, [Company__c]
	, [External_Id__c]
	, [Language__c]
	, [Priority__c]
	, [Promo_Code__c]
	, [SourceCode_L__c]
	, [TollFreeNumber__c]
	, [Audience__c]
	, [Format__c]
	, [Location__c]
	, [Media__c]
	, [DPNCode__c]
	, [DWCCode__c]
	, [DWFCode__c]
	, [MPNCode__c]
	, [MWCCode__c]
	, [MWFCode__c]
	, [Gleam_Id__c]
	, [DialerMiscCode__c]
	, [Origin__c]
	, [Dialer_Misc_Code__c]
	, [Toll_Free_Desktop__c]
	, [Toll_Free_Mobile__c]
	, [DB_Campaign_Tactic__c]
	, [CampaignSource__c]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[Name]
	, [s].[ParentId]
	, [s].[Type]
	, [s].[RecordTypeId]
	, [s].[Status]
	, [s].[StartDate]
	, [s].[EndDate]
	, [s].[CurrencyIsoCode]
	, [s].[ExpectedRevenue]
	, [s].[BudgetedCost]
	, [s].[ActualCost]
	, [s].[ExpectedResponse]
	, [s].[NumberSent]
	, [s].[IsActive]
	, [s].[Description]
	, [s].[NumberOfLeads]
	, [s].[NumberOfConvertedLeads]
	, [s].[NumberOfContacts]
	, [s].[NumberOfResponses]
	, [s].[NumberOfOpportunities]
	, [s].[NumberOfWonOpportunities]
	, [s].[AmountAllOpportunities]
	, [s].[AmountWonOpportunities]
	, [s].[HierarchyNumberOfLeads]
	, [s].[HierarchyNumberOfConvertedLeads]
	, [s].[HierarchyNumberOfContacts]
	, [s].[HierarchyNumberOfResponses]
	, [s].[HierarchyNumberOfOpportunities]
	, [s].[HierarchyNumberOfWonOpportunities]
	, [s].[HierarchyAmountAllOpportunities]
	, [s].[HierarchyAmountWonOpportunities]
	, [s].[HierarchyNumberSent]
	, [s].[HierarchyExpectedRevenue]
	, [s].[HierarchyBudgetedCost]
	, [s].[HierarchyActualCost]
	, [s].[OwnerId]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastActivityDate]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[CampaignMemberRecordTypeId]
	, [s].[Channel__c]
	, [s].[Company__c]
	, [s].[External_Id__c]
	, [s].[Language__c]
	, [s].[Priority__c]
	, [s].[Promo_Code__c]
	, [s].[SourceCode_L__c]
	, [s].[TollFreeNumber__c]
	, [s].[Audience__c]
	, [s].[Format__c]
	, [s].[Location__c]
	, [s].[Media__c]
	, [s].[DPNCode__c]
	, [s].[DWCCode__c]
	, [s].[DWFCode__c]
	, [s].[MPNCode__c]
	, [s].[MWCCode__c]
	, [s].[MWFCode__c]
	, [s].[Gleam_Id__c]
	, [s].[DialerMiscCode__c]
	, [s].[Origin__c]
	, [s].[Dialer_Misc_Code__c]
	, [s].[Toll_Free_Desktop__c]
	, [s].[Toll_Free_Mobile__c]
	, [s].[DB_Campaign_Tactic__c]
	, [s].[CampaignSource__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[Campaign] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_CampaignMember_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_CampaignMember_Merge]
GO
CREATE PROCEDURE [SF].[sp_CampaignMember_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[CampaignMember])
RETURN ;

BEGIN TRY
;MERGE [SF].[CampaignMember] AS [t]
USING [SFStaging].[CampaignMember] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[CampaignId] = [t].[CampaignId]
	, [t].[LeadId] = [t].[LeadId]
	, [t].[ContactId] = [t].[ContactId]
	, [t].[Status] = [t].[Status]
	, [t].[HasResponded] = [t].[HasResponded]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[FirstRespondedDate] = [t].[FirstRespondedDate]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[Salutation] = [t].[Salutation]
	, [t].[Name] = [t].[Name]
	, [t].[FirstName] = [t].[FirstName]
	, [t].[LastName] = [t].[LastName]
	, [t].[Title] = [t].[Title]
	, [t].[Street] = [t].[Street]
	, [t].[City] = [t].[City]
	, [t].[State] = [t].[State]
	, [t].[PostalCode] = [t].[PostalCode]
	, [t].[Country] = [t].[Country]
	, [t].[Email] = [t].[Email]
	, [t].[Phone] = [t].[Phone]
	, [t].[Fax] = [t].[Fax]
	, [t].[MobilePhone] = [t].[MobilePhone]
	, [t].[Description] = [t].[Description]
	, [t].[DoNotCall] = [t].[DoNotCall]
	, [t].[HasOptedOutOfEmail] = [t].[HasOptedOutOfEmail]
	, [t].[HasOptedOutOfFax] = [t].[HasOptedOutOfFax]
	, [t].[LeadSource] = [t].[LeadSource]
	, [t].[CompanyOrAccount] = [t].[CompanyOrAccount]
	, [t].[Type] = [t].[Type]
	, [t].[LeadOrContactId] = [t].[LeadOrContactId]
	, [t].[LeadOrContactOwnerId] = [t].[LeadOrContactOwnerId]
	, [t].[Opportunity__c] = [t].[Opportunity__c]
	, [t].[SourceCode__c] = [t].[SourceCode__c]
	, [t].[Device_Type__c] = [t].[Device_Type__c]
	, [t].[Do_Not_Call_from_Lead_Contact__c] = [t].[Do_Not_Call_from_Lead_Contact__c]
	, [t].[Last_Activity_Date__c] = [t].[Last_Activity_Date__c]
	, [t].[Lead_Status__c] = [t].[Lead_Status__c]
	, [t].[Time_Zone__c] = [t].[Time_Zone__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [CampaignId]
	, [LeadId]
	, [ContactId]
	, [Status]
	, [HasResponded]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [FirstRespondedDate]
	, [CurrencyIsoCode]
	, [Salutation]
	, [Name]
	, [FirstName]
	, [LastName]
	, [Title]
	, [Street]
	, [City]
	, [State]
	, [PostalCode]
	, [Country]
	, [Email]
	, [Phone]
	, [Fax]
	, [MobilePhone]
	, [Description]
	, [DoNotCall]
	, [HasOptedOutOfEmail]
	, [HasOptedOutOfFax]
	, [LeadSource]
	, [CompanyOrAccount]
	, [Type]
	, [LeadOrContactId]
	, [LeadOrContactOwnerId]
	, [Opportunity__c]
	, [SourceCode__c]
	, [Device_Type__c]
	, [Do_Not_Call_from_Lead_Contact__c]
	, [Last_Activity_Date__c]
	, [Lead_Status__c]
	, [Time_Zone__c]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[CampaignId]
	, [s].[LeadId]
	, [s].[ContactId]
	, [s].[Status]
	, [s].[HasResponded]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[FirstRespondedDate]
	, [s].[CurrencyIsoCode]
	, [s].[Salutation]
	, [s].[Name]
	, [s].[FirstName]
	, [s].[LastName]
	, [s].[Title]
	, [s].[Street]
	, [s].[City]
	, [s].[State]
	, [s].[PostalCode]
	, [s].[Country]
	, [s].[Email]
	, [s].[Phone]
	, [s].[Fax]
	, [s].[MobilePhone]
	, [s].[Description]
	, [s].[DoNotCall]
	, [s].[HasOptedOutOfEmail]
	, [s].[HasOptedOutOfFax]
	, [s].[LeadSource]
	, [s].[CompanyOrAccount]
	, [s].[Type]
	, [s].[LeadOrContactId]
	, [s].[LeadOrContactOwnerId]
	, [s].[Opportunity__c]
	, [s].[SourceCode__c]
	, [s].[Device_Type__c]
	, [s].[Do_Not_Call_from_Lead_Contact__c]
	, [s].[Last_Activity_Date__c]
	, [s].[Lead_Status__c]
	, [s].[Time_Zone__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[CampaignMember] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_CampaignMemberStatus_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_CampaignMemberStatus_Merge]
GO
CREATE PROCEDURE [SF].[sp_CampaignMemberStatus_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[CampaignMemberStatus])
RETURN ;

BEGIN TRY
;MERGE [SF].[CampaignMemberStatus] AS [t]
USING [SFStaging].[CampaignMemberStatus] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[CampaignId] = [t].[CampaignId]
	, [t].[Label] = [t].[Label]
	, [t].[SortOrder] = [t].[SortOrder]
	, [t].[IsDefault] = [t].[IsDefault]
	, [t].[HasResponded] = [t].[HasResponded]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [CampaignId]
	, [Label]
	, [SortOrder]
	, [IsDefault]
	, [HasResponded]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[CampaignId]
	, [s].[Label]
	, [s].[SortOrder]
	, [s].[IsDefault]
	, [s].[HasResponded]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[CampaignMemberStatus] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_Case_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_Case_Merge]
GO
CREATE PROCEDURE [SF].[sp_Case_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[Case])
RETURN ;

BEGIN TRY
;MERGE [SF].[Case] AS [t]
USING [SFStaging].[Case] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[MasterRecordId] = [t].[MasterRecordId]
	, [t].[CaseNumber] = [t].[CaseNumber]
	, [t].[ContactId] = [t].[ContactId]
	, [t].[AccountId] = [t].[AccountId]
	, [t].[AssetId] = [t].[AssetId]
	, [t].[ProductId] = [t].[ProductId]
	, [t].[EntitlementId] = [t].[EntitlementId]
	, [t].[SourceId] = [t].[SourceId]
	, [t].[BusinessHoursId] = [t].[BusinessHoursId]
	, [t].[ParentId] = [t].[ParentId]
	, [t].[SuppliedName] = [t].[SuppliedName]
	, [t].[SuppliedEmail] = [t].[SuppliedEmail]
	, [t].[SuppliedPhone] = [t].[SuppliedPhone]
	, [t].[SuppliedCompany] = [t].[SuppliedCompany]
	, [t].[Type] = [t].[Type]
	, [t].[RecordTypeId] = [t].[RecordTypeId]
	, [t].[Status] = [t].[Status]
	, [t].[Reason] = [t].[Reason]
	, [t].[Origin] = [t].[Origin]
	, [t].[Language] = [t].[Language]
	, [t].[Subject] = [t].[Subject]
	, [t].[Priority] = [t].[Priority]
	, [t].[Description] = [t].[Description]
	, [t].[IsClosed] = [t].[IsClosed]
	, [t].[ClosedDate] = [t].[ClosedDate]
	, [t].[IsEscalated] = [t].[IsEscalated]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[OwnerId] = [t].[OwnerId]
	, [t].[IsClosedOnCreate] = [t].[IsClosedOnCreate]
	, [t].[SlaStartDate] = [t].[SlaStartDate]
	, [t].[SlaExitDate] = [t].[SlaExitDate]
	, [t].[IsStopped] = [t].[IsStopped]
	, [t].[StopStartDate] = [t].[StopStartDate]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[ContactPhone] = [t].[ContactPhone]
	, [t].[ContactMobile] = [t].[ContactMobile]
	, [t].[ContactEmail] = [t].[ContactEmail]
	, [t].[ContactFax] = [t].[ContactFax]
	, [t].[Comments] = [t].[Comments]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[ServiceContractId] = [t].[ServiceContractId]
	, [t].[MilestoneStatus] = [t].[MilestoneStatus]
	, [t].[External_Id__c] = [t].[External_Id__c]
	, [t].[Accommodation__c] = [t].[Accommodation__c]
	, [t].[AssignedTo__c] = [t].[AssignedTo__c]
	, [t].[CallType__c] = [t].[CallType__c]
	, [t].[Campaign__c] = [t].[Campaign__c]
	, [t].[CaseAltPhone__c] = [t].[CaseAltPhone__c]
	, [t].[CaseName__c] = [t].[CaseName__c]
	, [t].[CasePhone__c] = [t].[CasePhone__c]
	, [t].[Case_Source_Chat__c] = [t].[Case_Source_Chat__c]
	, [t].[Category__c] = [t].[Category__c]
	, [t].[CenterEmployee__c] = [t].[CenterEmployee__c]
	, [t].[Center__c] = [t].[Center__c]
	, [t].[Content__c] = [t].[Content__c]
	, [t].[Courteous__c] = [t].[Courteous__c]
	, [t].[DateofAppointment__c] = [t].[DateofAppointment__c]
	, [t].[DateofIncident__c] = [t].[DateofIncident__c]
	, [t].[Didyousignup__c] = [t].[Didyousignup__c]
	, [t].[Estimated_Completion_Date__c] = [t].[Estimated_Completion_Date__c]
	, [t].[FeedbackType__c] = [t].[FeedbackType__c]
	, [t].[LeadEmail__c] = [t].[LeadEmail__c]
	, [t].[LeadId__c] = [t].[LeadId__c]
	, [t].[LeadPhone__c] = [t].[LeadPhone__c]
	, [t].[OptionOffered__c] = [t].[OptionOffered__c]
	, [t].[Points__c] = [t].[Points__c]
	, [t].[PricePlan__c] = [t].[PricePlan__c]
	, [t].[Resolution__c] = [t].[Resolution__c]
	, [t].[SignIn__c] = [t].[SignIn__c]
	, [t].[TimeofIncident__c] = [t].[TimeofIncident__c]
	, [t].[Title__c] = [t].[Title__c]
	, [t].[Wereyouontime__c] = [t].[Wereyouontime__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [MasterRecordId]
	, [CaseNumber]
	, [ContactId]
	, [AccountId]
	, [AssetId]
	, [ProductId]
	, [EntitlementId]
	, [SourceId]
	, [BusinessHoursId]
	, [ParentId]
	, [SuppliedName]
	, [SuppliedEmail]
	, [SuppliedPhone]
	, [SuppliedCompany]
	, [Type]
	, [RecordTypeId]
	, [Status]
	, [Reason]
	, [Origin]
	, [Language]
	, [Subject]
	, [Priority]
	, [Description]
	, [IsClosed]
	, [ClosedDate]
	, [IsEscalated]
	, [CurrencyIsoCode]
	, [OwnerId]
	, [IsClosedOnCreate]
	, [SlaStartDate]
	, [SlaExitDate]
	, [IsStopped]
	, [StopStartDate]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [ContactPhone]
	, [ContactMobile]
	, [ContactEmail]
	, [ContactFax]
	, [Comments]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [ServiceContractId]
	, [MilestoneStatus]
	, [External_Id__c]
	, [Accommodation__c]
	, [AssignedTo__c]
	, [CallType__c]
	, [Campaign__c]
	, [CaseAltPhone__c]
	, [CaseName__c]
	, [CasePhone__c]
	, [Case_Source_Chat__c]
	, [Category__c]
	, [CenterEmployee__c]
	, [Center__c]
	, [Content__c]
	, [Courteous__c]
	, [DateofAppointment__c]
	, [DateofIncident__c]
	, [Didyousignup__c]
	, [Estimated_Completion_Date__c]
	, [FeedbackType__c]
	, [LeadEmail__c]
	, [LeadId__c]
	, [LeadPhone__c]
	, [OptionOffered__c]
	, [Points__c]
	, [PricePlan__c]
	, [Resolution__c]
	, [SignIn__c]
	, [TimeofIncident__c]
	, [Title__c]
	, [Wereyouontime__c]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[MasterRecordId]
	, [s].[CaseNumber]
	, [s].[ContactId]
	, [s].[AccountId]
	, [s].[AssetId]
	, [s].[ProductId]
	, [s].[EntitlementId]
	, [s].[SourceId]
	, [s].[BusinessHoursId]
	, [s].[ParentId]
	, [s].[SuppliedName]
	, [s].[SuppliedEmail]
	, [s].[SuppliedPhone]
	, [s].[SuppliedCompany]
	, [s].[Type]
	, [s].[RecordTypeId]
	, [s].[Status]
	, [s].[Reason]
	, [s].[Origin]
	, [s].[Language]
	, [s].[Subject]
	, [s].[Priority]
	, [s].[Description]
	, [s].[IsClosed]
	, [s].[ClosedDate]
	, [s].[IsEscalated]
	, [s].[CurrencyIsoCode]
	, [s].[OwnerId]
	, [s].[IsClosedOnCreate]
	, [s].[SlaStartDate]
	, [s].[SlaExitDate]
	, [s].[IsStopped]
	, [s].[StopStartDate]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[ContactPhone]
	, [s].[ContactMobile]
	, [s].[ContactEmail]
	, [s].[ContactFax]
	, [s].[Comments]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[ServiceContractId]
	, [s].[MilestoneStatus]
	, [s].[External_Id__c]
	, [s].[Accommodation__c]
	, [s].[AssignedTo__c]
	, [s].[CallType__c]
	, [s].[Campaign__c]
	, [s].[CaseAltPhone__c]
	, [s].[CaseName__c]
	, [s].[CasePhone__c]
	, [s].[Case_Source_Chat__c]
	, [s].[Category__c]
	, [s].[CenterEmployee__c]
	, [s].[Center__c]
	, [s].[Content__c]
	, [s].[Courteous__c]
	, [s].[DateofAppointment__c]
	, [s].[DateofIncident__c]
	, [s].[Didyousignup__c]
	, [s].[Estimated_Completion_Date__c]
	, [s].[FeedbackType__c]
	, [s].[LeadEmail__c]
	, [s].[LeadId__c]
	, [s].[LeadPhone__c]
	, [s].[OptionOffered__c]
	, [s].[Points__c]
	, [s].[PricePlan__c]
	, [s].[Resolution__c]
	, [s].[SignIn__c]
	, [s].[TimeofIncident__c]
	, [s].[Title__c]
	, [s].[Wereyouontime__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[Case] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_Commissions_Log__c_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_Commissions_Log__c_Merge]
GO
CREATE PROCEDURE [SF].[sp_Commissions_Log__c_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[Commissions_Log__c])
RETURN ;

BEGIN TRY
;MERGE [SF].[Commissions_Log__c] AS [t]
USING [SFStaging].[Commissions_Log__c] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[Name] = [t].[Name]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastActivityDate] = [t].[LastActivityDate]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[Service_Appointment__c] = [t].[Service_Appointment__c]
	, [t].[ACE_Approved__c] = [t].[ACE_Approved__c]
	, [t].[Comments__c] = [t].[Comments__c]
	, [t].[Commission_To_Proposed_Change__c] = [t].[Commission_To_Proposed_Change__c]
	, [t].[Commission_To__c] = [t].[Commission_To__c]
	, [t].[Commissions_Logic_Details__c] = [t].[Commissions_Logic_Details__c]
	, [t].[My_Commission_Log__c] = [t].[My_Commission_Log__c]
	, [t].[Related_Lead__c] = [t].[Related_Lead__c]
	, [t].[Related_Person_Account__c] = [t].[Related_Person_Account__c]
	, [t].[System_Generated__c] = [t].[System_Generated__c]
	, [t].[Commission_To_Manager__c] = [t].[Commission_To_Manager__c]
	, [t].[Commission_To_Company__c] = [t].[Commission_To_Company__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [Name]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastActivityDate]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [Service_Appointment__c]
	, [ACE_Approved__c]
	, [Comments__c]
	, [Commission_To_Proposed_Change__c]
	, [Commission_To__c]
	, [Commissions_Logic_Details__c]
	, [My_Commission_Log__c]
	, [Related_Lead__c]
	, [Related_Person_Account__c]
	, [System_Generated__c]
	, [Commission_To_Manager__c]
	, [Commission_To_Company__c]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[Name]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastActivityDate]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[Service_Appointment__c]
	, [s].[ACE_Approved__c]
	, [s].[Comments__c]
	, [s].[Commission_To_Proposed_Change__c]
	, [s].[Commission_To__c]
	, [s].[Commissions_Logic_Details__c]
	, [s].[My_Commission_Log__c]
	, [s].[Related_Lead__c]
	, [s].[Related_Person_Account__c]
	, [s].[System_Generated__c]
	, [s].[Commission_To_Manager__c]
	, [s].[Commission_To_Company__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[Commissions_Log__c] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_Contract_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_Contract_Merge]
GO
CREATE PROCEDURE [SF].[sp_Contract_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[Contract])
RETURN ;

BEGIN TRY
;MERGE [SF].[Contract] AS [t]
USING [SFStaging].[Contract] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[AccountId] = [t].[AccountId]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[Pricebook2Id] = [t].[Pricebook2Id]
	, [t].[OwnerExpirationNotice] = [t].[OwnerExpirationNotice]
	, [t].[StartDate] = [t].[StartDate]
	, [t].[EndDate] = [t].[EndDate]
	, [t].[BillingStreet] = [t].[BillingStreet]
	, [t].[BillingCity] = [t].[BillingCity]
	, [t].[BillingState] = [t].[BillingState]
	, [t].[BillingPostalCode] = [t].[BillingPostalCode]
	, [t].[BillingCountry] = [t].[BillingCountry]
	, [t].[BillingStateCode] = [t].[BillingStateCode]
	, [t].[BillingCountryCode] = [t].[BillingCountryCode]
	, [t].[BillingLatitude] = [t].[BillingLatitude]
	, [t].[BillingLongitude] = [t].[BillingLongitude]
	, [t].[BillingGeocodeAccuracy] = [t].[BillingGeocodeAccuracy]
	, [t].[BillingAddress] = [t].[BillingAddress]
	, [t].[ShippingStreet] = [t].[ShippingStreet]
	, [t].[ShippingCity] = [t].[ShippingCity]
	, [t].[ShippingState] = [t].[ShippingState]
	, [t].[ShippingPostalCode] = [t].[ShippingPostalCode]
	, [t].[ShippingCountry] = [t].[ShippingCountry]
	, [t].[ShippingStateCode] = [t].[ShippingStateCode]
	, [t].[ShippingCountryCode] = [t].[ShippingCountryCode]
	, [t].[ShippingLatitude] = [t].[ShippingLatitude]
	, [t].[ShippingLongitude] = [t].[ShippingLongitude]
	, [t].[ShippingGeocodeAccuracy] = [t].[ShippingGeocodeAccuracy]
	, [t].[ShippingAddress] = [t].[ShippingAddress]
	, [t].[ContractTerm] = [t].[ContractTerm]
	, [t].[OwnerId] = [t].[OwnerId]
	, [t].[Status] = [t].[Status]
	, [t].[CompanySignedId] = [t].[CompanySignedId]
	, [t].[CompanySignedDate] = [t].[CompanySignedDate]
	, [t].[CustomerSignedId] = [t].[CustomerSignedId]
	, [t].[CustomerSignedTitle] = [t].[CustomerSignedTitle]
	, [t].[CustomerSignedDate] = [t].[CustomerSignedDate]
	, [t].[SpecialTerms] = [t].[SpecialTerms]
	, [t].[ActivatedById] = [t].[ActivatedById]
	, [t].[ActivatedDate] = [t].[ActivatedDate]
	, [t].[StatusCode] = [t].[StatusCode]
	, [t].[Description] = [t].[Description]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[ContractNumber] = [t].[ContractNumber]
	, [t].[LastApprovedDate] = [t].[LastApprovedDate]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastActivityDate] = [t].[LastActivityDate]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [AccountId]
	, [CurrencyIsoCode]
	, [Pricebook2Id]
	, [OwnerExpirationNotice]
	, [StartDate]
	, [EndDate]
	, [BillingStreet]
	, [BillingCity]
	, [BillingState]
	, [BillingPostalCode]
	, [BillingCountry]
	, [BillingStateCode]
	, [BillingCountryCode]
	, [BillingLatitude]
	, [BillingLongitude]
	, [BillingGeocodeAccuracy]
	, [BillingAddress]
	, [ShippingStreet]
	, [ShippingCity]
	, [ShippingState]
	, [ShippingPostalCode]
	, [ShippingCountry]
	, [ShippingStateCode]
	, [ShippingCountryCode]
	, [ShippingLatitude]
	, [ShippingLongitude]
	, [ShippingGeocodeAccuracy]
	, [ShippingAddress]
	, [ContractTerm]
	, [OwnerId]
	, [Status]
	, [CompanySignedId]
	, [CompanySignedDate]
	, [CustomerSignedId]
	, [CustomerSignedTitle]
	, [CustomerSignedDate]
	, [SpecialTerms]
	, [ActivatedById]
	, [ActivatedDate]
	, [StatusCode]
	, [Description]
	, [IsDeleted]
	, [ContractNumber]
	, [LastApprovedDate]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastActivityDate]
	, [LastViewedDate]
	, [LastReferencedDate]
	)
	VALUES(
	[s].[Id]
	, [s].[AccountId]
	, [s].[CurrencyIsoCode]
	, [s].[Pricebook2Id]
	, [s].[OwnerExpirationNotice]
	, [s].[StartDate]
	, [s].[EndDate]
	, [s].[BillingStreet]
	, [s].[BillingCity]
	, [s].[BillingState]
	, [s].[BillingPostalCode]
	, [s].[BillingCountry]
	, [s].[BillingStateCode]
	, [s].[BillingCountryCode]
	, [s].[BillingLatitude]
	, [s].[BillingLongitude]
	, [s].[BillingGeocodeAccuracy]
	, [s].[BillingAddress]
	, [s].[ShippingStreet]
	, [s].[ShippingCity]
	, [s].[ShippingState]
	, [s].[ShippingPostalCode]
	, [s].[ShippingCountry]
	, [s].[ShippingStateCode]
	, [s].[ShippingCountryCode]
	, [s].[ShippingLatitude]
	, [s].[ShippingLongitude]
	, [s].[ShippingGeocodeAccuracy]
	, [s].[ShippingAddress]
	, [s].[ContractTerm]
	, [s].[OwnerId]
	, [s].[Status]
	, [s].[CompanySignedId]
	, [s].[CompanySignedDate]
	, [s].[CustomerSignedId]
	, [s].[CustomerSignedTitle]
	, [s].[CustomerSignedDate]
	, [s].[SpecialTerms]
	, [s].[ActivatedById]
	, [s].[ActivatedDate]
	, [s].[StatusCode]
	, [s].[Description]
	, [s].[IsDeleted]
	, [s].[ContractNumber]
	, [s].[LastApprovedDate]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastActivityDate]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[Contract] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_ContractLineItem_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_ContractLineItem_Merge]
GO
CREATE PROCEDURE [SF].[sp_ContractLineItem_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[ContractLineItem])
RETURN ;

BEGIN TRY
;MERGE [SF].[ContractLineItem] AS [t]
USING [SFStaging].[ContractLineItem] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[LineItemNumber] = [t].[LineItemNumber]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[ServiceContractId] = [t].[ServiceContractId]
	, [t].[Product2Id] = [t].[Product2Id]
	, [t].[AssetId] = [t].[AssetId]
	, [t].[StartDate] = [t].[StartDate]
	, [t].[EndDate] = [t].[EndDate]
	, [t].[Description] = [t].[Description]
	, [t].[PricebookEntryId] = [t].[PricebookEntryId]
	, [t].[Quantity] = [t].[Quantity]
	, [t].[UnitPrice] = [t].[UnitPrice]
	, [t].[Discount] = [t].[Discount]
	, [t].[ListPrice] = [t].[ListPrice]
	, [t].[Subtotal] = [t].[Subtotal]
	, [t].[TotalPrice] = [t].[TotalPrice]
	, [t].[Status] = [t].[Status]
	, [t].[ParentContractLineItemId] = [t].[ParentContractLineItemId]
	, [t].[RootContractLineItemId] = [t].[RootContractLineItemId]
	, [t].[LocationId] = [t].[LocationId]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [LineItemNumber]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [ServiceContractId]
	, [Product2Id]
	, [AssetId]
	, [StartDate]
	, [EndDate]
	, [Description]
	, [PricebookEntryId]
	, [Quantity]
	, [UnitPrice]
	, [Discount]
	, [ListPrice]
	, [Subtotal]
	, [TotalPrice]
	, [Status]
	, [ParentContractLineItemId]
	, [RootContractLineItemId]
	, [LocationId]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[LineItemNumber]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[ServiceContractId]
	, [s].[Product2Id]
	, [s].[AssetId]
	, [s].[StartDate]
	, [s].[EndDate]
	, [s].[Description]
	, [s].[PricebookEntryId]
	, [s].[Quantity]
	, [s].[UnitPrice]
	, [s].[Discount]
	, [s].[ListPrice]
	, [s].[Subtotal]
	, [s].[TotalPrice]
	, [s].[Status]
	, [s].[ParentContractLineItemId]
	, [s].[RootContractLineItemId]
	, [s].[LocationId]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[ContractLineItem] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_Event_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_Event_Merge]
GO
CREATE PROCEDURE [SF].[sp_Event_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[Event])
RETURN ;

BEGIN TRY
;MERGE [SF].[Event] AS [t]
USING [SFStaging].[Event] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[WhoId] = [t].[WhoId]
	, [t].[WhatId] = [t].[WhatId]
	, [t].[WhoCount] = [t].[WhoCount]
	, [t].[WhatCount] = [t].[WhatCount]
	, [t].[Subject] = [t].[Subject]
	, [t].[Location] = [t].[Location]
	, [t].[IsAllDayEvent] = [t].[IsAllDayEvent]
	, [t].[ActivityDateTime] = [t].[ActivityDateTime]
	, [t].[ActivityDate] = [t].[ActivityDate]
	, [t].[DurationInMinutes] = [t].[DurationInMinutes]
	, [t].[StartDateTime] = [t].[StartDateTime]
	, [t].[EndDateTime] = [t].[EndDateTime]
	, [t].[EndDate] = [t].[EndDate]
	, [t].[Description] = [t].[Description]
	, [t].[AccountId] = [t].[AccountId]
	, [t].[OwnerId] = [t].[OwnerId]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[Type] = [t].[Type]
	, [t].[IsPrivate] = [t].[IsPrivate]
	, [t].[ShowAs] = [t].[ShowAs]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[IsChild] = [t].[IsChild]
	, [t].[IsGroupEvent] = [t].[IsGroupEvent]
	, [t].[GroupEventType] = [t].[GroupEventType]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[IsArchived] = [t].[IsArchived]
	, [t].[RecurrenceActivityId] = [t].[RecurrenceActivityId]
	, [t].[IsRecurrence] = [t].[IsRecurrence]
	, [t].[RecurrenceStartDateTime] = [t].[RecurrenceStartDateTime]
	, [t].[RecurrenceEndDateOnly] = [t].[RecurrenceEndDateOnly]
	, [t].[RecurrenceTimeZoneSidKey] = [t].[RecurrenceTimeZoneSidKey]
	, [t].[RecurrenceType] = [t].[RecurrenceType]
	, [t].[RecurrenceInterval] = [t].[RecurrenceInterval]
	, [t].[RecurrenceDayOfWeekMask] = [t].[RecurrenceDayOfWeekMask]
	, [t].[RecurrenceDayOfMonth] = [t].[RecurrenceDayOfMonth]
	, [t].[RecurrenceInstance] = [t].[RecurrenceInstance]
	, [t].[RecurrenceMonthOfYear] = [t].[RecurrenceMonthOfYear]
	, [t].[ReminderDateTime] = [t].[ReminderDateTime]
	, [t].[IsReminderSet] = [t].[IsReminderSet]
	, [t].[EventSubtype] = [t].[EventSubtype]
	, [t].[IsRecurrence2Exclusion] = [t].[IsRecurrence2Exclusion]
	, [t].[Recurrence2PatternText] = [t].[Recurrence2PatternText]
	, [t].[Recurrence2PatternVersion] = [t].[Recurrence2PatternVersion]
	, [t].[IsRecurrence2] = [t].[IsRecurrence2]
	, [t].[IsRecurrence2Exception] = [t].[IsRecurrence2Exception]
	, [t].[Recurrence2PatternStartDate] = [t].[Recurrence2PatternStartDate]
	, [t].[Recurrence2PatternTimeZone] = [t].[Recurrence2PatternTimeZone]
	, [t].[ServiceAppointmentId] = [t].[ServiceAppointmentId]
	, [t].[BrightPattern__SPRecordingOrTranscriptURL__c] = [t].[BrightPattern__SPRecordingOrTranscriptURL__c]
	, [t].[Center_Name__c] = [t].[Center_Name__c]
	, [t].[Completed_Date__c] = [t].[Completed_Date__c]
	, [t].[External_ID__c] = [t].[External_ID__c]
	, [t].[Lead__c] = [t].[Lead__c]
	, [t].[Meeting_Platform_Id__c] = [t].[Meeting_Platform_Id__c]
	, [t].[Meeting_Platform__c] = [t].[Meeting_Platform__c]
	, [t].[Person_Account__c] = [t].[Person_Account__c]
	, [t].[Recording_Link__c] = [t].[Recording_Link__c]
	, [t].[Result__c] = [t].[Result__c]
	, [t].[SPRecordingOrTranscriptURL__c] = [t].[SPRecordingOrTranscriptURL__c]
	, [t].[Service_Appointment__c] = [t].[Service_Appointment__c]
	, [t].[Service_Territory_Caller_Id__c] = [t].[Service_Territory_Caller_Id__c]
	, [t].[Agent_Link__c] = [t].[Agent_Link__c]
	, [t].[Guest_Link__c] = [t].[Guest_Link__c]
	, [t].[Opportunity__c] = [t].[Opportunity__c]
	, [t].[Center_Phone__c] = [t].[Center_Phone__c]
	, [t].[DB_Activity_Type__c] = [t].[DB_Activity_Type__c]
	, [t].[CallBackDueDate__c] = [t].[CallBackDueDate__c]
	, [t].[Invite__c] = [t].[Invite__c]
	, [t].[AcceptedEventInviteeIds] = [t].[AcceptedEventInviteeIds]
	, [t].[DeclinedEventInviteeIds] = [t].[DeclinedEventInviteeIds]
	, [t].[EventWhoIds] = [t].[EventWhoIds]
	, [t].[UndecidedEventInviteeIds] = [t].[UndecidedEventInviteeIds]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [WhoId]
	, [WhatId]
	, [WhoCount]
	, [WhatCount]
	, [Subject]
	, [Location]
	, [IsAllDayEvent]
	, [ActivityDateTime]
	, [ActivityDate]
	, [DurationInMinutes]
	, [StartDateTime]
	, [EndDateTime]
	, [EndDate]
	, [Description]
	, [AccountId]
	, [OwnerId]
	, [CurrencyIsoCode]
	, [Type]
	, [IsPrivate]
	, [ShowAs]
	, [IsDeleted]
	, [IsChild]
	, [IsGroupEvent]
	, [GroupEventType]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [IsArchived]
	, [RecurrenceActivityId]
	, [IsRecurrence]
	, [RecurrenceStartDateTime]
	, [RecurrenceEndDateOnly]
	, [RecurrenceTimeZoneSidKey]
	, [RecurrenceType]
	, [RecurrenceInterval]
	, [RecurrenceDayOfWeekMask]
	, [RecurrenceDayOfMonth]
	, [RecurrenceInstance]
	, [RecurrenceMonthOfYear]
	, [ReminderDateTime]
	, [IsReminderSet]
	, [EventSubtype]
	, [IsRecurrence2Exclusion]
	, [Recurrence2PatternText]
	, [Recurrence2PatternVersion]
	, [IsRecurrence2]
	, [IsRecurrence2Exception]
	, [Recurrence2PatternStartDate]
	, [Recurrence2PatternTimeZone]
	, [ServiceAppointmentId]
	, [BrightPattern__SPRecordingOrTranscriptURL__c]
	, [Center_Name__c]
	, [Completed_Date__c]
	, [External_ID__c]
	, [Lead__c]
	, [Meeting_Platform_Id__c]
	, [Meeting_Platform__c]
	, [Person_Account__c]
	, [Recording_Link__c]
	, [Result__c]
	, [SPRecordingOrTranscriptURL__c]
	, [Service_Appointment__c]
	, [Service_Territory_Caller_Id__c]
	, [Agent_Link__c]
	, [Guest_Link__c]
	, [Opportunity__c]
	, [Center_Phone__c]
	, [DB_Activity_Type__c]
	, [CallBackDueDate__c]
	, [Invite__c]
	, [AcceptedEventInviteeIds]
	, [DeclinedEventInviteeIds]
	, [EventWhoIds]
	, [UndecidedEventInviteeIds]
	)
	VALUES(
	[s].[Id]
	, [s].[WhoId]
	, [s].[WhatId]
	, [s].[WhoCount]
	, [s].[WhatCount]
	, [s].[Subject]
	, [s].[Location]
	, [s].[IsAllDayEvent]
	, [s].[ActivityDateTime]
	, [s].[ActivityDate]
	, [s].[DurationInMinutes]
	, [s].[StartDateTime]
	, [s].[EndDateTime]
	, [s].[EndDate]
	, [s].[Description]
	, [s].[AccountId]
	, [s].[OwnerId]
	, [s].[CurrencyIsoCode]
	, [s].[Type]
	, [s].[IsPrivate]
	, [s].[ShowAs]
	, [s].[IsDeleted]
	, [s].[IsChild]
	, [s].[IsGroupEvent]
	, [s].[GroupEventType]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[IsArchived]
	, [s].[RecurrenceActivityId]
	, [s].[IsRecurrence]
	, [s].[RecurrenceStartDateTime]
	, [s].[RecurrenceEndDateOnly]
	, [s].[RecurrenceTimeZoneSidKey]
	, [s].[RecurrenceType]
	, [s].[RecurrenceInterval]
	, [s].[RecurrenceDayOfWeekMask]
	, [s].[RecurrenceDayOfMonth]
	, [s].[RecurrenceInstance]
	, [s].[RecurrenceMonthOfYear]
	, [s].[ReminderDateTime]
	, [s].[IsReminderSet]
	, [s].[EventSubtype]
	, [s].[IsRecurrence2Exclusion]
	, [s].[Recurrence2PatternText]
	, [s].[Recurrence2PatternVersion]
	, [s].[IsRecurrence2]
	, [s].[IsRecurrence2Exception]
	, [s].[Recurrence2PatternStartDate]
	, [s].[Recurrence2PatternTimeZone]
	, [s].[ServiceAppointmentId]
	, [s].[BrightPattern__SPRecordingOrTranscriptURL__c]
	, [s].[Center_Name__c]
	, [s].[Completed_Date__c]
	, [s].[External_ID__c]
	, [s].[Lead__c]
	, [s].[Meeting_Platform_Id__c]
	, [s].[Meeting_Platform__c]
	, [s].[Person_Account__c]
	, [s].[Recording_Link__c]
	, [s].[Result__c]
	, [s].[SPRecordingOrTranscriptURL__c]
	, [s].[Service_Appointment__c]
	, [s].[Service_Territory_Caller_Id__c]
	, [s].[Agent_Link__c]
	, [s].[Guest_Link__c]
	, [s].[Opportunity__c]
	, [s].[Center_Phone__c]
	, [s].[DB_Activity_Type__c]
	, [s].[CallBackDueDate__c]
	, [s].[Invite__c]
	, [s].[AcceptedEventInviteeIds]
	, [s].[DeclinedEventInviteeIds]
	, [s].[EventWhoIds]
	, [s].[UndecidedEventInviteeIds]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[Event] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_Location_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_Location_Merge]
GO
CREATE PROCEDURE [SF].[sp_Location_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[Location])
RETURN ;

BEGIN TRY
;MERGE [SF].[Location] AS [t]
USING [SFStaging].[Location] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OwnerId] = [t].[OwnerId]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[Name] = [t].[Name]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[LocationType] = [t].[LocationType]
	, [t].[Latitude] = [t].[Latitude]
	, [t].[Longitude] = [t].[Longitude]
	, [t].[Location] = [t].[Location]
	, [t].[Description] = [t].[Description]
	, [t].[DrivingDirections] = [t].[DrivingDirections]
	, [t].[TimeZone] = [t].[TimeZone]
	, [t].[ParentLocationId] = [t].[ParentLocationId]
	, [t].[PossessionDate] = [t].[PossessionDate]
	, [t].[ConstructionStartDate] = [t].[ConstructionStartDate]
	, [t].[ConstructionEndDate] = [t].[ConstructionEndDate]
	, [t].[OpenDate] = [t].[OpenDate]
	, [t].[CloseDate] = [t].[CloseDate]
	, [t].[RemodelStartDate] = [t].[RemodelStartDate]
	, [t].[RemodelEndDate] = [t].[RemodelEndDate]
	, [t].[IsMobile] = [t].[IsMobile]
	, [t].[IsInventoryLocation] = [t].[IsInventoryLocation]
	, [t].[RootLocationId] = [t].[RootLocationId]
	, [t].[LocationLevel] = [t].[LocationLevel]
	, [t].[ExternalReference] = [t].[ExternalReference]
	, [t].[LogoId] = [t].[LogoId]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OwnerId]
	, [IsDeleted]
	, [Name]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [LocationType]
	, [Latitude]
	, [Longitude]
	, [Location]
	, [Description]
	, [DrivingDirections]
	, [TimeZone]
	, [ParentLocationId]
	, [PossessionDate]
	, [ConstructionStartDate]
	, [ConstructionEndDate]
	, [OpenDate]
	, [CloseDate]
	, [RemodelStartDate]
	, [RemodelEndDate]
	, [IsMobile]
	, [IsInventoryLocation]
	, [RootLocationId]
	, [LocationLevel]
	, [ExternalReference]
	, [LogoId]
	)
	VALUES(
	[s].[Id]
	, [s].[OwnerId]
	, [s].[IsDeleted]
	, [s].[Name]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[LocationType]
	, [s].[Latitude]
	, [s].[Longitude]
	, [s].[Location]
	, [s].[Description]
	, [s].[DrivingDirections]
	, [s].[TimeZone]
	, [s].[ParentLocationId]
	, [s].[PossessionDate]
	, [s].[ConstructionStartDate]
	, [s].[ConstructionEndDate]
	, [s].[OpenDate]
	, [s].[CloseDate]
	, [s].[RemodelStartDate]
	, [s].[RemodelEndDate]
	, [s].[IsMobile]
	, [s].[IsInventoryLocation]
	, [s].[RootLocationId]
	, [s].[LocationLevel]
	, [s].[ExternalReference]
	, [s].[LogoId]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[Location] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_Opportunity_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_Opportunity_Merge]
GO
CREATE PROCEDURE [SF].[sp_Opportunity_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[Opportunity])
RETURN ;

BEGIN TRY
;MERGE [SF].[Opportunity] AS [t]
USING [SFStaging].[Opportunity] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[AccountId] = [t].[AccountId]
	, [t].[RecordTypeId] = [t].[RecordTypeId]
	, [t].[IsPrivate] = [t].[IsPrivate]
	, [t].[Name] = [t].[Name]
	, [t].[Description] = [t].[Description]
	, [t].[StageName] = [t].[StageName]
	, [t].[Amount] = [t].[Amount]
	, [t].[Probability] = [t].[Probability]
	, [t].[ExpectedRevenue] = [t].[ExpectedRevenue]
	, [t].[TotalOpportunityQuantity] = [t].[TotalOpportunityQuantity]
	, [t].[CloseDate] = [t].[CloseDate]
	, [t].[Type] = [t].[Type]
	, [t].[NextStep] = [t].[NextStep]
	, [t].[LeadSource] = [t].[LeadSource]
	, [t].[IsClosed] = [t].[IsClosed]
	, [t].[IsWon] = [t].[IsWon]
	, [t].[ForecastCategory] = [t].[ForecastCategory]
	, [t].[ForecastCategoryName] = [t].[ForecastCategoryName]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CampaignId] = [t].[CampaignId]
	, [t].[HasOpportunityLineItem] = [t].[HasOpportunityLineItem]
	, [t].[Pricebook2Id] = [t].[Pricebook2Id]
	, [t].[OwnerId] = [t].[OwnerId]
	, [t].[Territory2Id] = [t].[Territory2Id]
	, [t].[IsExcludedFromTerritory2Filter] = [t].[IsExcludedFromTerritory2Filter]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastActivityDate] = [t].[LastActivityDate]
	, [t].[PushCount] = [t].[PushCount]
	, [t].[LastStageChangeDate] = [t].[LastStageChangeDate]
	, [t].[FiscalQuarter] = [t].[FiscalQuarter]
	, [t].[FiscalYear] = [t].[FiscalYear]
	, [t].[Fiscal] = [t].[Fiscal]
	, [t].[ContactId] = [t].[ContactId]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[SyncedQuoteId] = [t].[SyncedQuoteId]
	, [t].[ContractId] = [t].[ContractId]
	, [t].[HasOpenActivity] = [t].[HasOpenActivity]
	, [t].[HasOverdueTask] = [t].[HasOverdueTask]
	, [t].[IqScore] = [t].[IqScore]
	, [t].[LastAmountChangedHistoryId] = [t].[LastAmountChangedHistoryId]
	, [t].[LastCloseDateChangedHistoryId] = [t].[LastCloseDateChangedHistoryId]
	, [t].[Budget_Confirmed__c] = [t].[Budget_Confirmed__c]
	, [t].[Discovery_Completed__c] = [t].[Discovery_Completed__c]
	, [t].[ROI_Analysis_Completed__c] = [t].[ROI_Analysis_Completed__c]
	, [t].[Appointment_Source__c] = [t].[Appointment_Source__c]
	, [t].[Loss_Reason__c] = [t].[Loss_Reason__c]
	, [t].[Cancellation_Reason__c] = [t].[Cancellation_Reason__c]
	, [t].[Hair_Loss_Experience__c] = [t].[Hair_Loss_Experience__c]
	, [t].[Hair_Loss_Family__c] = [t].[Hair_Loss_Family__c]
	, [t].[Hair_Loss_Or_Volume__c] = [t].[Hair_Loss_Or_Volume__c]
	, [t].[Hair_Loss_Product_Other__c] = [t].[Hair_Loss_Product_Other__c]
	, [t].[Hair_Loss_Product_Used__c] = [t].[Hair_Loss_Product_Used__c]
	, [t].[Hair_Loss_Spot__c] = [t].[Hair_Loss_Spot__c]
	, [t].[IP_Address__c] = [t].[IP_Address__c]
	, [t].[Ludwig_Scale__c] = [t].[Ludwig_Scale__c]
	, [t].[Norwood_Scale__c] = [t].[Norwood_Scale__c]
	, [t].[Referral_Code_Expiration_Date__c] = [t].[Referral_Code_Expiration_Date__c]
	, [t].[Referral_Code__c] = [t].[Referral_Code__c]
	, [t].[Service_Territory__c] = [t].[Service_Territory__c]
	, [t].[DB_Competitor__c] = [t].[DB_Competitor__c]
	, [t].[Source_Code__c] = [t].[Source_Code__c]
	, [t].[Submitted_for_Approval__c] = [t].[Submitted_for_Approval__c]
	, [t].[Ammount__c] = [t].[Ammount__c]
	, [t].[GCLID__c] = [t].[GCLID__c]
	, [t].[Promo_Code__c] = [t].[Promo_Code__c]
	, [t].[SolutionOffered__c] = [t].[SolutionOffered__c]
	, [t].[Approver__c] = [t].[Approver__c]
	, [t].[Email__c] = [t].[Email__c]
	, [t].[Goals_Expectations__c] = [t].[Goals_Expectations__c]
	, [t].[How_many_times_a_week_do_you_think__c] = [t].[How_many_times_a_week_do_you_think__c]
	, [t].[How_much_time_a_week_do_you_spend__c] = [t].[How_much_time_a_week_do_you_spend__c]
	, [t].[Mobile__c] = [t].[Mobile__c]
	, [t].[Opportunity_Owner__c] = [t].[Opportunity_Owner__c]
	, [t].[Other_Reason__c] = [t].[Other_Reason__c]
	, [t].[Owner__c] = [t].[Owner__c]
	, [t].[Phone__c] = [t].[Phone__c]
	, [t].[What_are_your_main_concerns_today__c] = [t].[What_are_your_main_concerns_today__c]
	, [t].[What_else_would_be_helpful_for_your__c] = [t].[What_else_would_be_helpful_for_your__c]
	, [t].[What_methods_have_you_used_or_currently__c] = [t].[What_methods_have_you_used_or_currently__c]
	, [t].[RefersionLogId__c] = [t].[RefersionLogId__c]
	, [t].[Commission_Paid__c] = [t].[Commission_Paid__c]
	, [t].[Owner_Division__c] = [t].[Owner_Division__c]
	, [t].[Service_Territory_Number__c] = [t].[Service_Territory_Number__c]
	, [t].[Commission_Override__c] = [t].[Commission_Override__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [AccountId]
	, [RecordTypeId]
	, [IsPrivate]
	, [Name]
	, [Description]
	, [StageName]
	, [Amount]
	, [Probability]
	, [ExpectedRevenue]
	, [TotalOpportunityQuantity]
	, [CloseDate]
	, [Type]
	, [NextStep]
	, [LeadSource]
	, [IsClosed]
	, [IsWon]
	, [ForecastCategory]
	, [ForecastCategoryName]
	, [CurrencyIsoCode]
	, [CampaignId]
	, [HasOpportunityLineItem]
	, [Pricebook2Id]
	, [OwnerId]
	, [Territory2Id]
	, [IsExcludedFromTerritory2Filter]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastActivityDate]
	, [PushCount]
	, [LastStageChangeDate]
	, [FiscalQuarter]
	, [FiscalYear]
	, [Fiscal]
	, [ContactId]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [SyncedQuoteId]
	, [ContractId]
	, [HasOpenActivity]
	, [HasOverdueTask]
	, [IqScore]
	, [LastAmountChangedHistoryId]
	, [LastCloseDateChangedHistoryId]
	, [Budget_Confirmed__c]
	, [Discovery_Completed__c]
	, [ROI_Analysis_Completed__c]
	, [Appointment_Source__c]
	, [Loss_Reason__c]
	, [Cancellation_Reason__c]
	, [Hair_Loss_Experience__c]
	, [Hair_Loss_Family__c]
	, [Hair_Loss_Or_Volume__c]
	, [Hair_Loss_Product_Other__c]
	, [Hair_Loss_Product_Used__c]
	, [Hair_Loss_Spot__c]
	, [IP_Address__c]
	, [Ludwig_Scale__c]
	, [Norwood_Scale__c]
	, [Referral_Code_Expiration_Date__c]
	, [Referral_Code__c]
	, [Service_Territory__c]
	, [DB_Competitor__c]
	, [Source_Code__c]
	, [Submitted_for_Approval__c]
	, [Ammount__c]
	, [GCLID__c]
	, [Promo_Code__c]
	, [SolutionOffered__c]
	, [Approver__c]
	, [Email__c]
	, [Goals_Expectations__c]
	, [How_many_times_a_week_do_you_think__c]
	, [How_much_time_a_week_do_you_spend__c]
	, [Mobile__c]
	, [Opportunity_Owner__c]
	, [Other_Reason__c]
	, [Owner__c]
	, [Phone__c]
	, [What_are_your_main_concerns_today__c]
	, [What_else_would_be_helpful_for_your__c]
	, [What_methods_have_you_used_or_currently__c]
	, [RefersionLogId__c]
	, [Commission_Paid__c]
	, [Owner_Division__c]
	, [Service_Territory_Number__c]
	, [Commission_Override__c]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[AccountId]
	, [s].[RecordTypeId]
	, [s].[IsPrivate]
	, [s].[Name]
	, [s].[Description]
	, [s].[StageName]
	, [s].[Amount]
	, [s].[Probability]
	, [s].[ExpectedRevenue]
	, [s].[TotalOpportunityQuantity]
	, [s].[CloseDate]
	, [s].[Type]
	, [s].[NextStep]
	, [s].[LeadSource]
	, [s].[IsClosed]
	, [s].[IsWon]
	, [s].[ForecastCategory]
	, [s].[ForecastCategoryName]
	, [s].[CurrencyIsoCode]
	, [s].[CampaignId]
	, [s].[HasOpportunityLineItem]
	, [s].[Pricebook2Id]
	, [s].[OwnerId]
	, [s].[Territory2Id]
	, [s].[IsExcludedFromTerritory2Filter]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastActivityDate]
	, [s].[PushCount]
	, [s].[LastStageChangeDate]
	, [s].[FiscalQuarter]
	, [s].[FiscalYear]
	, [s].[Fiscal]
	, [s].[ContactId]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[SyncedQuoteId]
	, [s].[ContractId]
	, [s].[HasOpenActivity]
	, [s].[HasOverdueTask]
	, [s].[IqScore]
	, [s].[LastAmountChangedHistoryId]
	, [s].[LastCloseDateChangedHistoryId]
	, [s].[Budget_Confirmed__c]
	, [s].[Discovery_Completed__c]
	, [s].[ROI_Analysis_Completed__c]
	, [s].[Appointment_Source__c]
	, [s].[Loss_Reason__c]
	, [s].[Cancellation_Reason__c]
	, [s].[Hair_Loss_Experience__c]
	, [s].[Hair_Loss_Family__c]
	, [s].[Hair_Loss_Or_Volume__c]
	, [s].[Hair_Loss_Product_Other__c]
	, [s].[Hair_Loss_Product_Used__c]
	, [s].[Hair_Loss_Spot__c]
	, [s].[IP_Address__c]
	, [s].[Ludwig_Scale__c]
	, [s].[Norwood_Scale__c]
	, [s].[Referral_Code_Expiration_Date__c]
	, [s].[Referral_Code__c]
	, [s].[Service_Territory__c]
	, [s].[DB_Competitor__c]
	, [s].[Source_Code__c]
	, [s].[Submitted_for_Approval__c]
	, [s].[Ammount__c]
	, [s].[GCLID__c]
	, [s].[Promo_Code__c]
	, [s].[SolutionOffered__c]
	, [s].[Approver__c]
	, [s].[Email__c]
	, [s].[Goals_Expectations__c]
	, [s].[How_many_times_a_week_do_you_think__c]
	, [s].[How_much_time_a_week_do_you_spend__c]
	, [s].[Mobile__c]
	, [s].[Opportunity_Owner__c]
	, [s].[Other_Reason__c]
	, [s].[Owner__c]
	, [s].[Phone__c]
	, [s].[What_are_your_main_concerns_today__c]
	, [s].[What_else_would_be_helpful_for_your__c]
	, [s].[What_methods_have_you_used_or_currently__c]
	, [s].[RefersionLogId__c]
	, [s].[Commission_Paid__c]
	, [s].[Owner_Division__c]
	, [s].[Service_Territory_Number__c]
	, [s].[Commission_Override__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[Opportunity] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_OpportunityContactRole_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_OpportunityContactRole_Merge]
GO
CREATE PROCEDURE [SF].[sp_OpportunityContactRole_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[OpportunityContactRole])
RETURN ;

BEGIN TRY
;MERGE [SF].[OpportunityContactRole] AS [t]
USING [SFStaging].[OpportunityContactRole] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OpportunityId] = [t].[OpportunityId]
	, [t].[ContactId] = [t].[ContactId]
	, [t].[Role] = [t].[Role]
	, [t].[IsPrimary] = [t].[IsPrimary]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OpportunityId]
	, [ContactId]
	, [Role]
	, [IsPrimary]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [IsDeleted]
	, [CurrencyIsoCode]
	)
	VALUES(
	[s].[Id]
	, [s].[OpportunityId]
	, [s].[ContactId]
	, [s].[Role]
	, [s].[IsPrimary]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[IsDeleted]
	, [s].[CurrencyIsoCode]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[OpportunityContactRole] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_OpportunityLineItem_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_OpportunityLineItem_Merge]
GO
CREATE PROCEDURE [SF].[sp_OpportunityLineItem_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[OpportunityLineItem])
RETURN ;

BEGIN TRY
;MERGE [SF].[OpportunityLineItem] AS [t]
USING [SFStaging].[OpportunityLineItem] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OpportunityId] = [t].[OpportunityId]
	, [t].[SortOrder] = [t].[SortOrder]
	, [t].[PricebookEntryId] = [t].[PricebookEntryId]
	, [t].[Product2Id] = [t].[Product2Id]
	, [t].[ProductCode] = [t].[ProductCode]
	, [t].[Name] = [t].[Name]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[Quantity] = [t].[Quantity]
	, [t].[TotalPrice] = [t].[TotalPrice]
	, [t].[UnitPrice] = [t].[UnitPrice]
	, [t].[ListPrice] = [t].[ListPrice]
	, [t].[ServiceDate] = [t].[ServiceDate]
	, [t].[HasRevenueSchedule] = [t].[HasRevenueSchedule]
	, [t].[HasQuantitySchedule] = [t].[HasQuantitySchedule]
	, [t].[Description] = [t].[Description]
	, [t].[HasSchedule] = [t].[HasSchedule]
	, [t].[CanUseQuantitySchedule] = [t].[CanUseQuantitySchedule]
	, [t].[CanUseRevenueSchedule] = [t].[CanUseRevenueSchedule]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OpportunityId]
	, [SortOrder]
	, [PricebookEntryId]
	, [Product2Id]
	, [ProductCode]
	, [Name]
	, [CurrencyIsoCode]
	, [Quantity]
	, [TotalPrice]
	, [UnitPrice]
	, [ListPrice]
	, [ServiceDate]
	, [HasRevenueSchedule]
	, [HasQuantitySchedule]
	, [Description]
	, [HasSchedule]
	, [CanUseQuantitySchedule]
	, [CanUseRevenueSchedule]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [IsDeleted]
	, [LastViewedDate]
	, [LastReferencedDate]
	)
	VALUES(
	[s].[Id]
	, [s].[OpportunityId]
	, [s].[SortOrder]
	, [s].[PricebookEntryId]
	, [s].[Product2Id]
	, [s].[ProductCode]
	, [s].[Name]
	, [s].[CurrencyIsoCode]
	, [s].[Quantity]
	, [s].[TotalPrice]
	, [s].[UnitPrice]
	, [s].[ListPrice]
	, [s].[ServiceDate]
	, [s].[HasRevenueSchedule]
	, [s].[HasQuantitySchedule]
	, [s].[Description]
	, [s].[HasSchedule]
	, [s].[CanUseQuantitySchedule]
	, [s].[CanUseRevenueSchedule]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[IsDeleted]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[OpportunityLineItem] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_OpportunityLineItemSchedule_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_OpportunityLineItemSchedule_Merge]
GO
CREATE PROCEDURE [SF].[sp_OpportunityLineItemSchedule_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[OpportunityLineItemSchedule])
RETURN ;

BEGIN TRY
;MERGE [SF].[OpportunityLineItemSchedule] AS [t]
USING [SFStaging].[OpportunityLineItemSchedule] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OpportunityLineItemId] = [t].[OpportunityLineItemId]
	, [t].[Type] = [t].[Type]
	, [t].[Revenue] = [t].[Revenue]
	, [t].[Quantity] = [t].[Quantity]
	, [t].[Description] = [t].[Description]
	, [t].[ScheduleDate] = [t].[ScheduleDate]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[IsDeleted] = [t].[IsDeleted]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OpportunityLineItemId]
	, [Type]
	, [Revenue]
	, [Quantity]
	, [Description]
	, [ScheduleDate]
	, [CurrencyIsoCode]
	, [CreatedById]
	, [CreatedDate]
	, [LastModifiedById]
	, [LastModifiedDate]
	, [SystemModstamp]
	, [IsDeleted]
	)
	VALUES(
	[s].[Id]
	, [s].[OpportunityLineItemId]
	, [s].[Type]
	, [s].[Revenue]
	, [s].[Quantity]
	, [s].[Description]
	, [s].[ScheduleDate]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedById]
	, [s].[CreatedDate]
	, [s].[LastModifiedById]
	, [s].[LastModifiedDate]
	, [s].[SystemModstamp]
	, [s].[IsDeleted]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[OpportunityLineItemSchedule] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_OpportunityTeamMember_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_OpportunityTeamMember_Merge]
GO
CREATE PROCEDURE [SF].[sp_OpportunityTeamMember_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[OpportunityTeamMember])
RETURN ;

BEGIN TRY
;MERGE [SF].[OpportunityTeamMember] AS [t]
USING [SFStaging].[OpportunityTeamMember] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OpportunityId] = [t].[OpportunityId]
	, [t].[UserId] = [t].[UserId]
	, [t].[Name] = [t].[Name]
	, [t].[PhotoUrl] = [t].[PhotoUrl]
	, [t].[Title] = [t].[Title]
	, [t].[TeamMemberRole] = [t].[TeamMemberRole]
	, [t].[OpportunityAccessLevel] = [t].[OpportunityAccessLevel]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[IsDeleted] = [t].[IsDeleted]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OpportunityId]
	, [UserId]
	, [Name]
	, [PhotoUrl]
	, [Title]
	, [TeamMemberRole]
	, [OpportunityAccessLevel]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [IsDeleted]
	)
	VALUES(
	[s].[Id]
	, [s].[OpportunityId]
	, [s].[UserId]
	, [s].[Name]
	, [s].[PhotoUrl]
	, [s].[Title]
	, [s].[TeamMemberRole]
	, [s].[OpportunityAccessLevel]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[IsDeleted]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[OpportunityTeamMember] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_Order_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_Order_Merge]
GO
CREATE PROCEDURE [SF].[sp_Order_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[Order])
RETURN ;

BEGIN TRY
;MERGE [SF].[Order] AS [t]
USING [SFStaging].[Order] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OwnerId] = [t].[OwnerId]
	, [t].[ContractId] = [t].[ContractId]
	, [t].[AccountId] = [t].[AccountId]
	, [t].[Pricebook2Id] = [t].[Pricebook2Id]
	, [t].[OriginalOrderId] = [t].[OriginalOrderId]
	, [t].[EffectiveDate] = [t].[EffectiveDate]
	, [t].[EndDate] = [t].[EndDate]
	, [t].[IsReductionOrder] = [t].[IsReductionOrder]
	, [t].[Status] = [t].[Status]
	, [t].[Description] = [t].[Description]
	, [t].[CustomerAuthorizedById] = [t].[CustomerAuthorizedById]
	, [t].[CompanyAuthorizedById] = [t].[CompanyAuthorizedById]
	, [t].[Type] = [t].[Type]
	, [t].[BillingStreet] = [t].[BillingStreet]
	, [t].[BillingCity] = [t].[BillingCity]
	, [t].[BillingState] = [t].[BillingState]
	, [t].[BillingPostalCode] = [t].[BillingPostalCode]
	, [t].[BillingCountry] = [t].[BillingCountry]
	, [t].[BillingStateCode] = [t].[BillingStateCode]
	, [t].[BillingCountryCode] = [t].[BillingCountryCode]
	, [t].[BillingLatitude] = [t].[BillingLatitude]
	, [t].[BillingLongitude] = [t].[BillingLongitude]
	, [t].[BillingGeocodeAccuracy] = [t].[BillingGeocodeAccuracy]
	, [t].[BillingAddress] = [t].[BillingAddress]
	, [t].[ShippingStreet] = [t].[ShippingStreet]
	, [t].[ShippingCity] = [t].[ShippingCity]
	, [t].[ShippingState] = [t].[ShippingState]
	, [t].[ShippingPostalCode] = [t].[ShippingPostalCode]
	, [t].[ShippingCountry] = [t].[ShippingCountry]
	, [t].[ShippingStateCode] = [t].[ShippingStateCode]
	, [t].[ShippingCountryCode] = [t].[ShippingCountryCode]
	, [t].[ShippingLatitude] = [t].[ShippingLatitude]
	, [t].[ShippingLongitude] = [t].[ShippingLongitude]
	, [t].[ShippingGeocodeAccuracy] = [t].[ShippingGeocodeAccuracy]
	, [t].[ShippingAddress] = [t].[ShippingAddress]
	, [t].[ActivatedDate] = [t].[ActivatedDate]
	, [t].[ActivatedById] = [t].[ActivatedById]
	, [t].[StatusCode] = [t].[StatusCode]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[OrderNumber] = [t].[OrderNumber]
	, [t].[TotalAmount] = [t].[TotalAmount]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OwnerId]
	, [ContractId]
	, [AccountId]
	, [Pricebook2Id]
	, [OriginalOrderId]
	, [EffectiveDate]
	, [EndDate]
	, [IsReductionOrder]
	, [Status]
	, [Description]
	, [CustomerAuthorizedById]
	, [CompanyAuthorizedById]
	, [Type]
	, [BillingStreet]
	, [BillingCity]
	, [BillingState]
	, [BillingPostalCode]
	, [BillingCountry]
	, [BillingStateCode]
	, [BillingCountryCode]
	, [BillingLatitude]
	, [BillingLongitude]
	, [BillingGeocodeAccuracy]
	, [BillingAddress]
	, [ShippingStreet]
	, [ShippingCity]
	, [ShippingState]
	, [ShippingPostalCode]
	, [ShippingCountry]
	, [ShippingStateCode]
	, [ShippingCountryCode]
	, [ShippingLatitude]
	, [ShippingLongitude]
	, [ShippingGeocodeAccuracy]
	, [ShippingAddress]
	, [ActivatedDate]
	, [ActivatedById]
	, [StatusCode]
	, [CurrencyIsoCode]
	, [OrderNumber]
	, [TotalAmount]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [IsDeleted]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	)
	VALUES(
	[s].[Id]
	, [s].[OwnerId]
	, [s].[ContractId]
	, [s].[AccountId]
	, [s].[Pricebook2Id]
	, [s].[OriginalOrderId]
	, [s].[EffectiveDate]
	, [s].[EndDate]
	, [s].[IsReductionOrder]
	, [s].[Status]
	, [s].[Description]
	, [s].[CustomerAuthorizedById]
	, [s].[CompanyAuthorizedById]
	, [s].[Type]
	, [s].[BillingStreet]
	, [s].[BillingCity]
	, [s].[BillingState]
	, [s].[BillingPostalCode]
	, [s].[BillingCountry]
	, [s].[BillingStateCode]
	, [s].[BillingCountryCode]
	, [s].[BillingLatitude]
	, [s].[BillingLongitude]
	, [s].[BillingGeocodeAccuracy]
	, [s].[BillingAddress]
	, [s].[ShippingStreet]
	, [s].[ShippingCity]
	, [s].[ShippingState]
	, [s].[ShippingPostalCode]
	, [s].[ShippingCountry]
	, [s].[ShippingStateCode]
	, [s].[ShippingCountryCode]
	, [s].[ShippingLatitude]
	, [s].[ShippingLongitude]
	, [s].[ShippingGeocodeAccuracy]
	, [s].[ShippingAddress]
	, [s].[ActivatedDate]
	, [s].[ActivatedById]
	, [s].[StatusCode]
	, [s].[CurrencyIsoCode]
	, [s].[OrderNumber]
	, [s].[TotalAmount]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[IsDeleted]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[Order] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_OrderItem_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_OrderItem_Merge]
GO
CREATE PROCEDURE [SF].[sp_OrderItem_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[OrderItem])
RETURN ;

BEGIN TRY
;MERGE [SF].[OrderItem] AS [t]
USING [SFStaging].[OrderItem] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[Product2Id] = [t].[Product2Id]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[OrderId] = [t].[OrderId]
	, [t].[PricebookEntryId] = [t].[PricebookEntryId]
	, [t].[OriginalOrderItemId] = [t].[OriginalOrderItemId]
	, [t].[AvailableQuantity] = [t].[AvailableQuantity]
	, [t].[Quantity] = [t].[Quantity]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[UnitPrice] = [t].[UnitPrice]
	, [t].[ListPrice] = [t].[ListPrice]
	, [t].[TotalPrice] = [t].[TotalPrice]
	, [t].[ServiceDate] = [t].[ServiceDate]
	, [t].[EndDate] = [t].[EndDate]
	, [t].[Description] = [t].[Description]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[OrderItemNumber] = [t].[OrderItemNumber]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [Product2Id]
	, [IsDeleted]
	, [OrderId]
	, [PricebookEntryId]
	, [OriginalOrderItemId]
	, [AvailableQuantity]
	, [Quantity]
	, [CurrencyIsoCode]
	, [UnitPrice]
	, [ListPrice]
	, [TotalPrice]
	, [ServiceDate]
	, [EndDate]
	, [Description]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [OrderItemNumber]
	)
	VALUES(
	[s].[Id]
	, [s].[Product2Id]
	, [s].[IsDeleted]
	, [s].[OrderId]
	, [s].[PricebookEntryId]
	, [s].[OriginalOrderItemId]
	, [s].[AvailableQuantity]
	, [s].[Quantity]
	, [s].[CurrencyIsoCode]
	, [s].[UnitPrice]
	, [s].[ListPrice]
	, [s].[TotalPrice]
	, [s].[ServiceDate]
	, [s].[EndDate]
	, [s].[Description]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[OrderItemNumber]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[OrderItem] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_PromoCode__c_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_PromoCode__c_Merge]
GO
CREATE PROCEDURE [SF].[sp_PromoCode__c_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[PromoCode__c])
RETURN ;

BEGIN TRY
;MERGE [SF].[PromoCode__c] AS [t]
USING [SFStaging].[PromoCode__c] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OwnerId] = [t].[OwnerId]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[Name] = [t].[Name]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastActivityDate] = [t].[LastActivityDate]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[Active__c] = [t].[Active__c]
	, [t].[DiscountType__c] = [t].[DiscountType__c]
	, [t].[EndDate__c] = [t].[EndDate__c]
	, [t].[NCCAvailable__c] = [t].[NCCAvailable__c]
	, [t].[PromoCodeDisplay__c] = [t].[PromoCodeDisplay__c]
	, [t].[PromoCodeSort__c] = [t].[PromoCodeSort__c]
	, [t].[StartDate__c] = [t].[StartDate__c]
	, [t].[External_Id__c] = [t].[External_Id__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OwnerId]
	, [IsDeleted]
	, [Name]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastActivityDate]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [Active__c]
	, [DiscountType__c]
	, [EndDate__c]
	, [NCCAvailable__c]
	, [PromoCodeDisplay__c]
	, [PromoCodeSort__c]
	, [StartDate__c]
	, [External_Id__c]
	)
	VALUES(
	[s].[Id]
	, [s].[OwnerId]
	, [s].[IsDeleted]
	, [s].[Name]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastActivityDate]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[Active__c]
	, [s].[DiscountType__c]
	, [s].[EndDate__c]
	, [s].[NCCAvailable__c]
	, [s].[PromoCodeDisplay__c]
	, [s].[PromoCodeSort__c]
	, [s].[StartDate__c]
	, [s].[External_Id__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[PromoCode__c] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_Quote_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_Quote_Merge]
GO
CREATE PROCEDURE [SF].[sp_Quote_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[Quote])
RETURN ;

BEGIN TRY
;MERGE [SF].[Quote] AS [t]
USING [SFStaging].[Quote] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OwnerId] = [t].[OwnerId]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[Name] = [t].[Name]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[OpportunityId] = [t].[OpportunityId]
	, [t].[Pricebook2Id] = [t].[Pricebook2Id]
	, [t].[ContactId] = [t].[ContactId]
	, [t].[QuoteNumber] = [t].[QuoteNumber]
	, [t].[IsSyncing] = [t].[IsSyncing]
	, [t].[ShippingHandling] = [t].[ShippingHandling]
	, [t].[Tax] = [t].[Tax]
	, [t].[Status] = [t].[Status]
	, [t].[ExpirationDate] = [t].[ExpirationDate]
	, [t].[Description] = [t].[Description]
	, [t].[Subtotal] = [t].[Subtotal]
	, [t].[TotalPrice] = [t].[TotalPrice]
	, [t].[LineItemCount] = [t].[LineItemCount]
	, [t].[BillingStreet] = [t].[BillingStreet]
	, [t].[BillingCity] = [t].[BillingCity]
	, [t].[BillingState] = [t].[BillingState]
	, [t].[BillingPostalCode] = [t].[BillingPostalCode]
	, [t].[BillingCountry] = [t].[BillingCountry]
	, [t].[BillingStateCode] = [t].[BillingStateCode]
	, [t].[BillingCountryCode] = [t].[BillingCountryCode]
	, [t].[BillingLatitude] = [t].[BillingLatitude]
	, [t].[BillingLongitude] = [t].[BillingLongitude]
	, [t].[BillingGeocodeAccuracy] = [t].[BillingGeocodeAccuracy]
	, [t].[BillingAddress] = [t].[BillingAddress]
	, [t].[ShippingStreet] = [t].[ShippingStreet]
	, [t].[ShippingCity] = [t].[ShippingCity]
	, [t].[ShippingState] = [t].[ShippingState]
	, [t].[ShippingPostalCode] = [t].[ShippingPostalCode]
	, [t].[ShippingCountry] = [t].[ShippingCountry]
	, [t].[ShippingStateCode] = [t].[ShippingStateCode]
	, [t].[ShippingCountryCode] = [t].[ShippingCountryCode]
	, [t].[ShippingLatitude] = [t].[ShippingLatitude]
	, [t].[ShippingLongitude] = [t].[ShippingLongitude]
	, [t].[ShippingGeocodeAccuracy] = [t].[ShippingGeocodeAccuracy]
	, [t].[ShippingAddress] = [t].[ShippingAddress]
	, [t].[QuoteToStreet] = [t].[QuoteToStreet]
	, [t].[QuoteToCity] = [t].[QuoteToCity]
	, [t].[QuoteToState] = [t].[QuoteToState]
	, [t].[QuoteToPostalCode] = [t].[QuoteToPostalCode]
	, [t].[QuoteToCountry] = [t].[QuoteToCountry]
	, [t].[QuoteToStateCode] = [t].[QuoteToStateCode]
	, [t].[QuoteToCountryCode] = [t].[QuoteToCountryCode]
	, [t].[QuoteToLatitude] = [t].[QuoteToLatitude]
	, [t].[QuoteToLongitude] = [t].[QuoteToLongitude]
	, [t].[QuoteToGeocodeAccuracy] = [t].[QuoteToGeocodeAccuracy]
	, [t].[QuoteToAddress] = [t].[QuoteToAddress]
	, [t].[AdditionalStreet] = [t].[AdditionalStreet]
	, [t].[AdditionalCity] = [t].[AdditionalCity]
	, [t].[AdditionalState] = [t].[AdditionalState]
	, [t].[AdditionalPostalCode] = [t].[AdditionalPostalCode]
	, [t].[AdditionalCountry] = [t].[AdditionalCountry]
	, [t].[AdditionalStateCode] = [t].[AdditionalStateCode]
	, [t].[AdditionalCountryCode] = [t].[AdditionalCountryCode]
	, [t].[AdditionalLatitude] = [t].[AdditionalLatitude]
	, [t].[AdditionalLongitude] = [t].[AdditionalLongitude]
	, [t].[AdditionalGeocodeAccuracy] = [t].[AdditionalGeocodeAccuracy]
	, [t].[AdditionalAddress] = [t].[AdditionalAddress]
	, [t].[BillingName] = [t].[BillingName]
	, [t].[ShippingName] = [t].[ShippingName]
	, [t].[QuoteToName] = [t].[QuoteToName]
	, [t].[AdditionalName] = [t].[AdditionalName]
	, [t].[Email] = [t].[Email]
	, [t].[Phone] = [t].[Phone]
	, [t].[Fax] = [t].[Fax]
	, [t].[ContractId] = [t].[ContractId]
	, [t].[AccountId] = [t].[AccountId]
	, [t].[Discount] = [t].[Discount]
	, [t].[GrandTotal] = [t].[GrandTotal]
	, [t].[CanCreateQuoteLineItems] = [t].[CanCreateQuoteLineItems]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OwnerId]
	, [IsDeleted]
	, [Name]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [OpportunityId]
	, [Pricebook2Id]
	, [ContactId]
	, [QuoteNumber]
	, [IsSyncing]
	, [ShippingHandling]
	, [Tax]
	, [Status]
	, [ExpirationDate]
	, [Description]
	, [Subtotal]
	, [TotalPrice]
	, [LineItemCount]
	, [BillingStreet]
	, [BillingCity]
	, [BillingState]
	, [BillingPostalCode]
	, [BillingCountry]
	, [BillingStateCode]
	, [BillingCountryCode]
	, [BillingLatitude]
	, [BillingLongitude]
	, [BillingGeocodeAccuracy]
	, [BillingAddress]
	, [ShippingStreet]
	, [ShippingCity]
	, [ShippingState]
	, [ShippingPostalCode]
	, [ShippingCountry]
	, [ShippingStateCode]
	, [ShippingCountryCode]
	, [ShippingLatitude]
	, [ShippingLongitude]
	, [ShippingGeocodeAccuracy]
	, [ShippingAddress]
	, [QuoteToStreet]
	, [QuoteToCity]
	, [QuoteToState]
	, [QuoteToPostalCode]
	, [QuoteToCountry]
	, [QuoteToStateCode]
	, [QuoteToCountryCode]
	, [QuoteToLatitude]
	, [QuoteToLongitude]
	, [QuoteToGeocodeAccuracy]
	, [QuoteToAddress]
	, [AdditionalStreet]
	, [AdditionalCity]
	, [AdditionalState]
	, [AdditionalPostalCode]
	, [AdditionalCountry]
	, [AdditionalStateCode]
	, [AdditionalCountryCode]
	, [AdditionalLatitude]
	, [AdditionalLongitude]
	, [AdditionalGeocodeAccuracy]
	, [AdditionalAddress]
	, [BillingName]
	, [ShippingName]
	, [QuoteToName]
	, [AdditionalName]
	, [Email]
	, [Phone]
	, [Fax]
	, [ContractId]
	, [AccountId]
	, [Discount]
	, [GrandTotal]
	, [CanCreateQuoteLineItems]
	)
	VALUES(
	[s].[Id]
	, [s].[OwnerId]
	, [s].[IsDeleted]
	, [s].[Name]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[OpportunityId]
	, [s].[Pricebook2Id]
	, [s].[ContactId]
	, [s].[QuoteNumber]
	, [s].[IsSyncing]
	, [s].[ShippingHandling]
	, [s].[Tax]
	, [s].[Status]
	, [s].[ExpirationDate]
	, [s].[Description]
	, [s].[Subtotal]
	, [s].[TotalPrice]
	, [s].[LineItemCount]
	, [s].[BillingStreet]
	, [s].[BillingCity]
	, [s].[BillingState]
	, [s].[BillingPostalCode]
	, [s].[BillingCountry]
	, [s].[BillingStateCode]
	, [s].[BillingCountryCode]
	, [s].[BillingLatitude]
	, [s].[BillingLongitude]
	, [s].[BillingGeocodeAccuracy]
	, [s].[BillingAddress]
	, [s].[ShippingStreet]
	, [s].[ShippingCity]
	, [s].[ShippingState]
	, [s].[ShippingPostalCode]
	, [s].[ShippingCountry]
	, [s].[ShippingStateCode]
	, [s].[ShippingCountryCode]
	, [s].[ShippingLatitude]
	, [s].[ShippingLongitude]
	, [s].[ShippingGeocodeAccuracy]
	, [s].[ShippingAddress]
	, [s].[QuoteToStreet]
	, [s].[QuoteToCity]
	, [s].[QuoteToState]
	, [s].[QuoteToPostalCode]
	, [s].[QuoteToCountry]
	, [s].[QuoteToStateCode]
	, [s].[QuoteToCountryCode]
	, [s].[QuoteToLatitude]
	, [s].[QuoteToLongitude]
	, [s].[QuoteToGeocodeAccuracy]
	, [s].[QuoteToAddress]
	, [s].[AdditionalStreet]
	, [s].[AdditionalCity]
	, [s].[AdditionalState]
	, [s].[AdditionalPostalCode]
	, [s].[AdditionalCountry]
	, [s].[AdditionalStateCode]
	, [s].[AdditionalCountryCode]
	, [s].[AdditionalLatitude]
	, [s].[AdditionalLongitude]
	, [s].[AdditionalGeocodeAccuracy]
	, [s].[AdditionalAddress]
	, [s].[BillingName]
	, [s].[ShippingName]
	, [s].[QuoteToName]
	, [s].[AdditionalName]
	, [s].[Email]
	, [s].[Phone]
	, [s].[Fax]
	, [s].[ContractId]
	, [s].[AccountId]
	, [s].[Discount]
	, [s].[GrandTotal]
	, [s].[CanCreateQuoteLineItems]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[Quote] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_ServiceAppointment_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_ServiceAppointment_Merge]
GO
CREATE PROCEDURE [SF].[sp_ServiceAppointment_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[ServiceAppointment])
RETURN ;

BEGIN TRY
;MERGE [SF].[ServiceAppointment] AS [t]
USING [SFStaging].[ServiceAppointment] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OwnerId] = [t].[OwnerId]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[AppointmentNumber] = [t].[AppointmentNumber]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[ParentRecordId] = [t].[ParentRecordId]
	, [t].[ParentRecordType] = [t].[ParentRecordType]
	, [t].[AccountId] = [t].[AccountId]
	, [t].[WorkTypeId] = [t].[WorkTypeId]
	, [t].[ContactId] = [t].[ContactId]
	, [t].[Street] = [t].[Street]
	, [t].[City] = [t].[City]
	, [t].[State] = [t].[State]
	, [t].[PostalCode] = [t].[PostalCode]
	, [t].[Country] = [t].[Country]
	, [t].[StateCode] = [t].[StateCode]
	, [t].[CountryCode] = [t].[CountryCode]
	, [t].[Latitude] = [t].[Latitude]
	, [t].[Longitude] = [t].[Longitude]
	, [t].[GeocodeAccuracy] = [t].[GeocodeAccuracy]
	, [t].[Address] = [t].[Address]
	, [t].[Description] = [t].[Description]
	, [t].[EarliestStartTime] = [t].[EarliestStartTime]
	, [t].[DueDate] = [t].[DueDate]
	, [t].[Duration] = [t].[Duration]
	, [t].[ArrivalWindowStartTime] = [t].[ArrivalWindowStartTime]
	, [t].[ArrivalWindowEndTime] = [t].[ArrivalWindowEndTime]
	, [t].[Status] = [t].[Status]
	, [t].[SchedStartTime] = [t].[SchedStartTime]
	, [t].[SchedEndTime] = [t].[SchedEndTime]
	, [t].[ActualStartTime] = [t].[ActualStartTime]
	, [t].[ActualEndTime] = [t].[ActualEndTime]
	, [t].[ActualDuration] = [t].[ActualDuration]
	, [t].[DurationType] = [t].[DurationType]
	, [t].[DurationInMinutes] = [t].[DurationInMinutes]
	, [t].[ServiceTerritoryId] = [t].[ServiceTerritoryId]
	, [t].[Subject] = [t].[Subject]
	, [t].[ParentRecordStatusCategory] = [t].[ParentRecordStatusCategory]
	, [t].[StatusCategory] = [t].[StatusCategory]
	, [t].[ServiceNote] = [t].[ServiceNote]
	, [t].[AppointmentType] = [t].[AppointmentType]
	, [t].[Email] = [t].[Email]
	, [t].[Phone] = [t].[Phone]
	, [t].[CancellationReason] = [t].[CancellationReason]
	, [t].[AdditionalInformation] = [t].[AdditionalInformation]
	, [t].[Comments] = [t].[Comments]
	, [t].[IsAnonymousBooking] = [t].[IsAnonymousBooking]
	, [t].[IsOffsiteAppointment] = [t].[IsOffsiteAppointment]
	, [t].[ApptBookingInfoUrl] = [t].[ApptBookingInfoUrl]
	, [t].[Confirmer_User__c] = [t].[Confirmer_User__c]
	, [t].[External_Id__c] = [t].[External_Id__c]
	, [t].[Meeting_Platform_Id__c] = [t].[Meeting_Platform_Id__c]
	, [t].[Meeting_Platform__c] = [t].[Meeting_Platform__c]
	, [t].[Service_Appointment__c] = [t].[Service_Appointment__c]
	, [t].[Work_Type_Group__c] = [t].[Work_Type_Group__c]
	, [t].[Appointment_Type__c] = [t].[Appointment_Type__c]
	, [t].[Scheduled_End_Text__c] = [t].[Scheduled_End_Text__c]
	, [t].[Scheduled_Start_Text__c] = [t].[Scheduled_Start_Text__c]
	, [t].[Agent_Appointment_Link__c] = [t].[Agent_Appointment_Link__c]
	, [t].[Automatic_Trigger__c] = [t].[Automatic_Trigger__c]
	, [t].[Guest_Appointment_Link__c] = [t].[Guest_Appointment_Link__c]
	, [t].[Meeting_Point__c] = [t].[Meeting_Point__c]
	, [t].[Video_Session_Mode__c] = [t].[Video_Session_Mode__c]
	, [t].[Agent_Link__c] = [t].[Agent_Link__c]
	, [t].[Guest_Link__c] = [t].[Guest_Link__c]
	, [t].[Is_Video_Appointment__c] = [t].[Is_Video_Appointment__c]
	, [t].[Sightcall_Appointment__c] = [t].[Sightcall_Appointment__c]
	, [t].[Test_date__c] = [t].[Test_date__c]
	, [t].[Are_you_sure_confirm__c] = [t].[Are_you_sure_confirm__c]
	, [t].[Appointment_Start_Date__c] = [t].[Appointment_Start_Date__c]
	, [t].[Appointment_End_Date__c] = [t].[Appointment_End_Date__c]
	, [t].[Lead__c] = [t].[Lead__c]
	, [t].[Person_Account__c] = [t].[Person_Account__c]
	, [t].[Parent_Record_Type__c] = [t].[Parent_Record_Type__c]
	, [t].[Scheduled_Start_Date_Value__c] = [t].[Scheduled_Start_Date_Value__c]
	, [t].[Service_Territory_Number__c] = [t].[Service_Territory_Number__c]
	, [t].[Result__c] = [t].[Result__c]
	, [t].[Created_By_Title__c] = [t].[Created_By_Title__c]
	, [t].[Bosley_Center_Number__c] = [t].[Bosley_Center_Number__c]
	, [t].[Gender__c] = [t].[Gender__c]
	, [t].[Previous_Appt_Same_Day__c] = [t].[Previous_Appt_Same_Day__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OwnerId]
	, [IsDeleted]
	, [AppointmentNumber]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [ParentRecordId]
	, [ParentRecordType]
	, [AccountId]
	, [WorkTypeId]
	, [ContactId]
	, [Street]
	, [City]
	, [State]
	, [PostalCode]
	, [Country]
	, [StateCode]
	, [CountryCode]
	, [Latitude]
	, [Longitude]
	, [GeocodeAccuracy]
	, [Address]
	, [Description]
	, [EarliestStartTime]
	, [DueDate]
	, [Duration]
	, [ArrivalWindowStartTime]
	, [ArrivalWindowEndTime]
	, [Status]
	, [SchedStartTime]
	, [SchedEndTime]
	, [ActualStartTime]
	, [ActualEndTime]
	, [ActualDuration]
	, [DurationType]
	, [DurationInMinutes]
	, [ServiceTerritoryId]
	, [Subject]
	, [ParentRecordStatusCategory]
	, [StatusCategory]
	, [ServiceNote]
	, [AppointmentType]
	, [Email]
	, [Phone]
	, [CancellationReason]
	, [AdditionalInformation]
	, [Comments]
	, [IsAnonymousBooking]
	, [IsOffsiteAppointment]
	, [ApptBookingInfoUrl]
	, [Confirmer_User__c]
	, [External_Id__c]
	, [Meeting_Platform_Id__c]
	, [Meeting_Platform__c]
	, [Service_Appointment__c]
	, [Work_Type_Group__c]
	, [Appointment_Type__c]
	, [Scheduled_End_Text__c]
	, [Scheduled_Start_Text__c]
	, [Agent_Appointment_Link__c]
	, [Automatic_Trigger__c]
	, [Guest_Appointment_Link__c]
	, [Meeting_Point__c]
	, [Video_Session_Mode__c]
	, [Agent_Link__c]
	, [Guest_Link__c]
	, [Is_Video_Appointment__c]
	, [Sightcall_Appointment__c]
	, [Test_date__c]
	, [Are_you_sure_confirm__c]
	, [Appointment_Start_Date__c]
	, [Appointment_End_Date__c]
	, [Lead__c]
	, [Person_Account__c]
	, [Parent_Record_Type__c]
	, [Scheduled_Start_Date_Value__c]
	, [Service_Territory_Number__c]
	, [Result__c]
	, [Created_By_Title__c]
	, [Bosley_Center_Number__c]
	, [Gender__c]
	, [Previous_Appt_Same_Day__c]
	)
	VALUES(
	[s].[Id]
	, [s].[OwnerId]
	, [s].[IsDeleted]
	, [s].[AppointmentNumber]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[ParentRecordId]
	, [s].[ParentRecordType]
	, [s].[AccountId]
	, [s].[WorkTypeId]
	, [s].[ContactId]
	, [s].[Street]
	, [s].[City]
	, [s].[State]
	, [s].[PostalCode]
	, [s].[Country]
	, [s].[StateCode]
	, [s].[CountryCode]
	, [s].[Latitude]
	, [s].[Longitude]
	, [s].[GeocodeAccuracy]
	, [s].[Address]
	, [s].[Description]
	, [s].[EarliestStartTime]
	, [s].[DueDate]
	, [s].[Duration]
	, [s].[ArrivalWindowStartTime]
	, [s].[ArrivalWindowEndTime]
	, [s].[Status]
	, [s].[SchedStartTime]
	, [s].[SchedEndTime]
	, [s].[ActualStartTime]
	, [s].[ActualEndTime]
	, [s].[ActualDuration]
	, [s].[DurationType]
	, [s].[DurationInMinutes]
	, [s].[ServiceTerritoryId]
	, [s].[Subject]
	, [s].[ParentRecordStatusCategory]
	, [s].[StatusCategory]
	, [s].[ServiceNote]
	, [s].[AppointmentType]
	, [s].[Email]
	, [s].[Phone]
	, [s].[CancellationReason]
	, [s].[AdditionalInformation]
	, [s].[Comments]
	, [s].[IsAnonymousBooking]
	, [s].[IsOffsiteAppointment]
	, [s].[ApptBookingInfoUrl]
	, [s].[Confirmer_User__c]
	, [s].[External_Id__c]
	, [s].[Meeting_Platform_Id__c]
	, [s].[Meeting_Platform__c]
	, [s].[Service_Appointment__c]
	, [s].[Work_Type_Group__c]
	, [s].[Appointment_Type__c]
	, [s].[Scheduled_End_Text__c]
	, [s].[Scheduled_Start_Text__c]
	, [s].[Agent_Appointment_Link__c]
	, [s].[Automatic_Trigger__c]
	, [s].[Guest_Appointment_Link__c]
	, [s].[Meeting_Point__c]
	, [s].[Video_Session_Mode__c]
	, [s].[Agent_Link__c]
	, [s].[Guest_Link__c]
	, [s].[Is_Video_Appointment__c]
	, [s].[Sightcall_Appointment__c]
	, [s].[Test_date__c]
	, [s].[Are_you_sure_confirm__c]
	, [s].[Appointment_Start_Date__c]
	, [s].[Appointment_End_Date__c]
	, [s].[Lead__c]
	, [s].[Person_Account__c]
	, [s].[Parent_Record_Type__c]
	, [s].[Scheduled_Start_Date_Value__c]
	, [s].[Service_Territory_Number__c]
	, [s].[Result__c]
	, [s].[Created_By_Title__c]
	, [s].[Bosley_Center_Number__c]
	, [s].[Gender__c]
	, [s].[Previous_Appt_Same_Day__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[ServiceAppointment] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_ServiceContract_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_ServiceContract_Merge]
GO
CREATE PROCEDURE [SF].[sp_ServiceContract_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[ServiceContract])
RETURN ;

BEGIN TRY
;MERGE [SF].[ServiceContract] AS [t]
USING [SFStaging].[ServiceContract] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OwnerId] = [t].[OwnerId]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[Name] = [t].[Name]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[AccountId] = [t].[AccountId]
	, [t].[ContactId] = [t].[ContactId]
	, [t].[Term] = [t].[Term]
	, [t].[StartDate] = [t].[StartDate]
	, [t].[EndDate] = [t].[EndDate]
	, [t].[ActivationDate] = [t].[ActivationDate]
	, [t].[ApprovalStatus] = [t].[ApprovalStatus]
	, [t].[Description] = [t].[Description]
	, [t].[BillingStreet] = [t].[BillingStreet]
	, [t].[BillingCity] = [t].[BillingCity]
	, [t].[BillingState] = [t].[BillingState]
	, [t].[BillingPostalCode] = [t].[BillingPostalCode]
	, [t].[BillingCountry] = [t].[BillingCountry]
	, [t].[BillingStateCode] = [t].[BillingStateCode]
	, [t].[BillingCountryCode] = [t].[BillingCountryCode]
	, [t].[BillingLatitude] = [t].[BillingLatitude]
	, [t].[BillingLongitude] = [t].[BillingLongitude]
	, [t].[BillingGeocodeAccuracy] = [t].[BillingGeocodeAccuracy]
	, [t].[BillingAddress] = [t].[BillingAddress]
	, [t].[ShippingStreet] = [t].[ShippingStreet]
	, [t].[ShippingCity] = [t].[ShippingCity]
	, [t].[ShippingState] = [t].[ShippingState]
	, [t].[ShippingPostalCode] = [t].[ShippingPostalCode]
	, [t].[ShippingCountry] = [t].[ShippingCountry]
	, [t].[ShippingStateCode] = [t].[ShippingStateCode]
	, [t].[ShippingCountryCode] = [t].[ShippingCountryCode]
	, [t].[ShippingLatitude] = [t].[ShippingLatitude]
	, [t].[ShippingLongitude] = [t].[ShippingLongitude]
	, [t].[ShippingGeocodeAccuracy] = [t].[ShippingGeocodeAccuracy]
	, [t].[ShippingAddress] = [t].[ShippingAddress]
	, [t].[Pricebook2Id] = [t].[Pricebook2Id]
	, [t].[ShippingHandling] = [t].[ShippingHandling]
	, [t].[Tax] = [t].[Tax]
	, [t].[Subtotal] = [t].[Subtotal]
	, [t].[TotalPrice] = [t].[TotalPrice]
	, [t].[LineItemCount] = [t].[LineItemCount]
	, [t].[ContractNumber] = [t].[ContractNumber]
	, [t].[SpecialTerms] = [t].[SpecialTerms]
	, [t].[Discount] = [t].[Discount]
	, [t].[GrandTotal] = [t].[GrandTotal]
	, [t].[Status] = [t].[Status]
	, [t].[ParentServiceContractId] = [t].[ParentServiceContractId]
	, [t].[RootServiceContractId] = [t].[RootServiceContractId]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OwnerId]
	, [IsDeleted]
	, [Name]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [AccountId]
	, [ContactId]
	, [Term]
	, [StartDate]
	, [EndDate]
	, [ActivationDate]
	, [ApprovalStatus]
	, [Description]
	, [BillingStreet]
	, [BillingCity]
	, [BillingState]
	, [BillingPostalCode]
	, [BillingCountry]
	, [BillingStateCode]
	, [BillingCountryCode]
	, [BillingLatitude]
	, [BillingLongitude]
	, [BillingGeocodeAccuracy]
	, [BillingAddress]
	, [ShippingStreet]
	, [ShippingCity]
	, [ShippingState]
	, [ShippingPostalCode]
	, [ShippingCountry]
	, [ShippingStateCode]
	, [ShippingCountryCode]
	, [ShippingLatitude]
	, [ShippingLongitude]
	, [ShippingGeocodeAccuracy]
	, [ShippingAddress]
	, [Pricebook2Id]
	, [ShippingHandling]
	, [Tax]
	, [Subtotal]
	, [TotalPrice]
	, [LineItemCount]
	, [ContractNumber]
	, [SpecialTerms]
	, [Discount]
	, [GrandTotal]
	, [Status]
	, [ParentServiceContractId]
	, [RootServiceContractId]
	)
	VALUES(
	[s].[Id]
	, [s].[OwnerId]
	, [s].[IsDeleted]
	, [s].[Name]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[AccountId]
	, [s].[ContactId]
	, [s].[Term]
	, [s].[StartDate]
	, [s].[EndDate]
	, [s].[ActivationDate]
	, [s].[ApprovalStatus]
	, [s].[Description]
	, [s].[BillingStreet]
	, [s].[BillingCity]
	, [s].[BillingState]
	, [s].[BillingPostalCode]
	, [s].[BillingCountry]
	, [s].[BillingStateCode]
	, [s].[BillingCountryCode]
	, [s].[BillingLatitude]
	, [s].[BillingLongitude]
	, [s].[BillingGeocodeAccuracy]
	, [s].[BillingAddress]
	, [s].[ShippingStreet]
	, [s].[ShippingCity]
	, [s].[ShippingState]
	, [s].[ShippingPostalCode]
	, [s].[ShippingCountry]
	, [s].[ShippingStateCode]
	, [s].[ShippingCountryCode]
	, [s].[ShippingLatitude]
	, [s].[ShippingLongitude]
	, [s].[ShippingGeocodeAccuracy]
	, [s].[ShippingAddress]
	, [s].[Pricebook2Id]
	, [s].[ShippingHandling]
	, [s].[Tax]
	, [s].[Subtotal]
	, [s].[TotalPrice]
	, [s].[LineItemCount]
	, [s].[ContractNumber]
	, [s].[SpecialTerms]
	, [s].[Discount]
	, [s].[GrandTotal]
	, [s].[Status]
	, [s].[ParentServiceContractId]
	, [s].[RootServiceContractId]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[ServiceContract] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_ServiceResource_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_ServiceResource_Merge]
GO
CREATE PROCEDURE [SF].[sp_ServiceResource_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[ServiceResource])
RETURN ;

BEGIN TRY
;MERGE [SF].[ServiceResource] AS [t]
USING [SFStaging].[ServiceResource] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OwnerId] = [t].[OwnerId]
	, [t].[Name] = [t].[Name]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[RelatedRecordId] = [t].[RelatedRecordId]
	, [t].[ResourceType] = [t].[ResourceType]
	, [t].[Description] = [t].[Description]
	, [t].[IsActive] = [t].[IsActive]
	, [t].[LocationId] = [t].[LocationId]
	, [t].[AccountId] = [t].[AccountId]
	, [t].[External_Id__c] = [t].[External_Id__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OwnerId]
	, [Name]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [RelatedRecordId]
	, [ResourceType]
	, [Description]
	, [IsActive]
	, [LocationId]
	, [AccountId]
	, [External_Id__c]
	)
	VALUES(
	[s].[Id]
	, [s].[OwnerId]
	, [s].[Name]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[RelatedRecordId]
	, [s].[ResourceType]
	, [s].[Description]
	, [s].[IsActive]
	, [s].[LocationId]
	, [s].[AccountId]
	, [s].[External_Id__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[ServiceResource] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_ServiceResourceSkill_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_ServiceResourceSkill_Merge]
GO
CREATE PROCEDURE [SF].[sp_ServiceResourceSkill_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[ServiceResourceSkill])
RETURN ;

BEGIN TRY
;MERGE [SF].[ServiceResourceSkill] AS [t]
USING [SFStaging].[ServiceResourceSkill] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[SkillNumber] = [t].[SkillNumber]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[ServiceResourceId] = [t].[ServiceResourceId]
	, [t].[SkillId] = [t].[SkillId]
	, [t].[SkillLevel] = [t].[SkillLevel]
	, [t].[EffectiveStartDate] = [t].[EffectiveStartDate]
	, [t].[EffectiveEndDate] = [t].[EffectiveEndDate]
	, [t].[External_Id__c] = [t].[External_Id__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [SkillNumber]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [ServiceResourceId]
	, [SkillId]
	, [SkillLevel]
	, [EffectiveStartDate]
	, [EffectiveEndDate]
	, [External_Id__c]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[SkillNumber]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[ServiceResourceId]
	, [s].[SkillId]
	, [s].[SkillLevel]
	, [s].[EffectiveStartDate]
	, [s].[EffectiveEndDate]
	, [s].[External_Id__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[ServiceResourceSkill] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_ServiceTerritory_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_ServiceTerritory_Merge]
GO
CREATE PROCEDURE [SF].[sp_ServiceTerritory_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[ServiceTerritory])
RETURN ;

BEGIN TRY
;MERGE [SF].[ServiceTerritory] AS [t]
USING [SFStaging].[ServiceTerritory] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OwnerId] = [t].[OwnerId]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[Name] = [t].[Name]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[ParentTerritoryId] = [t].[ParentTerritoryId]
	, [t].[TopLevelTerritoryId] = [t].[TopLevelTerritoryId]
	, [t].[Description] = [t].[Description]
	, [t].[OperatingHoursId] = [t].[OperatingHoursId]
	, [t].[Street] = [t].[Street]
	, [t].[City] = [t].[City]
	, [t].[State] = [t].[State]
	, [t].[PostalCode] = [t].[PostalCode]
	, [t].[Country] = [t].[Country]
	, [t].[StateCode] = [t].[StateCode]
	, [t].[CountryCode] = [t].[CountryCode]
	, [t].[Latitude] = [t].[Latitude]
	, [t].[Longitude] = [t].[Longitude]
	, [t].[GeocodeAccuracy] = [t].[GeocodeAccuracy]
	, [t].[Address] = [t].[Address]
	, [t].[IsActive] = [t].[IsActive]
	, [t].[TypicalInTerritoryTravelTime] = [t].[TypicalInTerritoryTravelTime]
	, [t].[Alternative_Phone__c] = [t].[Alternative_Phone__c]
	, [t].[AreaManager__c] = [t].[AreaManager__c]
	, [t].[Area__c] = [t].[Area__c]
	, [t].[AssistantManager__c] = [t].[AssistantManager__c]
	, [t].[BackLinePhone__c] = [t].[BackLinePhone__c]
	, [t].[BestTressedOffered__c] = [t].[BestTressedOffered__c]
	, [t].[Caller_Id__c] = [t].[Caller_Id__c]
	, [t].[CenterAlert__c] = [t].[CenterAlert__c]
	, [t].[CenterNumber__c] = [t].[CenterNumber__c]
	, [t].[CenterOwner__c] = [t].[CenterOwner__c]
	, [t].[CenterType__c] = [t].[CenterType__c]
	, [t].[CompanyID__c] = [t].[CompanyID__c]
	, [t].[Company__c] = [t].[Company__c]
	, [t].[ConfirmationCallerIDEnglish__c] = [t].[ConfirmationCallerIDEnglish__c]
	, [t].[ConfirmationCallerIDFrench__c] = [t].[ConfirmationCallerIDFrench__c]
	, [t].[ConfirmationCallerIDSpanish__c] = [t].[ConfirmationCallerIDSpanish__c]
	, [t].[CustomerServiceLine__c] = [t].[CustomerServiceLine__c]
	, [t].[DisplayName__c] = [t].[DisplayName__c]
	, [t].[External_Id__c] = [t].[External_Id__c]
	, [t].[ImageConsultant__c] = [t].[ImageConsultant__c]
	, [t].[MDPOffered__c] = [t].[MDPOffered__c]
	, [t].[MDPPerformed__c] = [t].[MDPPerformed__c]
	, [t].[Main_Phone__c] = [t].[Main_Phone__c]
	, [t].[ManagerName__c] = [t].[ManagerName__c]
	, [t].[Map_Short_Link__c] = [t].[Map_Short_Link__c]
	, [t].[MgrCellPhone__c] = [t].[MgrCellPhone__c]
	, [t].[OfferPRP__c] = [t].[OfferPRP__c]
	, [t].[OtherCallerIDEnglish__c] = [t].[OtherCallerIDEnglish__c]
	, [t].[OtherCallerIDFrench__c] = [t].[OtherCallerIDFrench__c]
	, [t].[OtherCallerIDSpanish__c] = [t].[OtherCallerIDSpanish__c]
	, [t].[OutboundDialingAllowed__c] = [t].[OutboundDialingAllowed__c]
	, [t].[ProfileCode__c] = [t].[ProfileCode__c]
	, [t].[Region__c] = [t].[Region__c]
	, [t].[Status__c] = [t].[Status__c]
	, [t].[Supported_Appointment_Types__c] = [t].[Supported_Appointment_Types__c]
	, [t].[SurgeryOffered__c] = [t].[SurgeryOffered__c]
	, [t].[TimeZone__c] = [t].[TimeZone__c]
	, [t].[Type__c] = [t].[Type__c]
	, [t].[WebPhone__c] = [t].[WebPhone__c]
	, [t].[Web_Phone__c] = [t].[Web_Phone__c]
	, [t].[X1Apptperslot__c] = [t].[X1Apptperslot__c]
	, [t].[English_Directions__c] = [t].[English_Directions__c]
	, [t].[French_Directions__c] = [t].[French_Directions__c]
	, [t].[Spanish_Directions__c] = [t].[Spanish_Directions__c]
	, [t].[Virtual__c] = [t].[Virtual__c]
	, [t].[English_Cross_Streets__c] = [t].[English_Cross_Streets__c]
	, [t].[French_Cross_Streets__c] = [t].[French_Cross_Streets__c]
	, [t].[Spanish_Cross_Streets__c] = [t].[Spanish_Cross_Streets__c]
	, [t].[Business_Hours__c] = [t].[Business_Hours__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OwnerId]
	, [IsDeleted]
	, [Name]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [ParentTerritoryId]
	, [TopLevelTerritoryId]
	, [Description]
	, [OperatingHoursId]
	, [Street]
	, [City]
	, [State]
	, [PostalCode]
	, [Country]
	, [StateCode]
	, [CountryCode]
	, [Latitude]
	, [Longitude]
	, [GeocodeAccuracy]
	, [Address]
	, [IsActive]
	, [TypicalInTerritoryTravelTime]
	, [Alternative_Phone__c]
	, [AreaManager__c]
	, [Area__c]
	, [AssistantManager__c]
	, [BackLinePhone__c]
	, [BestTressedOffered__c]
	, [Caller_Id__c]
	, [CenterAlert__c]
	, [CenterNumber__c]
	, [CenterOwner__c]
	, [CenterType__c]
	, [CompanyID__c]
	, [Company__c]
	, [ConfirmationCallerIDEnglish__c]
	, [ConfirmationCallerIDFrench__c]
	, [ConfirmationCallerIDSpanish__c]
	, [CustomerServiceLine__c]
	, [DisplayName__c]
	, [External_Id__c]
	, [ImageConsultant__c]
	, [MDPOffered__c]
	, [MDPPerformed__c]
	, [Main_Phone__c]
	, [ManagerName__c]
	, [Map_Short_Link__c]
	, [MgrCellPhone__c]
	, [OfferPRP__c]
	, [OtherCallerIDEnglish__c]
	, [OtherCallerIDFrench__c]
	, [OtherCallerIDSpanish__c]
	, [OutboundDialingAllowed__c]
	, [ProfileCode__c]
	, [Region__c]
	, [Status__c]
	, [Supported_Appointment_Types__c]
	, [SurgeryOffered__c]
	, [TimeZone__c]
	, [Type__c]
	, [WebPhone__c]
	, [Web_Phone__c]
	, [X1Apptperslot__c]
	, [English_Directions__c]
	, [French_Directions__c]
	, [Spanish_Directions__c]
	, [Virtual__c]
	, [English_Cross_Streets__c]
	, [French_Cross_Streets__c]
	, [Spanish_Cross_Streets__c]
	, [Business_Hours__c]
	)
	VALUES(
	[s].[Id]
	, [s].[OwnerId]
	, [s].[IsDeleted]
	, [s].[Name]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[ParentTerritoryId]
	, [s].[TopLevelTerritoryId]
	, [s].[Description]
	, [s].[OperatingHoursId]
	, [s].[Street]
	, [s].[City]
	, [s].[State]
	, [s].[PostalCode]
	, [s].[Country]
	, [s].[StateCode]
	, [s].[CountryCode]
	, [s].[Latitude]
	, [s].[Longitude]
	, [s].[GeocodeAccuracy]
	, [s].[Address]
	, [s].[IsActive]
	, [s].[TypicalInTerritoryTravelTime]
	, [s].[Alternative_Phone__c]
	, [s].[AreaManager__c]
	, [s].[Area__c]
	, [s].[AssistantManager__c]
	, [s].[BackLinePhone__c]
	, [s].[BestTressedOffered__c]
	, [s].[Caller_Id__c]
	, [s].[CenterAlert__c]
	, [s].[CenterNumber__c]
	, [s].[CenterOwner__c]
	, [s].[CenterType__c]
	, [s].[CompanyID__c]
	, [s].[Company__c]
	, [s].[ConfirmationCallerIDEnglish__c]
	, [s].[ConfirmationCallerIDFrench__c]
	, [s].[ConfirmationCallerIDSpanish__c]
	, [s].[CustomerServiceLine__c]
	, [s].[DisplayName__c]
	, [s].[External_Id__c]
	, [s].[ImageConsultant__c]
	, [s].[MDPOffered__c]
	, [s].[MDPPerformed__c]
	, [s].[Main_Phone__c]
	, [s].[ManagerName__c]
	, [s].[Map_Short_Link__c]
	, [s].[MgrCellPhone__c]
	, [s].[OfferPRP__c]
	, [s].[OtherCallerIDEnglish__c]
	, [s].[OtherCallerIDFrench__c]
	, [s].[OtherCallerIDSpanish__c]
	, [s].[OutboundDialingAllowed__c]
	, [s].[ProfileCode__c]
	, [s].[Region__c]
	, [s].[Status__c]
	, [s].[Supported_Appointment_Types__c]
	, [s].[SurgeryOffered__c]
	, [s].[TimeZone__c]
	, [s].[Type__c]
	, [s].[WebPhone__c]
	, [s].[Web_Phone__c]
	, [s].[X1Apptperslot__c]
	, [s].[English_Directions__c]
	, [s].[French_Directions__c]
	, [s].[Spanish_Directions__c]
	, [s].[Virtual__c]
	, [s].[English_Cross_Streets__c]
	, [s].[French_Cross_Streets__c]
	, [s].[Spanish_Cross_Streets__c]
	, [s].[Business_Hours__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[ServiceTerritory] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_Lead_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_Lead_Merge]
GO
CREATE PROCEDURE [SF].[sp_Lead_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[Lead])
RETURN ;

BEGIN TRY
;MERGE [SF].[Lead] AS [t]
USING [SFStaging].[Lead] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[MasterRecordId] = [t].[MasterRecordId]
	, [t].[LastName] = [t].[LastName]
	, [t].[FirstName] = [t].[FirstName]
	, [t].[Salutation] = [t].[Salutation]
	, [t].[MiddleName] = [t].[MiddleName]
	, [t].[Suffix] = [t].[Suffix]
	, [t].[Name] = [t].[Name]
	, [t].[RecordTypeId] = [t].[RecordTypeId]
	, [t].[Title] = [t].[Title]
	, [t].[Company] = [t].[Company]
	, [t].[Street] = [t].[Street]
	, [t].[City] = [t].[City]
	, [t].[State] = [t].[State]
	, [t].[PostalCode] = [t].[PostalCode]
	, [t].[Country] = [t].[Country]
	, [t].[StateCode] = [t].[StateCode]
	, [t].[CountryCode] = [t].[CountryCode]
	, [t].[Latitude] = [t].[Latitude]
	, [t].[Longitude] = [t].[Longitude]
	, [t].[GeocodeAccuracy] = [t].[GeocodeAccuracy]
	, [t].[Phone] = [t].[Phone]
	, [t].[MobilePhone] = [t].[MobilePhone]
	, [t].[Fax] = [t].[Fax]
	, [t].[Email] = [t].[Email]
	, [t].[Website] = [t].[Website]
	, [t].[PhotoUrl] = [t].[PhotoUrl]
	, [t].[Description] = [t].[Description]
	, [t].[LeadSource] = [t].[LeadSource]
	, [t].[Status] = [t].[Status]
	, [t].[Industry] = [t].[Industry]
	, [t].[Rating] = [t].[Rating]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[AnnualRevenue] = [t].[AnnualRevenue]
	, [t].[NumberOfEmployees] = [t].[NumberOfEmployees]
	, [t].[OwnerId] = [t].[OwnerId]
	, [t].[HasOptedOutOfEmail] = [t].[HasOptedOutOfEmail]
	, [t].[IsConverted] = [t].[IsConverted]
	, [t].[ConvertedDate] = [t].[ConvertedDate]
	, [t].[ConvertedAccountId] = [t].[ConvertedAccountId]
	, [t].[ConvertedContactId] = [t].[ConvertedContactId]
	, [t].[ConvertedOpportunityId] = [t].[ConvertedOpportunityId]
	, [t].[IsUnreadByOwner] = [t].[IsUnreadByOwner]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastActivityDate] = [t].[LastActivityDate]
	, [t].[DoNotCall] = [t].[DoNotCall]
	, [t].[HasOptedOutOfFax] = [t].[HasOptedOutOfFax]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[LastTransferDate] = [t].[LastTransferDate]
	, [t].[Jigsaw] = [t].[Jigsaw]
	, [t].[JigsawContactId] = [t].[JigsawContactId]
	, [t].[EmailBouncedReason] = [t].[EmailBouncedReason]
	, [t].[EmailBouncedDate] = [t].[EmailBouncedDate]
	, [t].[et4ae5__HasOptedOutOfMobile__c] = [t].[et4ae5__HasOptedOutOfMobile__c]
	, [t].[et4ae5__Mobile_Country_Code__c] = [t].[et4ae5__Mobile_Country_Code__c]
	, [t].[Age__c] = [t].[Age__c]
	, [t].[Birthdate__c] = [t].[Birthdate__c]
	, [t].[Cancellation_Reason__c] = [t].[Cancellation_Reason__c]
	, [t].[DoNotContact__c] = [t].[DoNotContact__c]
	, [t].[DoNotEmail__c] = [t].[DoNotEmail__c]
	, [t].[DoNotMail__c] = [t].[DoNotMail__c]
	, [t].[DoNotText__c] = [t].[DoNotText__c]
	, [t].[Ethnicity__c] = [t].[Ethnicity__c]
	, [t].[External_Id__c] = [t].[External_Id__c]
	, [t].[Gender__c] = [t].[Gender__c]
	, [t].[HairLossExperience__c] = [t].[HairLossExperience__c]
	, [t].[HairLossFamily__c] = [t].[HairLossFamily__c]
	, [t].[HairLossOrVolume__c] = [t].[HairLossOrVolume__c]
	, [t].[HairLossProductOther__c] = [t].[HairLossProductOther__c]
	, [t].[HairLossProductUsed__c] = [t].[HairLossProductUsed__c]
	, [t].[HairLossSpot__c] = [t].[HairLossSpot__c]
	, [t].[HardCopyPreferred__c] = [t].[HardCopyPreferred__c]
	, [t].[Language__c] = [t].[Language__c]
	, [t].[Lead_Qualifier__c] = [t].[Lead_Qualifier__c]
	, [t].[Lead_Rescheduler__c] = [t].[Lead_Rescheduler__c]
	, [t].[LudwigScale__c] = [t].[LudwigScale__c]
	, [t].[MaritalStatus__c] = [t].[MaritalStatus__c]
	, [t].[MobilePhone_Number_Normalized__c] = [t].[MobilePhone_Number_Normalized__c]
	, [t].[NorwoodScale__c] = [t].[NorwoodScale__c]
	, [t].[Promo_Code__c] = [t].[Promo_Code__c]
	, [t].[Referral_Code_Expiration_Date__c] = [t].[Referral_Code_Expiration_Date__c]
	, [t].[Referral_Code__c] = [t].[Referral_Code__c]
	, [t].[Service_Territory__c] = [t].[Service_Territory__c]
	, [t].[SolutionOffered__c] = [t].[SolutionOffered__c]
	, [t].[Text_Reminer_Opt_In__c] = [t].[Text_Reminer_Opt_In__c]
	, [t].[Occupation__c] = [t].[Occupation__c]
	, [t].[Ammount__c] = [t].[Ammount__c]
	, [t].[DNCDateMobilePhone__c] = [t].[DNCDateMobilePhone__c]
	, [t].[DNCDatePhone__c] = [t].[DNCDatePhone__c]
	, [t].[DNCValidationMobilePhone__c] = [t].[DNCValidationMobilePhone__c]
	, [t].[DNCValidationPhone__c] = [t].[DNCValidationPhone__c]
	, [t].[GCLID__c] = [t].[GCLID__c]
	, [t].[Goals_Expectations__c] = [t].[Goals_Expectations__c]
	, [t].[How_many_times_a_week_do_you_think__c] = [t].[How_many_times_a_week_do_you_think__c]
	, [t].[How_much_time_a_week_do_you_spend__c] = [t].[How_much_time_a_week_do_you_spend__c]
	, [t].[Other_Reason__c] = [t].[Other_Reason__c]
	, [t].[What_are_your_main_concerns_today__c] = [t].[What_are_your_main_concerns_today__c]
	, [t].[What_else_would_be_helpful_for_your__c] = [t].[What_else_would_be_helpful_for_your__c]
	, [t].[What_methods_have_you_used_or_currently__c] = [t].[What_methods_have_you_used_or_currently__c]
	, [t].[RefersionLogId__c] = [t].[RefersionLogId__c]
	, [t].[Service_Territory_Time_Zone__c] = [t].[Service_Territory_Time_Zone__c]
	, [t].[DB_Created_Date_without_Time__c] = [t].[DB_Created_Date_without_Time__c]
	, [t].[DB_Lead_Age__c] = [t].[DB_Lead_Age__c]
	, [t].[RecordTypeDeveloperName__c] = [t].[RecordTypeDeveloperName__c]
	, [t].[Service_Territory_Area__c] = [t].[Service_Territory_Area__c]
	, [t].[Lead_Owner_Division__c] = [t].[Lead_Owner_Division__c]
	, [t].[Service_Territory_Center_Type__c] = [t].[Service_Territory_Center_Type__c]
	, [t].[Service_Territory_Center_Number__c] = [t].[Service_Territory_Center_Number__c]
	, [t].[No_Lead__c] = [t].[No_Lead__c]
	, [t].[HCUID__c] = [t].[HCUID__c]
	, [t].[GCID__c] = [t].[GCID__c]
	, [t].[MSCLKID__c] = [t].[MSCLKID__c]
	, [t].[FBCLID__c] = [t].[FBCLID__c]
	, [t].[KUID__c] = [t].[KUID__c]
	, [t].[Campaign_Source_Code__c] = [t].[Campaign_Source_Code__c]
	, [t].[Service_Territory_Number__c] = [t].[Service_Territory_Number__c]
	, [t].[Bosley_Center_Number__c] = [t].[Bosley_Center_Number__c]
	, [t].[Bosley_Client_Id__c] = [t].[Bosley_Client_Id__c]
	, [t].[Bosley_Country_Description__c] = [t].[Bosley_Country_Description__c]
	, [t].[Bosley_Gender_Description__c] = [t].[Bosley_Gender_Description__c]
	, [t].[Bosley_Legacy_Source_Code__c] = [t].[Bosley_Legacy_Source_Code__c]
	, [t].[Bosley_Salesforce_Id__c] = [t].[Bosley_Salesforce_Id__c]
	, [t].[Bosley_Siebel_Id__c] = [t].[Bosley_Siebel_Id__c]
	, [t].[Next_Milestone_Event__c] = [t].[Next_Milestone_Event__c]
	, [t].[Next_Milestone_Event_Date__c] = [t].[Next_Milestone_Event_Date__c]
	, [t].[Service_Territory_Center_Owner__c] = [t].[Service_Territory_Center_Owner__c]
	, [t].[Warm_Welcome_Call__c] = [t].[Warm_Welcome_Call__c]
	, [t].[Lead_ID_18_dig__c] = [t].[Lead_ID_18_dig__c]
	, [t].[Initial_Campaign_Source__c] = [t].[Initial_Campaign_Source__c]
	, [t].[Landing_Page_Form_Submitted_Date__c] = [t].[Landing_Page_Form_Submitted_Date__c]
	, [t].[Personal_Photo__c] = [t].[Personal_Photo__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [MasterRecordId]
	, [LastName]
	, [FirstName]
	, [Salutation]
	, [MiddleName]
	, [Suffix]
	, [Name]
	, [RecordTypeId]
	, [Title]
	, [Company]
	, [Street]
	, [City]
	, [State]
	, [PostalCode]
	, [Country]
	, [StateCode]
	, [CountryCode]
	, [Latitude]
	, [Longitude]
	, [GeocodeAccuracy]
	, [Phone]
	, [MobilePhone]
	, [Fax]
	, [Email]
	, [Website]
	, [PhotoUrl]
	, [Description]
	, [LeadSource]
	, [Status]
	, [Industry]
	, [Rating]
	, [CurrencyIsoCode]
	, [AnnualRevenue]
	, [NumberOfEmployees]
	, [OwnerId]
	, [HasOptedOutOfEmail]
	, [IsConverted]
	, [ConvertedDate]
	, [ConvertedAccountId]
	, [ConvertedContactId]
	, [ConvertedOpportunityId]
	, [IsUnreadByOwner]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastActivityDate]
	, [DoNotCall]
	, [HasOptedOutOfFax]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [LastTransferDate]
	, [Jigsaw]
	, [JigsawContactId]
	, [EmailBouncedReason]
	, [EmailBouncedDate]
	, [et4ae5__HasOptedOutOfMobile__c]
	, [et4ae5__Mobile_Country_Code__c]
	, [Age__c]
	, [Birthdate__c]
	, [Cancellation_Reason__c]
	, [DoNotContact__c]
	, [DoNotEmail__c]
	, [DoNotMail__c]
	, [DoNotText__c]
	, [Ethnicity__c]
	, [External_Id__c]
	, [Gender__c]
	, [HairLossExperience__c]
	, [HairLossFamily__c]
	, [HairLossOrVolume__c]
	, [HairLossProductOther__c]
	, [HairLossProductUsed__c]
	, [HairLossSpot__c]
	, [HardCopyPreferred__c]
	, [Language__c]
	, [Lead_Qualifier__c]
	, [Lead_Rescheduler__c]
	, [LudwigScale__c]
	, [MaritalStatus__c]
	, [MobilePhone_Number_Normalized__c]
	, [NorwoodScale__c]
	, [Promo_Code__c]
	, [Referral_Code_Expiration_Date__c]
	, [Referral_Code__c]
	, [Service_Territory__c]
	, [SolutionOffered__c]
	, [Text_Reminer_Opt_In__c]
	, [Occupation__c]
	, [Ammount__c]
	, [DNCDateMobilePhone__c]
	, [DNCDatePhone__c]
	, [DNCValidationMobilePhone__c]
	, [DNCValidationPhone__c]
	, [GCLID__c]
	, [Goals_Expectations__c]
	, [How_many_times_a_week_do_you_think__c]
	, [How_much_time_a_week_do_you_spend__c]
	, [Other_Reason__c]
	, [What_are_your_main_concerns_today__c]
	, [What_else_would_be_helpful_for_your__c]
	, [What_methods_have_you_used_or_currently__c]
	, [RefersionLogId__c]
	, [Service_Territory_Time_Zone__c]
	, [DB_Created_Date_without_Time__c]
	, [DB_Lead_Age__c]
	, [RecordTypeDeveloperName__c]
	, [Service_Territory_Area__c]
	, [Lead_Owner_Division__c]
	, [Service_Territory_Center_Type__c]
	, [Service_Territory_Center_Number__c]
	, [No_Lead__c]
	, [HCUID__c]
	, [GCID__c]
	, [MSCLKID__c]
	, [FBCLID__c]
	, [KUID__c]
	, [Campaign_Source_Code__c]
	, [Service_Territory_Number__c]
	, [Bosley_Center_Number__c]
	, [Bosley_Client_Id__c]
	, [Bosley_Country_Description__c]
	, [Bosley_Gender_Description__c]
	, [Bosley_Legacy_Source_Code__c]
	, [Bosley_Salesforce_Id__c]
	, [Bosley_Siebel_Id__c]
	, [Next_Milestone_Event__c]
	, [Next_Milestone_Event_Date__c]
	, [Service_Territory_Center_Owner__c]
	, [Warm_Welcome_Call__c]
	, [Lead_ID_18_dig__c]
	, [Initial_Campaign_Source__c]
	, [Landing_Page_Form_Submitted_Date__c]
	, [Personal_Photo__c]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[MasterRecordId]
	, [s].[LastName]
	, [s].[FirstName]
	, [s].[Salutation]
	, [s].[MiddleName]
	, [s].[Suffix]
	, [s].[Name]
	, [s].[RecordTypeId]
	, [s].[Title]
	, [s].[Company]
	, [s].[Street]
	, [s].[City]
	, [s].[State]
	, [s].[PostalCode]
	, [s].[Country]
	, [s].[StateCode]
	, [s].[CountryCode]
	, [s].[Latitude]
	, [s].[Longitude]
	, [s].[GeocodeAccuracy]
	, [s].[Phone]
	, [s].[MobilePhone]
	, [s].[Fax]
	, [s].[Email]
	, [s].[Website]
	, [s].[PhotoUrl]
	, [s].[Description]
	, [s].[LeadSource]
	, [s].[Status]
	, [s].[Industry]
	, [s].[Rating]
	, [s].[CurrencyIsoCode]
	, [s].[AnnualRevenue]
	, [s].[NumberOfEmployees]
	, [s].[OwnerId]
	, [s].[HasOptedOutOfEmail]
	, [s].[IsConverted]
	, [s].[ConvertedDate]
	, [s].[ConvertedAccountId]
	, [s].[ConvertedContactId]
	, [s].[ConvertedOpportunityId]
	, [s].[IsUnreadByOwner]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastActivityDate]
	, [s].[DoNotCall]
	, [s].[HasOptedOutOfFax]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[LastTransferDate]
	, [s].[Jigsaw]
	, [s].[JigsawContactId]
	, [s].[EmailBouncedReason]
	, [s].[EmailBouncedDate]
	, [s].[et4ae5__HasOptedOutOfMobile__c]
	, [s].[et4ae5__Mobile_Country_Code__c]
	, [s].[Age__c]
	, [s].[Birthdate__c]
	, [s].[Cancellation_Reason__c]
	, [s].[DoNotContact__c]
	, [s].[DoNotEmail__c]
	, [s].[DoNotMail__c]
	, [s].[DoNotText__c]
	, [s].[Ethnicity__c]
	, [s].[External_Id__c]
	, [s].[Gender__c]
	, [s].[HairLossExperience__c]
	, [s].[HairLossFamily__c]
	, [s].[HairLossOrVolume__c]
	, [s].[HairLossProductOther__c]
	, [s].[HairLossProductUsed__c]
	, [s].[HairLossSpot__c]
	, [s].[HardCopyPreferred__c]
	, [s].[Language__c]
	, [s].[Lead_Qualifier__c]
	, [s].[Lead_Rescheduler__c]
	, [s].[LudwigScale__c]
	, [s].[MaritalStatus__c]
	, [s].[MobilePhone_Number_Normalized__c]
	, [s].[NorwoodScale__c]
	, [s].[Promo_Code__c]
	, [s].[Referral_Code_Expiration_Date__c]
	, [s].[Referral_Code__c]
	, [s].[Service_Territory__c]
	, [s].[SolutionOffered__c]
	, [s].[Text_Reminer_Opt_In__c]
	, [s].[Occupation__c]
	, [s].[Ammount__c]
	, [s].[DNCDateMobilePhone__c]
	, [s].[DNCDatePhone__c]
	, [s].[DNCValidationMobilePhone__c]
	, [s].[DNCValidationPhone__c]
	, [s].[GCLID__c]
	, [s].[Goals_Expectations__c]
	, [s].[How_many_times_a_week_do_you_think__c]
	, [s].[How_much_time_a_week_do_you_spend__c]
	, [s].[Other_Reason__c]
	, [s].[What_are_your_main_concerns_today__c]
	, [s].[What_else_would_be_helpful_for_your__c]
	, [s].[What_methods_have_you_used_or_currently__c]
	, [s].[RefersionLogId__c]
	, [s].[Service_Territory_Time_Zone__c]
	, [s].[DB_Created_Date_without_Time__c]
	, [s].[DB_Lead_Age__c]
	, [s].[RecordTypeDeveloperName__c]
	, [s].[Service_Territory_Area__c]
	, [s].[Lead_Owner_Division__c]
	, [s].[Service_Territory_Center_Type__c]
	, [s].[Service_Territory_Center_Number__c]
	, [s].[No_Lead__c]
	, [s].[HCUID__c]
	, [s].[GCID__c]
	, [s].[MSCLKID__c]
	, [s].[FBCLID__c]
	, [s].[KUID__c]
	, [s].[Campaign_Source_Code__c]
	, [s].[Service_Territory_Number__c]
	, [s].[Bosley_Center_Number__c]
	, [s].[Bosley_Client_Id__c]
	, [s].[Bosley_Country_Description__c]
	, [s].[Bosley_Gender_Description__c]
	, [s].[Bosley_Legacy_Source_Code__c]
	, [s].[Bosley_Salesforce_Id__c]
	, [s].[Bosley_Siebel_Id__c]
	, [s].[Next_Milestone_Event__c]
	, [s].[Next_Milestone_Event_Date__c]
	, [s].[Service_Territory_Center_Owner__c]
	, [s].[Warm_Welcome_Call__c]
	, [s].[Lead_ID_18_dig__c]
	, [s].[Initial_Campaign_Source__c]
	, [s].[Landing_Page_Form_Submitted_Date__c]
	, [s].[Personal_Photo__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[Lead] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_ServiceTerritory_ZipCode__c_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_ServiceTerritory_ZipCode__c_Merge]
GO
CREATE PROCEDURE [SF].[sp_ServiceTerritory_ZipCode__c_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[ServiceTerritory_ZipCode__c])
RETURN ;

BEGIN TRY
;MERGE [SF].[ServiceTerritory_ZipCode__c] AS [t]
USING [SFStaging].[ServiceTerritory_ZipCode__c] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[Name] = [t].[Name]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[Zip_Code_Center__c] = [t].[Zip_Code_Center__c]
	, [t].[External_Id__c] = [t].[External_Id__c]
	, [t].[Service_Territory__c] = [t].[Service_Territory__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [Name]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [Zip_Code_Center__c]
	, [External_Id__c]
	, [Service_Territory__c]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[Name]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[Zip_Code_Center__c]
	, [s].[External_Id__c]
	, [s].[Service_Territory__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[ServiceTerritory_ZipCode__c] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_ServiceTerritoryMember_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_ServiceTerritoryMember_Merge]
GO
CREATE PROCEDURE [SF].[sp_ServiceTerritoryMember_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[ServiceTerritoryMember])
RETURN ;

BEGIN TRY
;MERGE [SF].[ServiceTerritoryMember] AS [t]
USING [SFStaging].[ServiceTerritoryMember] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[MemberNumber] = [t].[MemberNumber]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[ServiceTerritoryId] = [t].[ServiceTerritoryId]
	, [t].[ServiceResourceId] = [t].[ServiceResourceId]
	, [t].[TerritoryType] = [t].[TerritoryType]
	, [t].[EffectiveStartDate] = [t].[EffectiveStartDate]
	, [t].[EffectiveEndDate] = [t].[EffectiveEndDate]
	, [t].[Street] = [t].[Street]
	, [t].[City] = [t].[City]
	, [t].[State] = [t].[State]
	, [t].[PostalCode] = [t].[PostalCode]
	, [t].[Country] = [t].[Country]
	, [t].[StateCode] = [t].[StateCode]
	, [t].[CountryCode] = [t].[CountryCode]
	, [t].[Latitude] = [t].[Latitude]
	, [t].[Longitude] = [t].[Longitude]
	, [t].[GeocodeAccuracy] = [t].[GeocodeAccuracy]
	, [t].[Address] = [t].[Address]
	, [t].[OperatingHoursId] = [t].[OperatingHoursId]
	, [t].[Role] = [t].[Role]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [MemberNumber]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [ServiceTerritoryId]
	, [ServiceResourceId]
	, [TerritoryType]
	, [EffectiveStartDate]
	, [EffectiveEndDate]
	, [Street]
	, [City]
	, [State]
	, [PostalCode]
	, [Country]
	, [StateCode]
	, [CountryCode]
	, [Latitude]
	, [Longitude]
	, [GeocodeAccuracy]
	, [Address]
	, [OperatingHoursId]
	, [Role]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[MemberNumber]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[ServiceTerritoryId]
	, [s].[ServiceResourceId]
	, [s].[TerritoryType]
	, [s].[EffectiveStartDate]
	, [s].[EffectiveEndDate]
	, [s].[Street]
	, [s].[City]
	, [s].[State]
	, [s].[PostalCode]
	, [s].[Country]
	, [s].[StateCode]
	, [s].[CountryCode]
	, [s].[Latitude]
	, [s].[Longitude]
	, [s].[GeocodeAccuracy]
	, [s].[Address]
	, [s].[OperatingHoursId]
	, [s].[Role]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[ServiceTerritoryMember] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_ServiceTerritoryWorkType_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_ServiceTerritoryWorkType_Merge]
GO
CREATE PROCEDURE [SF].[sp_ServiceTerritoryWorkType_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[ServiceTerritoryWorkType])
RETURN ;

BEGIN TRY
;MERGE [SF].[ServiceTerritoryWorkType] AS [t]
USING [SFStaging].[ServiceTerritoryWorkType] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[Name] = [t].[Name]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[WorkTypeId] = [t].[WorkTypeId]
	, [t].[ServiceTerritoryId] = [t].[ServiceTerritoryId]
	, [t].[External_Id__c] = [t].[External_Id__c]
	, [t].[Work_Type_Appointment_Type__c] = [t].[Work_Type_Appointment_Type__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [Name]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [WorkTypeId]
	, [ServiceTerritoryId]
	, [External_Id__c]
	, [Work_Type_Appointment_Type__c]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[Name]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[WorkTypeId]
	, [s].[ServiceTerritoryId]
	, [s].[External_Id__c]
	, [s].[Work_Type_Appointment_Type__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[ServiceTerritoryWorkType] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_Task_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_Task_Merge]
GO
CREATE PROCEDURE [SF].[sp_Task_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[Task])
RETURN ;

BEGIN TRY
;MERGE [SF].[Task] AS [t]
USING [SFStaging].[Task] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[RecordTypeId] = [t].[RecordTypeId]
	, [t].[WhoId] = [t].[WhoId]
	, [t].[WhatId] = [t].[WhatId]
	, [t].[WhoCount] = [t].[WhoCount]
	, [t].[WhatCount] = [t].[WhatCount]
	, [t].[Subject] = [t].[Subject]
	, [t].[ActivityDate] = [t].[ActivityDate]
	, [t].[Status] = [t].[Status]
	, [t].[Priority] = [t].[Priority]
	, [t].[IsHighPriority] = [t].[IsHighPriority]
	, [t].[OwnerId] = [t].[OwnerId]
	, [t].[Description] = [t].[Description]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[Type] = [t].[Type]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[AccountId] = [t].[AccountId]
	, [t].[IsClosed] = [t].[IsClosed]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[IsArchived] = [t].[IsArchived]
	, [t].[CallDurationInSeconds] = [t].[CallDurationInSeconds]
	, [t].[CallType] = [t].[CallType]
	, [t].[CallDisposition] = [t].[CallDisposition]
	, [t].[CallObject] = [t].[CallObject]
	, [t].[ReminderDateTime] = [t].[ReminderDateTime]
	, [t].[IsReminderSet] = [t].[IsReminderSet]
	, [t].[RecurrenceActivityId] = [t].[RecurrenceActivityId]
	, [t].[IsRecurrence] = [t].[IsRecurrence]
	, [t].[RecurrenceStartDateOnly] = [t].[RecurrenceStartDateOnly]
	, [t].[RecurrenceEndDateOnly] = [t].[RecurrenceEndDateOnly]
	, [t].[RecurrenceTimeZoneSidKey] = [t].[RecurrenceTimeZoneSidKey]
	, [t].[RecurrenceType] = [t].[RecurrenceType]
	, [t].[RecurrenceInterval] = [t].[RecurrenceInterval]
	, [t].[RecurrenceDayOfWeekMask] = [t].[RecurrenceDayOfWeekMask]
	, [t].[RecurrenceDayOfMonth] = [t].[RecurrenceDayOfMonth]
	, [t].[RecurrenceInstance] = [t].[RecurrenceInstance]
	, [t].[RecurrenceMonthOfYear] = [t].[RecurrenceMonthOfYear]
	, [t].[RecurrenceRegeneratedType] = [t].[RecurrenceRegeneratedType]
	, [t].[TaskSubtype] = [t].[TaskSubtype]
	, [t].[CompletedDateTime] = [t].[CompletedDateTime]
	, [t].[BrightPattern__SPRecordingOrTranscriptURL__c] = [t].[BrightPattern__SPRecordingOrTranscriptURL__c]
	, [t].[Center_Name__c] = [t].[Center_Name__c]
	, [t].[Completed_Date__c] = [t].[Completed_Date__c]
	, [t].[External_ID__c] = [t].[External_ID__c]
	, [t].[Lead__c] = [t].[Lead__c]
	, [t].[Meeting_Platform_Id__c] = [t].[Meeting_Platform_Id__c]
	, [t].[Meeting_Platform__c] = [t].[Meeting_Platform__c]
	, [t].[Person_Account__c] = [t].[Person_Account__c]
	, [t].[Recording_Link__c] = [t].[Recording_Link__c]
	, [t].[Result__c] = [t].[Result__c]
	, [t].[SPRecordingOrTranscriptURL__c] = [t].[SPRecordingOrTranscriptURL__c]
	, [t].[Service_Appointment__c] = [t].[Service_Appointment__c]
	, [t].[Service_Territory_Caller_Id__c] = [t].[Service_Territory_Caller_Id__c]
	, [t].[Agent_Link__c] = [t].[Agent_Link__c]
	, [t].[Guest_Link__c] = [t].[Guest_Link__c]
	, [t].[Opportunity__c] = [t].[Opportunity__c]
	, [t].[Center_Phone__c] = [t].[Center_Phone__c]
	, [t].[DB_Activity_Type__c] = [t].[DB_Activity_Type__c]
	, [t].[CallBackDueDate__c] = [t].[CallBackDueDate__c]
	, [t].[Invite__c] = [t].[Invite__c]
	, [t].[TaskWhoIds] = [t].[TaskWhoIds]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [RecordTypeId]
	, [WhoId]
	, [WhatId]
	, [WhoCount]
	, [WhatCount]
	, [Subject]
	, [ActivityDate]
	, [Status]
	, [Priority]
	, [IsHighPriority]
	, [OwnerId]
	, [Description]
	, [CurrencyIsoCode]
	, [Type]
	, [IsDeleted]
	, [AccountId]
	, [IsClosed]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [IsArchived]
	, [CallDurationInSeconds]
	, [CallType]
	, [CallDisposition]
	, [CallObject]
	, [ReminderDateTime]
	, [IsReminderSet]
	, [RecurrenceActivityId]
	, [IsRecurrence]
	, [RecurrenceStartDateOnly]
	, [RecurrenceEndDateOnly]
	, [RecurrenceTimeZoneSidKey]
	, [RecurrenceType]
	, [RecurrenceInterval]
	, [RecurrenceDayOfWeekMask]
	, [RecurrenceDayOfMonth]
	, [RecurrenceInstance]
	, [RecurrenceMonthOfYear]
	, [RecurrenceRegeneratedType]
	, [TaskSubtype]
	, [CompletedDateTime]
	, [BrightPattern__SPRecordingOrTranscriptURL__c]
	, [Center_Name__c]
	, [Completed_Date__c]
	, [External_ID__c]
	, [Lead__c]
	, [Meeting_Platform_Id__c]
	, [Meeting_Platform__c]
	, [Person_Account__c]
	, [Recording_Link__c]
	, [Result__c]
	, [SPRecordingOrTranscriptURL__c]
	, [Service_Appointment__c]
	, [Service_Territory_Caller_Id__c]
	, [Agent_Link__c]
	, [Guest_Link__c]
	, [Opportunity__c]
	, [Center_Phone__c]
	, [DB_Activity_Type__c]
	, [CallBackDueDate__c]
	, [Invite__c]
	, [TaskWhoIds]
	)
	VALUES(
	[s].[Id]
	, [s].[RecordTypeId]
	, [s].[WhoId]
	, [s].[WhatId]
	, [s].[WhoCount]
	, [s].[WhatCount]
	, [s].[Subject]
	, [s].[ActivityDate]
	, [s].[Status]
	, [s].[Priority]
	, [s].[IsHighPriority]
	, [s].[OwnerId]
	, [s].[Description]
	, [s].[CurrencyIsoCode]
	, [s].[Type]
	, [s].[IsDeleted]
	, [s].[AccountId]
	, [s].[IsClosed]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[IsArchived]
	, [s].[CallDurationInSeconds]
	, [s].[CallType]
	, [s].[CallDisposition]
	, [s].[CallObject]
	, [s].[ReminderDateTime]
	, [s].[IsReminderSet]
	, [s].[RecurrenceActivityId]
	, [s].[IsRecurrence]
	, [s].[RecurrenceStartDateOnly]
	, [s].[RecurrenceEndDateOnly]
	, [s].[RecurrenceTimeZoneSidKey]
	, [s].[RecurrenceType]
	, [s].[RecurrenceInterval]
	, [s].[RecurrenceDayOfWeekMask]
	, [s].[RecurrenceDayOfMonth]
	, [s].[RecurrenceInstance]
	, [s].[RecurrenceMonthOfYear]
	, [s].[RecurrenceRegeneratedType]
	, [s].[TaskSubtype]
	, [s].[CompletedDateTime]
	, [s].[BrightPattern__SPRecordingOrTranscriptURL__c]
	, [s].[Center_Name__c]
	, [s].[Completed_Date__c]
	, [s].[External_ID__c]
	, [s].[Lead__c]
	, [s].[Meeting_Platform_Id__c]
	, [s].[Meeting_Platform__c]
	, [s].[Person_Account__c]
	, [s].[Recording_Link__c]
	, [s].[Result__c]
	, [s].[SPRecordingOrTranscriptURL__c]
	, [s].[Service_Appointment__c]
	, [s].[Service_Territory_Caller_Id__c]
	, [s].[Agent_Link__c]
	, [s].[Guest_Link__c]
	, [s].[Opportunity__c]
	, [s].[Center_Phone__c]
	, [s].[DB_Activity_Type__c]
	, [s].[CallBackDueDate__c]
	, [s].[Invite__c]
	, [s].[TaskWhoIds]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[Task] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_User_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_User_Merge]
GO
CREATE PROCEDURE [SF].[sp_User_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[User])
RETURN ;

BEGIN TRY
;MERGE [SF].[User] AS [t]
USING [SFStaging].[User] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[Username] = [t].[Username]
	, [t].[LastName] = [t].[LastName]
	, [t].[FirstName] = [t].[FirstName]
	, [t].[MiddleName] = [t].[MiddleName]
	, [t].[Suffix] = [t].[Suffix]
	, [t].[Name] = [t].[Name]
	, [t].[CompanyName] = [t].[CompanyName]
	, [t].[Division] = [t].[Division]
	, [t].[Department] = [t].[Department]
	, [t].[Title] = [t].[Title]
	, [t].[Street] = [t].[Street]
	, [t].[City] = [t].[City]
	, [t].[State] = [t].[State]
	, [t].[PostalCode] = [t].[PostalCode]
	, [t].[Country] = [t].[Country]
	, [t].[StateCode] = [t].[StateCode]
	, [t].[CountryCode] = [t].[CountryCode]
	, [t].[Latitude] = [t].[Latitude]
	, [t].[Longitude] = [t].[Longitude]
	, [t].[GeocodeAccuracy] = [t].[GeocodeAccuracy]
	, [t].[Address] = [t].[Address]
	, [t].[Email] = [t].[Email]
	, [t].[EmailPreferencesAutoBcc] = [t].[EmailPreferencesAutoBcc]
	, [t].[EmailPreferencesAutoBccStayInTouch] = [t].[EmailPreferencesAutoBccStayInTouch]
	, [t].[EmailPreferencesStayInTouchReminder] = [t].[EmailPreferencesStayInTouchReminder]
	, [t].[SenderEmail] = [t].[SenderEmail]
	, [t].[SenderName] = [t].[SenderName]
	, [t].[Signature] = [t].[Signature]
	, [t].[StayInTouchSubject] = [t].[StayInTouchSubject]
	, [t].[StayInTouchSignature] = [t].[StayInTouchSignature]
	, [t].[StayInTouchNote] = [t].[StayInTouchNote]
	, [t].[Phone] = [t].[Phone]
	, [t].[Fax] = [t].[Fax]
	, [t].[MobilePhone] = [t].[MobilePhone]
	, [t].[Alias] = [t].[Alias]
	, [t].[CommunityNickname] = [t].[CommunityNickname]
	, [t].[BadgeText] = [t].[BadgeText]
	, [t].[IsActive] = [t].[IsActive]
	, [t].[TimeZoneSidKey] = [t].[TimeZoneSidKey]
	, [t].[UserRoleId] = [t].[UserRoleId]
	, [t].[LocaleSidKey] = [t].[LocaleSidKey]
	, [t].[ReceivesInfoEmails] = [t].[ReceivesInfoEmails]
	, [t].[ReceivesAdminInfoEmails] = [t].[ReceivesAdminInfoEmails]
	, [t].[EmailEncodingKey] = [t].[EmailEncodingKey]
	, [t].[DefaultCurrencyIsoCode] = [t].[DefaultCurrencyIsoCode]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[ProfileId] = [t].[ProfileId]
	, [t].[UserType] = [t].[UserType]
	, [t].[LanguageLocaleKey] = [t].[LanguageLocaleKey]
	, [t].[EmployeeNumber] = [t].[EmployeeNumber]
	, [t].[DelegatedApproverId] = [t].[DelegatedApproverId]
	, [t].[ManagerId] = [t].[ManagerId]
	, [t].[LastLoginDate] = [t].[LastLoginDate]
	, [t].[LastPasswordChangeDate] = [t].[LastPasswordChangeDate]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[NumberOfFailedLogins] = [t].[NumberOfFailedLogins]
	, [t].[OfflineTrialExpirationDate] = [t].[OfflineTrialExpirationDate]
	, [t].[OfflinePdaTrialExpirationDate] = [t].[OfflinePdaTrialExpirationDate]
	, [t].[UserPermissionsMarketingUser] = [t].[UserPermissionsMarketingUser]
	, [t].[UserPermissionsOfflineUser] = [t].[UserPermissionsOfflineUser]
	, [t].[UserPermissionsAvantgoUser] = [t].[UserPermissionsAvantgoUser]
	, [t].[UserPermissionsCallCenterAutoLogin] = [t].[UserPermissionsCallCenterAutoLogin]
	, [t].[UserPermissionsSFContentUser] = [t].[UserPermissionsSFContentUser]
	, [t].[UserPermissionsKnowledgeUser] = [t].[UserPermissionsKnowledgeUser]
	, [t].[UserPermissionsInteractionUser] = [t].[UserPermissionsInteractionUser]
	, [t].[UserPermissionsSupportUser] = [t].[UserPermissionsSupportUser]
	, [t].[UserPermissionsLiveAgentUser] = [t].[UserPermissionsLiveAgentUser]
	, [t].[ForecastEnabled] = [t].[ForecastEnabled]
	, [t].[UserPreferencesActivityRemindersPopup] = [t].[UserPreferencesActivityRemindersPopup]
	, [t].[UserPreferencesEventRemindersCheckboxDefault] = [t].[UserPreferencesEventRemindersCheckboxDefault]
	, [t].[UserPreferencesTaskRemindersCheckboxDefault] = [t].[UserPreferencesTaskRemindersCheckboxDefault]
	, [t].[UserPreferencesReminderSoundOff] = [t].[UserPreferencesReminderSoundOff]
	, [t].[UserPreferencesDisableAllFeedsEmail] = [t].[UserPreferencesDisableAllFeedsEmail]
	, [t].[UserPreferencesDisableFollowersEmail] = [t].[UserPreferencesDisableFollowersEmail]
	, [t].[UserPreferencesDisableProfilePostEmail] = [t].[UserPreferencesDisableProfilePostEmail]
	, [t].[UserPreferencesDisableChangeCommentEmail] = [t].[UserPreferencesDisableChangeCommentEmail]
	, [t].[UserPreferencesDisableLaterCommentEmail] = [t].[UserPreferencesDisableLaterCommentEmail]
	, [t].[UserPreferencesDisProfPostCommentEmail] = [t].[UserPreferencesDisProfPostCommentEmail]
	, [t].[UserPreferencesApexPagesDeveloperMode] = [t].[UserPreferencesApexPagesDeveloperMode]
	, [t].[UserPreferencesReceiveNoNotificationsAsApprover] = [t].[UserPreferencesReceiveNoNotificationsAsApprover]
	, [t].[UserPreferencesReceiveNotificationsAsDelegatedApprover] = [t].[UserPreferencesReceiveNotificationsAsDelegatedApprover]
	, [t].[UserPreferencesHideCSNGetChatterMobileTask] = [t].[UserPreferencesHideCSNGetChatterMobileTask]
	, [t].[UserPreferencesDisableMentionsPostEmail] = [t].[UserPreferencesDisableMentionsPostEmail]
	, [t].[UserPreferencesDisMentionsCommentEmail] = [t].[UserPreferencesDisMentionsCommentEmail]
	, [t].[UserPreferencesHideCSNDesktopTask] = [t].[UserPreferencesHideCSNDesktopTask]
	, [t].[UserPreferencesHideChatterOnboardingSplash] = [t].[UserPreferencesHideChatterOnboardingSplash]
	, [t].[UserPreferencesHideSecondChatterOnboardingSplash] = [t].[UserPreferencesHideSecondChatterOnboardingSplash]
	, [t].[UserPreferencesDisCommentAfterLikeEmail] = [t].[UserPreferencesDisCommentAfterLikeEmail]
	, [t].[UserPreferencesDisableLikeEmail] = [t].[UserPreferencesDisableLikeEmail]
	, [t].[UserPreferencesSortFeedByComment] = [t].[UserPreferencesSortFeedByComment]
	, [t].[UserPreferencesDisableMessageEmail] = [t].[UserPreferencesDisableMessageEmail]
	, [t].[UserPreferencesDisableBookmarkEmail] = [t].[UserPreferencesDisableBookmarkEmail]
	, [t].[UserPreferencesDisableSharePostEmail] = [t].[UserPreferencesDisableSharePostEmail]
	, [t].[UserPreferencesEnableAutoSubForFeeds] = [t].[UserPreferencesEnableAutoSubForFeeds]
	, [t].[UserPreferencesDisableFileShareNotificationsForApi] = [t].[UserPreferencesDisableFileShareNotificationsForApi]
	, [t].[UserPreferencesShowTitleToExternalUsers] = [t].[UserPreferencesShowTitleToExternalUsers]
	, [t].[UserPreferencesShowManagerToExternalUsers] = [t].[UserPreferencesShowManagerToExternalUsers]
	, [t].[UserPreferencesShowEmailToExternalUsers] = [t].[UserPreferencesShowEmailToExternalUsers]
	, [t].[UserPreferencesShowWorkPhoneToExternalUsers] = [t].[UserPreferencesShowWorkPhoneToExternalUsers]
	, [t].[UserPreferencesShowMobilePhoneToExternalUsers] = [t].[UserPreferencesShowMobilePhoneToExternalUsers]
	, [t].[UserPreferencesShowFaxToExternalUsers] = [t].[UserPreferencesShowFaxToExternalUsers]
	, [t].[UserPreferencesShowStreetAddressToExternalUsers] = [t].[UserPreferencesShowStreetAddressToExternalUsers]
	, [t].[UserPreferencesShowCityToExternalUsers] = [t].[UserPreferencesShowCityToExternalUsers]
	, [t].[UserPreferencesShowStateToExternalUsers] = [t].[UserPreferencesShowStateToExternalUsers]
	, [t].[UserPreferencesShowPostalCodeToExternalUsers] = [t].[UserPreferencesShowPostalCodeToExternalUsers]
	, [t].[UserPreferencesShowCountryToExternalUsers] = [t].[UserPreferencesShowCountryToExternalUsers]
	, [t].[UserPreferencesShowProfilePicToGuestUsers] = [t].[UserPreferencesShowProfilePicToGuestUsers]
	, [t].[UserPreferencesShowTitleToGuestUsers] = [t].[UserPreferencesShowTitleToGuestUsers]
	, [t].[UserPreferencesShowCityToGuestUsers] = [t].[UserPreferencesShowCityToGuestUsers]
	, [t].[UserPreferencesShowStateToGuestUsers] = [t].[UserPreferencesShowStateToGuestUsers]
	, [t].[UserPreferencesShowPostalCodeToGuestUsers] = [t].[UserPreferencesShowPostalCodeToGuestUsers]
	, [t].[UserPreferencesShowCountryToGuestUsers] = [t].[UserPreferencesShowCountryToGuestUsers]
	, [t].[UserPreferencesHideInvoicesRedirectConfirmation] = [t].[UserPreferencesHideInvoicesRedirectConfirmation]
	, [t].[UserPreferencesHideStatementsRedirectConfirmation] = [t].[UserPreferencesHideStatementsRedirectConfirmation]
	, [t].[UserPreferencesHideS1BrowserUI] = [t].[UserPreferencesHideS1BrowserUI]
	, [t].[UserPreferencesDisableEndorsementEmail] = [t].[UserPreferencesDisableEndorsementEmail]
	, [t].[UserPreferencesPathAssistantCollapsed] = [t].[UserPreferencesPathAssistantCollapsed]
	, [t].[UserPreferencesCacheDiagnostics] = [t].[UserPreferencesCacheDiagnostics]
	, [t].[UserPreferencesShowEmailToGuestUsers] = [t].[UserPreferencesShowEmailToGuestUsers]
	, [t].[UserPreferencesShowManagerToGuestUsers] = [t].[UserPreferencesShowManagerToGuestUsers]
	, [t].[UserPreferencesShowWorkPhoneToGuestUsers] = [t].[UserPreferencesShowWorkPhoneToGuestUsers]
	, [t].[UserPreferencesShowMobilePhoneToGuestUsers] = [t].[UserPreferencesShowMobilePhoneToGuestUsers]
	, [t].[UserPreferencesShowFaxToGuestUsers] = [t].[UserPreferencesShowFaxToGuestUsers]
	, [t].[UserPreferencesShowStreetAddressToGuestUsers] = [t].[UserPreferencesShowStreetAddressToGuestUsers]
	, [t].[UserPreferencesLightningExperiencePreferred] = [t].[UserPreferencesLightningExperiencePreferred]
	, [t].[UserPreferencesPreviewLightning] = [t].[UserPreferencesPreviewLightning]
	, [t].[UserPreferencesHideEndUserOnboardingAssistantModal] = [t].[UserPreferencesHideEndUserOnboardingAssistantModal]
	, [t].[UserPreferencesHideLightningMigrationModal] = [t].[UserPreferencesHideLightningMigrationModal]
	, [t].[UserPreferencesHideSfxWelcomeMat] = [t].[UserPreferencesHideSfxWelcomeMat]
	, [t].[UserPreferencesHideBiggerPhotoCallout] = [t].[UserPreferencesHideBiggerPhotoCallout]
	, [t].[UserPreferencesGlobalNavBarWTShown] = [t].[UserPreferencesGlobalNavBarWTShown]
	, [t].[UserPreferencesGlobalNavGridMenuWTShown] = [t].[UserPreferencesGlobalNavGridMenuWTShown]
	, [t].[UserPreferencesCreateLEXAppsWTShown] = [t].[UserPreferencesCreateLEXAppsWTShown]
	, [t].[UserPreferencesFavoritesWTShown] = [t].[UserPreferencesFavoritesWTShown]
	, [t].[UserPreferencesRecordHomeSectionCollapseWTShown] = [t].[UserPreferencesRecordHomeSectionCollapseWTShown]
	, [t].[UserPreferencesRecordHomeReservedWTShown] = [t].[UserPreferencesRecordHomeReservedWTShown]
	, [t].[UserPreferencesFavoritesShowTopFavorites] = [t].[UserPreferencesFavoritesShowTopFavorites]
	, [t].[UserPreferencesExcludeMailAppAttachments] = [t].[UserPreferencesExcludeMailAppAttachments]
	, [t].[UserPreferencesSuppressTaskSFXReminders] = [t].[UserPreferencesSuppressTaskSFXReminders]
	, [t].[UserPreferencesSuppressEventSFXReminders] = [t].[UserPreferencesSuppressEventSFXReminders]
	, [t].[UserPreferencesPreviewCustomTheme] = [t].[UserPreferencesPreviewCustomTheme]
	, [t].[UserPreferencesHasCelebrationBadge] = [t].[UserPreferencesHasCelebrationBadge]
	, [t].[UserPreferencesUserDebugModePref] = [t].[UserPreferencesUserDebugModePref]
	, [t].[UserPreferencesSRHOverrideActivities] = [t].[UserPreferencesSRHOverrideActivities]
	, [t].[UserPreferencesNewLightningReportRunPageEnabled] = [t].[UserPreferencesNewLightningReportRunPageEnabled]
	, [t].[UserPreferencesReverseOpenActivitiesView] = [t].[UserPreferencesReverseOpenActivitiesView]
	, [t].[UserPreferencesShowTerritoryTimeZoneShifts] = [t].[UserPreferencesShowTerritoryTimeZoneShifts]
	, [t].[UserPreferencesNativeEmailClient] = [t].[UserPreferencesNativeEmailClient]
	, [t].[UserPreferencesHideBrowseProductRedirectConfirmation] = [t].[UserPreferencesHideBrowseProductRedirectConfirmation]
	, [t].[UserPreferencesHideOnlineSalesAppWelcomeMat] = [t].[UserPreferencesHideOnlineSalesAppWelcomeMat]
	, [t].[ContactId] = [t].[ContactId]
	, [t].[AccountId] = [t].[AccountId]
	, [t].[CallCenterId] = [t].[CallCenterId]
	, [t].[Extension] = [t].[Extension]
	, [t].[FederationIdentifier] = [t].[FederationIdentifier]
	, [t].[AboutMe] = [t].[AboutMe]
	, [t].[FullPhotoUrl] = [t].[FullPhotoUrl]
	, [t].[SmallPhotoUrl] = [t].[SmallPhotoUrl]
	, [t].[IsExtIndicatorVisible] = [t].[IsExtIndicatorVisible]
	, [t].[OutOfOfficeMessage] = [t].[OutOfOfficeMessage]
	, [t].[MediumPhotoUrl] = [t].[MediumPhotoUrl]
	, [t].[DigestFrequency] = [t].[DigestFrequency]
	, [t].[DefaultGroupNotificationFrequency] = [t].[DefaultGroupNotificationFrequency]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[BannerPhotoUrl] = [t].[BannerPhotoUrl]
	, [t].[SmallBannerPhotoUrl] = [t].[SmallBannerPhotoUrl]
	, [t].[MediumBannerPhotoUrl] = [t].[MediumBannerPhotoUrl]
	, [t].[IsProfilePhotoActive] = [t].[IsProfilePhotoActive]
	, [t].[et4ae5__Default_ET_Page__c] = [t].[et4ae5__Default_ET_Page__c]
	, [t].[et4ae5__Default_MID__c] = [t].[et4ae5__Default_MID__c]
	, [t].[et4ae5__ExactTargetForAppExchangeAdmin__c] = [t].[et4ae5__ExactTargetForAppExchangeAdmin__c]
	, [t].[et4ae5__ExactTargetForAppExchangeUser__c] = [t].[et4ae5__ExactTargetForAppExchangeUser__c]
	, [t].[et4ae5__ExactTargetUsername__c] = [t].[et4ae5__ExactTargetUsername__c]
	, [t].[et4ae5__ExactTarget_OAuth_Token__c] = [t].[et4ae5__ExactTarget_OAuth_Token__c]
	, [t].[et4ae5__ValidExactTargetAdmin__c] = [t].[et4ae5__ValidExactTargetAdmin__c]
	, [t].[et4ae5__ValidExactTargetUser__c] = [t].[et4ae5__ValidExactTargetUser__c]
	, [t].[Chat_Display_Name__c] = [t].[Chat_Display_Name__c]
	, [t].[Chat_Photo_Small__c] = [t].[Chat_Photo_Small__c]
	, [t].[DialerID__c] = [t].[DialerID__c]
	, [t].[External_Id__c] = [t].[External_Id__c]
	, [t].[SightCall_UseCase_Id__c] = [t].[SightCall_UseCase_Id__c]
	, [t].[Mobile_Agent_Login__c] = [t].[Mobile_Agent_Login__c]
	, [t].[approver__c] = [t].[approver__c]
	, [t].[DB_Region__c] = [t].[DB_Region__c]
	, [t].[Full_Name__c] = [t].[Full_Name__c]
	, [t].[User_Deactivation_Details__c] = [t].[User_Deactivation_Details__c]
	, [t].[BannerPhotoId] = [t].[BannerPhotoId]
	, [t].[EndDay] = [t].[EndDay]
	, [t].[WorkspaceId] = [t].[WorkspaceId]
	, [t].[UserSubtype] = [t].[UserSubtype]
	, [t].[IsSystemControlled] = [t].[IsSystemControlled]
	, [t].[PasswordResetAttempt] = [t].[PasswordResetAttempt]
	, [t].[PasswordResetLockoutDate] = [t].[PasswordResetLockoutDate]
	, [t].[StartDay] = [t].[StartDay]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [Username]
	, [LastName]
	, [FirstName]
	, [MiddleName]
	, [Suffix]
	, [Name]
	, [CompanyName]
	, [Division]
	, [Department]
	, [Title]
	, [Street]
	, [City]
	, [State]
	, [PostalCode]
	, [Country]
	, [StateCode]
	, [CountryCode]
	, [Latitude]
	, [Longitude]
	, [GeocodeAccuracy]
	, [Address]
	, [Email]
	, [EmailPreferencesAutoBcc]
	, [EmailPreferencesAutoBccStayInTouch]
	, [EmailPreferencesStayInTouchReminder]
	, [SenderEmail]
	, [SenderName]
	, [Signature]
	, [StayInTouchSubject]
	, [StayInTouchSignature]
	, [StayInTouchNote]
	, [Phone]
	, [Fax]
	, [MobilePhone]
	, [Alias]
	, [CommunityNickname]
	, [BadgeText]
	, [IsActive]
	, [TimeZoneSidKey]
	, [UserRoleId]
	, [LocaleSidKey]
	, [ReceivesInfoEmails]
	, [ReceivesAdminInfoEmails]
	, [EmailEncodingKey]
	, [DefaultCurrencyIsoCode]
	, [CurrencyIsoCode]
	, [ProfileId]
	, [UserType]
	, [LanguageLocaleKey]
	, [EmployeeNumber]
	, [DelegatedApproverId]
	, [ManagerId]
	, [LastLoginDate]
	, [LastPasswordChangeDate]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [NumberOfFailedLogins]
	, [OfflineTrialExpirationDate]
	, [OfflinePdaTrialExpirationDate]
	, [UserPermissionsMarketingUser]
	, [UserPermissionsOfflineUser]
	, [UserPermissionsAvantgoUser]
	, [UserPermissionsCallCenterAutoLogin]
	, [UserPermissionsSFContentUser]
	, [UserPermissionsKnowledgeUser]
	, [UserPermissionsInteractionUser]
	, [UserPermissionsSupportUser]
	, [UserPermissionsLiveAgentUser]
	, [ForecastEnabled]
	, [UserPreferencesActivityRemindersPopup]
	, [UserPreferencesEventRemindersCheckboxDefault]
	, [UserPreferencesTaskRemindersCheckboxDefault]
	, [UserPreferencesReminderSoundOff]
	, [UserPreferencesDisableAllFeedsEmail]
	, [UserPreferencesDisableFollowersEmail]
	, [UserPreferencesDisableProfilePostEmail]
	, [UserPreferencesDisableChangeCommentEmail]
	, [UserPreferencesDisableLaterCommentEmail]
	, [UserPreferencesDisProfPostCommentEmail]
	, [UserPreferencesApexPagesDeveloperMode]
	, [UserPreferencesReceiveNoNotificationsAsApprover]
	, [UserPreferencesReceiveNotificationsAsDelegatedApprover]
	, [UserPreferencesHideCSNGetChatterMobileTask]
	, [UserPreferencesDisableMentionsPostEmail]
	, [UserPreferencesDisMentionsCommentEmail]
	, [UserPreferencesHideCSNDesktopTask]
	, [UserPreferencesHideChatterOnboardingSplash]
	, [UserPreferencesHideSecondChatterOnboardingSplash]
	, [UserPreferencesDisCommentAfterLikeEmail]
	, [UserPreferencesDisableLikeEmail]
	, [UserPreferencesSortFeedByComment]
	, [UserPreferencesDisableMessageEmail]
	, [UserPreferencesDisableBookmarkEmail]
	, [UserPreferencesDisableSharePostEmail]
	, [UserPreferencesEnableAutoSubForFeeds]
	, [UserPreferencesDisableFileShareNotificationsForApi]
	, [UserPreferencesShowTitleToExternalUsers]
	, [UserPreferencesShowManagerToExternalUsers]
	, [UserPreferencesShowEmailToExternalUsers]
	, [UserPreferencesShowWorkPhoneToExternalUsers]
	, [UserPreferencesShowMobilePhoneToExternalUsers]
	, [UserPreferencesShowFaxToExternalUsers]
	, [UserPreferencesShowStreetAddressToExternalUsers]
	, [UserPreferencesShowCityToExternalUsers]
	, [UserPreferencesShowStateToExternalUsers]
	, [UserPreferencesShowPostalCodeToExternalUsers]
	, [UserPreferencesShowCountryToExternalUsers]
	, [UserPreferencesShowProfilePicToGuestUsers]
	, [UserPreferencesShowTitleToGuestUsers]
	, [UserPreferencesShowCityToGuestUsers]
	, [UserPreferencesShowStateToGuestUsers]
	, [UserPreferencesShowPostalCodeToGuestUsers]
	, [UserPreferencesShowCountryToGuestUsers]
	, [UserPreferencesHideInvoicesRedirectConfirmation]
	, [UserPreferencesHideStatementsRedirectConfirmation]
	, [UserPreferencesHideS1BrowserUI]
	, [UserPreferencesDisableEndorsementEmail]
	, [UserPreferencesPathAssistantCollapsed]
	, [UserPreferencesCacheDiagnostics]
	, [UserPreferencesShowEmailToGuestUsers]
	, [UserPreferencesShowManagerToGuestUsers]
	, [UserPreferencesShowWorkPhoneToGuestUsers]
	, [UserPreferencesShowMobilePhoneToGuestUsers]
	, [UserPreferencesShowFaxToGuestUsers]
	, [UserPreferencesShowStreetAddressToGuestUsers]
	, [UserPreferencesLightningExperiencePreferred]
	, [UserPreferencesPreviewLightning]
	, [UserPreferencesHideEndUserOnboardingAssistantModal]
	, [UserPreferencesHideLightningMigrationModal]
	, [UserPreferencesHideSfxWelcomeMat]
	, [UserPreferencesHideBiggerPhotoCallout]
	, [UserPreferencesGlobalNavBarWTShown]
	, [UserPreferencesGlobalNavGridMenuWTShown]
	, [UserPreferencesCreateLEXAppsWTShown]
	, [UserPreferencesFavoritesWTShown]
	, [UserPreferencesRecordHomeSectionCollapseWTShown]
	, [UserPreferencesRecordHomeReservedWTShown]
	, [UserPreferencesFavoritesShowTopFavorites]
	, [UserPreferencesExcludeMailAppAttachments]
	, [UserPreferencesSuppressTaskSFXReminders]
	, [UserPreferencesSuppressEventSFXReminders]
	, [UserPreferencesPreviewCustomTheme]
	, [UserPreferencesHasCelebrationBadge]
	, [UserPreferencesUserDebugModePref]
	, [UserPreferencesSRHOverrideActivities]
	, [UserPreferencesNewLightningReportRunPageEnabled]
	, [UserPreferencesReverseOpenActivitiesView]
	, [UserPreferencesShowTerritoryTimeZoneShifts]
	, [UserPreferencesNativeEmailClient]
	, [UserPreferencesHideBrowseProductRedirectConfirmation]
	, [UserPreferencesHideOnlineSalesAppWelcomeMat]
	, [ContactId]
	, [AccountId]
	, [CallCenterId]
	, [Extension]
	, [FederationIdentifier]
	, [AboutMe]
	, [FullPhotoUrl]
	, [SmallPhotoUrl]
	, [IsExtIndicatorVisible]
	, [OutOfOfficeMessage]
	, [MediumPhotoUrl]
	, [DigestFrequency]
	, [DefaultGroupNotificationFrequency]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [BannerPhotoUrl]
	, [SmallBannerPhotoUrl]
	, [MediumBannerPhotoUrl]
	, [IsProfilePhotoActive]
	, [et4ae5__Default_ET_Page__c]
	, [et4ae5__Default_MID__c]
	, [et4ae5__ExactTargetForAppExchangeAdmin__c]
	, [et4ae5__ExactTargetForAppExchangeUser__c]
	, [et4ae5__ExactTargetUsername__c]
	, [et4ae5__ExactTarget_OAuth_Token__c]
	, [et4ae5__ValidExactTargetAdmin__c]
	, [et4ae5__ValidExactTargetUser__c]
	, [Chat_Display_Name__c]
	, [Chat_Photo_Small__c]
	, [DialerID__c]
	, [External_Id__c]
	, [SightCall_UseCase_Id__c]
	, [Mobile_Agent_Login__c]
	, [approver__c]
	, [DB_Region__c]
	, [Full_Name__c]
	, [User_Deactivation_Details__c]
	, [BannerPhotoId]
	, [EndDay]
	, [WorkspaceId]
	, [UserSubtype]
	, [IsSystemControlled]
	, [PasswordResetAttempt]
	, [PasswordResetLockoutDate]
	, [StartDay]
	)
	VALUES(
	[s].[Id]
	, [s].[Username]
	, [s].[LastName]
	, [s].[FirstName]
	, [s].[MiddleName]
	, [s].[Suffix]
	, [s].[Name]
	, [s].[CompanyName]
	, [s].[Division]
	, [s].[Department]
	, [s].[Title]
	, [s].[Street]
	, [s].[City]
	, [s].[State]
	, [s].[PostalCode]
	, [s].[Country]
	, [s].[StateCode]
	, [s].[CountryCode]
	, [s].[Latitude]
	, [s].[Longitude]
	, [s].[GeocodeAccuracy]
	, [s].[Address]
	, [s].[Email]
	, [s].[EmailPreferencesAutoBcc]
	, [s].[EmailPreferencesAutoBccStayInTouch]
	, [s].[EmailPreferencesStayInTouchReminder]
	, [s].[SenderEmail]
	, [s].[SenderName]
	, [s].[Signature]
	, [s].[StayInTouchSubject]
	, [s].[StayInTouchSignature]
	, [s].[StayInTouchNote]
	, [s].[Phone]
	, [s].[Fax]
	, [s].[MobilePhone]
	, [s].[Alias]
	, [s].[CommunityNickname]
	, [s].[BadgeText]
	, [s].[IsActive]
	, [s].[TimeZoneSidKey]
	, [s].[UserRoleId]
	, [s].[LocaleSidKey]
	, [s].[ReceivesInfoEmails]
	, [s].[ReceivesAdminInfoEmails]
	, [s].[EmailEncodingKey]
	, [s].[DefaultCurrencyIsoCode]
	, [s].[CurrencyIsoCode]
	, [s].[ProfileId]
	, [s].[UserType]
	, [s].[LanguageLocaleKey]
	, [s].[EmployeeNumber]
	, [s].[DelegatedApproverId]
	, [s].[ManagerId]
	, [s].[LastLoginDate]
	, [s].[LastPasswordChangeDate]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[NumberOfFailedLogins]
	, [s].[OfflineTrialExpirationDate]
	, [s].[OfflinePdaTrialExpirationDate]
	, [s].[UserPermissionsMarketingUser]
	, [s].[UserPermissionsOfflineUser]
	, [s].[UserPermissionsAvantgoUser]
	, [s].[UserPermissionsCallCenterAutoLogin]
	, [s].[UserPermissionsSFContentUser]
	, [s].[UserPermissionsKnowledgeUser]
	, [s].[UserPermissionsInteractionUser]
	, [s].[UserPermissionsSupportUser]
	, [s].[UserPermissionsLiveAgentUser]
	, [s].[ForecastEnabled]
	, [s].[UserPreferencesActivityRemindersPopup]
	, [s].[UserPreferencesEventRemindersCheckboxDefault]
	, [s].[UserPreferencesTaskRemindersCheckboxDefault]
	, [s].[UserPreferencesReminderSoundOff]
	, [s].[UserPreferencesDisableAllFeedsEmail]
	, [s].[UserPreferencesDisableFollowersEmail]
	, [s].[UserPreferencesDisableProfilePostEmail]
	, [s].[UserPreferencesDisableChangeCommentEmail]
	, [s].[UserPreferencesDisableLaterCommentEmail]
	, [s].[UserPreferencesDisProfPostCommentEmail]
	, [s].[UserPreferencesApexPagesDeveloperMode]
	, [s].[UserPreferencesReceiveNoNotificationsAsApprover]
	, [s].[UserPreferencesReceiveNotificationsAsDelegatedApprover]
	, [s].[UserPreferencesHideCSNGetChatterMobileTask]
	, [s].[UserPreferencesDisableMentionsPostEmail]
	, [s].[UserPreferencesDisMentionsCommentEmail]
	, [s].[UserPreferencesHideCSNDesktopTask]
	, [s].[UserPreferencesHideChatterOnboardingSplash]
	, [s].[UserPreferencesHideSecondChatterOnboardingSplash]
	, [s].[UserPreferencesDisCommentAfterLikeEmail]
	, [s].[UserPreferencesDisableLikeEmail]
	, [s].[UserPreferencesSortFeedByComment]
	, [s].[UserPreferencesDisableMessageEmail]
	, [s].[UserPreferencesDisableBookmarkEmail]
	, [s].[UserPreferencesDisableSharePostEmail]
	, [s].[UserPreferencesEnableAutoSubForFeeds]
	, [s].[UserPreferencesDisableFileShareNotificationsForApi]
	, [s].[UserPreferencesShowTitleToExternalUsers]
	, [s].[UserPreferencesShowManagerToExternalUsers]
	, [s].[UserPreferencesShowEmailToExternalUsers]
	, [s].[UserPreferencesShowWorkPhoneToExternalUsers]
	, [s].[UserPreferencesShowMobilePhoneToExternalUsers]
	, [s].[UserPreferencesShowFaxToExternalUsers]
	, [s].[UserPreferencesShowStreetAddressToExternalUsers]
	, [s].[UserPreferencesShowCityToExternalUsers]
	, [s].[UserPreferencesShowStateToExternalUsers]
	, [s].[UserPreferencesShowPostalCodeToExternalUsers]
	, [s].[UserPreferencesShowCountryToExternalUsers]
	, [s].[UserPreferencesShowProfilePicToGuestUsers]
	, [s].[UserPreferencesShowTitleToGuestUsers]
	, [s].[UserPreferencesShowCityToGuestUsers]
	, [s].[UserPreferencesShowStateToGuestUsers]
	, [s].[UserPreferencesShowPostalCodeToGuestUsers]
	, [s].[UserPreferencesShowCountryToGuestUsers]
	, [s].[UserPreferencesHideInvoicesRedirectConfirmation]
	, [s].[UserPreferencesHideStatementsRedirectConfirmation]
	, [s].[UserPreferencesHideS1BrowserUI]
	, [s].[UserPreferencesDisableEndorsementEmail]
	, [s].[UserPreferencesPathAssistantCollapsed]
	, [s].[UserPreferencesCacheDiagnostics]
	, [s].[UserPreferencesShowEmailToGuestUsers]
	, [s].[UserPreferencesShowManagerToGuestUsers]
	, [s].[UserPreferencesShowWorkPhoneToGuestUsers]
	, [s].[UserPreferencesShowMobilePhoneToGuestUsers]
	, [s].[UserPreferencesShowFaxToGuestUsers]
	, [s].[UserPreferencesShowStreetAddressToGuestUsers]
	, [s].[UserPreferencesLightningExperiencePreferred]
	, [s].[UserPreferencesPreviewLightning]
	, [s].[UserPreferencesHideEndUserOnboardingAssistantModal]
	, [s].[UserPreferencesHideLightningMigrationModal]
	, [s].[UserPreferencesHideSfxWelcomeMat]
	, [s].[UserPreferencesHideBiggerPhotoCallout]
	, [s].[UserPreferencesGlobalNavBarWTShown]
	, [s].[UserPreferencesGlobalNavGridMenuWTShown]
	, [s].[UserPreferencesCreateLEXAppsWTShown]
	, [s].[UserPreferencesFavoritesWTShown]
	, [s].[UserPreferencesRecordHomeSectionCollapseWTShown]
	, [s].[UserPreferencesRecordHomeReservedWTShown]
	, [s].[UserPreferencesFavoritesShowTopFavorites]
	, [s].[UserPreferencesExcludeMailAppAttachments]
	, [s].[UserPreferencesSuppressTaskSFXReminders]
	, [s].[UserPreferencesSuppressEventSFXReminders]
	, [s].[UserPreferencesPreviewCustomTheme]
	, [s].[UserPreferencesHasCelebrationBadge]
	, [s].[UserPreferencesUserDebugModePref]
	, [s].[UserPreferencesSRHOverrideActivities]
	, [s].[UserPreferencesNewLightningReportRunPageEnabled]
	, [s].[UserPreferencesReverseOpenActivitiesView]
	, [s].[UserPreferencesShowTerritoryTimeZoneShifts]
	, [s].[UserPreferencesNativeEmailClient]
	, [s].[UserPreferencesHideBrowseProductRedirectConfirmation]
	, [s].[UserPreferencesHideOnlineSalesAppWelcomeMat]
	, [s].[ContactId]
	, [s].[AccountId]
	, [s].[CallCenterId]
	, [s].[Extension]
	, [s].[FederationIdentifier]
	, [s].[AboutMe]
	, [s].[FullPhotoUrl]
	, [s].[SmallPhotoUrl]
	, [s].[IsExtIndicatorVisible]
	, [s].[OutOfOfficeMessage]
	, [s].[MediumPhotoUrl]
	, [s].[DigestFrequency]
	, [s].[DefaultGroupNotificationFrequency]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[BannerPhotoUrl]
	, [s].[SmallBannerPhotoUrl]
	, [s].[MediumBannerPhotoUrl]
	, [s].[IsProfilePhotoActive]
	, [s].[et4ae5__Default_ET_Page__c]
	, [s].[et4ae5__Default_MID__c]
	, [s].[et4ae5__ExactTargetForAppExchangeAdmin__c]
	, [s].[et4ae5__ExactTargetForAppExchangeUser__c]
	, [s].[et4ae5__ExactTargetUsername__c]
	, [s].[et4ae5__ExactTarget_OAuth_Token__c]
	, [s].[et4ae5__ValidExactTargetAdmin__c]
	, [s].[et4ae5__ValidExactTargetUser__c]
	, [s].[Chat_Display_Name__c]
	, [s].[Chat_Photo_Small__c]
	, [s].[DialerID__c]
	, [s].[External_Id__c]
	, [s].[SightCall_UseCase_Id__c]
	, [s].[Mobile_Agent_Login__c]
	, [s].[approver__c]
	, [s].[DB_Region__c]
	, [s].[Full_Name__c]
	, [s].[User_Deactivation_Details__c]
	, [s].[BannerPhotoId]
	, [s].[EndDay]
	, [s].[WorkspaceId]
	, [s].[UserSubtype]
	, [s].[IsSystemControlled]
	, [s].[PasswordResetAttempt]
	, [s].[PasswordResetLockoutDate]
	, [s].[StartDay]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[User] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_WorkOrder_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_WorkOrder_Merge]
GO
CREATE PROCEDURE [SF].[sp_WorkOrder_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[WorkOrder])
RETURN ;

BEGIN TRY
;MERGE [SF].[WorkOrder] AS [t]
USING [SFStaging].[WorkOrder] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OwnerId] = [t].[OwnerId]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[WorkOrderNumber] = [t].[WorkOrderNumber]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[AccountId] = [t].[AccountId]
	, [t].[ContactId] = [t].[ContactId]
	, [t].[CaseId] = [t].[CaseId]
	, [t].[EntitlementId] = [t].[EntitlementId]
	, [t].[ServiceContractId] = [t].[ServiceContractId]
	, [t].[AssetId] = [t].[AssetId]
	, [t].[Street] = [t].[Street]
	, [t].[City] = [t].[City]
	, [t].[State] = [t].[State]
	, [t].[PostalCode] = [t].[PostalCode]
	, [t].[Country] = [t].[Country]
	, [t].[StateCode] = [t].[StateCode]
	, [t].[CountryCode] = [t].[CountryCode]
	, [t].[Latitude] = [t].[Latitude]
	, [t].[Longitude] = [t].[Longitude]
	, [t].[GeocodeAccuracy] = [t].[GeocodeAccuracy]
	, [t].[Address] = [t].[Address]
	, [t].[Description] = [t].[Description]
	, [t].[StartDate] = [t].[StartDate]
	, [t].[EndDate] = [t].[EndDate]
	, [t].[Subject] = [t].[Subject]
	, [t].[RootWorkOrderId] = [t].[RootWorkOrderId]
	, [t].[Status] = [t].[Status]
	, [t].[Priority] = [t].[Priority]
	, [t].[Tax] = [t].[Tax]
	, [t].[Subtotal] = [t].[Subtotal]
	, [t].[TotalPrice] = [t].[TotalPrice]
	, [t].[LineItemCount] = [t].[LineItemCount]
	, [t].[Pricebook2Id] = [t].[Pricebook2Id]
	, [t].[Discount] = [t].[Discount]
	, [t].[GrandTotal] = [t].[GrandTotal]
	, [t].[ParentWorkOrderId] = [t].[ParentWorkOrderId]
	, [t].[IsClosed] = [t].[IsClosed]
	, [t].[IsStopped] = [t].[IsStopped]
	, [t].[StopStartDate] = [t].[StopStartDate]
	, [t].[SlaStartDate] = [t].[SlaStartDate]
	, [t].[SlaExitDate] = [t].[SlaExitDate]
	, [t].[BusinessHoursId] = [t].[BusinessHoursId]
	, [t].[MilestoneStatus] = [t].[MilestoneStatus]
	, [t].[Duration] = [t].[Duration]
	, [t].[DurationType] = [t].[DurationType]
	, [t].[DurationInMinutes] = [t].[DurationInMinutes]
	, [t].[ServiceAppointmentCount] = [t].[ServiceAppointmentCount]
	, [t].[WorkTypeId] = [t].[WorkTypeId]
	, [t].[ServiceTerritoryId] = [t].[ServiceTerritoryId]
	, [t].[StatusCategory] = [t].[StatusCategory]
	, [t].[LocationId] = [t].[LocationId]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OwnerId]
	, [IsDeleted]
	, [WorkOrderNumber]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [AccountId]
	, [ContactId]
	, [CaseId]
	, [EntitlementId]
	, [ServiceContractId]
	, [AssetId]
	, [Street]
	, [City]
	, [State]
	, [PostalCode]
	, [Country]
	, [StateCode]
	, [CountryCode]
	, [Latitude]
	, [Longitude]
	, [GeocodeAccuracy]
	, [Address]
	, [Description]
	, [StartDate]
	, [EndDate]
	, [Subject]
	, [RootWorkOrderId]
	, [Status]
	, [Priority]
	, [Tax]
	, [Subtotal]
	, [TotalPrice]
	, [LineItemCount]
	, [Pricebook2Id]
	, [Discount]
	, [GrandTotal]
	, [ParentWorkOrderId]
	, [IsClosed]
	, [IsStopped]
	, [StopStartDate]
	, [SlaStartDate]
	, [SlaExitDate]
	, [BusinessHoursId]
	, [MilestoneStatus]
	, [Duration]
	, [DurationType]
	, [DurationInMinutes]
	, [ServiceAppointmentCount]
	, [WorkTypeId]
	, [ServiceTerritoryId]
	, [StatusCategory]
	, [LocationId]
	)
	VALUES(
	[s].[Id]
	, [s].[OwnerId]
	, [s].[IsDeleted]
	, [s].[WorkOrderNumber]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[AccountId]
	, [s].[ContactId]
	, [s].[CaseId]
	, [s].[EntitlementId]
	, [s].[ServiceContractId]
	, [s].[AssetId]
	, [s].[Street]
	, [s].[City]
	, [s].[State]
	, [s].[PostalCode]
	, [s].[Country]
	, [s].[StateCode]
	, [s].[CountryCode]
	, [s].[Latitude]
	, [s].[Longitude]
	, [s].[GeocodeAccuracy]
	, [s].[Address]
	, [s].[Description]
	, [s].[StartDate]
	, [s].[EndDate]
	, [s].[Subject]
	, [s].[RootWorkOrderId]
	, [s].[Status]
	, [s].[Priority]
	, [s].[Tax]
	, [s].[Subtotal]
	, [s].[TotalPrice]
	, [s].[LineItemCount]
	, [s].[Pricebook2Id]
	, [s].[Discount]
	, [s].[GrandTotal]
	, [s].[ParentWorkOrderId]
	, [s].[IsClosed]
	, [s].[IsStopped]
	, [s].[StopStartDate]
	, [s].[SlaStartDate]
	, [s].[SlaExitDate]
	, [s].[BusinessHoursId]
	, [s].[MilestoneStatus]
	, [s].[Duration]
	, [s].[DurationType]
	, [s].[DurationInMinutes]
	, [s].[ServiceAppointmentCount]
	, [s].[WorkTypeId]
	, [s].[ServiceTerritoryId]
	, [s].[StatusCategory]
	, [s].[LocationId]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[WorkOrder] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_WorkOrderLineItem_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_WorkOrderLineItem_Merge]
GO
CREATE PROCEDURE [SF].[sp_WorkOrderLineItem_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[WorkOrderLineItem])
RETURN ;

BEGIN TRY
;MERGE [SF].[WorkOrderLineItem] AS [t]
USING [SFStaging].[WorkOrderLineItem] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[LineItemNumber] = [t].[LineItemNumber]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[WorkOrderId] = [t].[WorkOrderId]
	, [t].[ParentWorkOrderLineItemId] = [t].[ParentWorkOrderLineItemId]
	, [t].[Product2Id] = [t].[Product2Id]
	, [t].[AssetId] = [t].[AssetId]
	, [t].[OrderId] = [t].[OrderId]
	, [t].[RootWorkOrderLineItemId] = [t].[RootWorkOrderLineItemId]
	, [t].[Description] = [t].[Description]
	, [t].[StartDate] = [t].[StartDate]
	, [t].[EndDate] = [t].[EndDate]
	, [t].[Status] = [t].[Status]
	, [t].[PricebookEntryId] = [t].[PricebookEntryId]
	, [t].[Quantity] = [t].[Quantity]
	, [t].[UnitPrice] = [t].[UnitPrice]
	, [t].[Discount] = [t].[Discount]
	, [t].[ListPrice] = [t].[ListPrice]
	, [t].[Subtotal] = [t].[Subtotal]
	, [t].[TotalPrice] = [t].[TotalPrice]
	, [t].[Duration] = [t].[Duration]
	, [t].[DurationType] = [t].[DurationType]
	, [t].[DurationInMinutes] = [t].[DurationInMinutes]
	, [t].[WorkTypeId] = [t].[WorkTypeId]
	, [t].[Street] = [t].[Street]
	, [t].[City] = [t].[City]
	, [t].[State] = [t].[State]
	, [t].[PostalCode] = [t].[PostalCode]
	, [t].[Country] = [t].[Country]
	, [t].[StateCode] = [t].[StateCode]
	, [t].[CountryCode] = [t].[CountryCode]
	, [t].[Latitude] = [t].[Latitude]
	, [t].[Longitude] = [t].[Longitude]
	, [t].[GeocodeAccuracy] = [t].[GeocodeAccuracy]
	, [t].[Address] = [t].[Address]
	, [t].[ServiceTerritoryId] = [t].[ServiceTerritoryId]
	, [t].[Subject] = [t].[Subject]
	, [t].[StatusCategory] = [t].[StatusCategory]
	, [t].[IsClosed] = [t].[IsClosed]
	, [t].[Priority] = [t].[Priority]
	, [t].[ServiceAppointmentCount] = [t].[ServiceAppointmentCount]
	, [t].[LocationId] = [t].[LocationId]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [LineItemNumber]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [WorkOrderId]
	, [ParentWorkOrderLineItemId]
	, [Product2Id]
	, [AssetId]
	, [OrderId]
	, [RootWorkOrderLineItemId]
	, [Description]
	, [StartDate]
	, [EndDate]
	, [Status]
	, [PricebookEntryId]
	, [Quantity]
	, [UnitPrice]
	, [Discount]
	, [ListPrice]
	, [Subtotal]
	, [TotalPrice]
	, [Duration]
	, [DurationType]
	, [DurationInMinutes]
	, [WorkTypeId]
	, [Street]
	, [City]
	, [State]
	, [PostalCode]
	, [Country]
	, [StateCode]
	, [CountryCode]
	, [Latitude]
	, [Longitude]
	, [GeocodeAccuracy]
	, [Address]
	, [ServiceTerritoryId]
	, [Subject]
	, [StatusCategory]
	, [IsClosed]
	, [Priority]
	, [ServiceAppointmentCount]
	, [LocationId]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[LineItemNumber]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[WorkOrderId]
	, [s].[ParentWorkOrderLineItemId]
	, [s].[Product2Id]
	, [s].[AssetId]
	, [s].[OrderId]
	, [s].[RootWorkOrderLineItemId]
	, [s].[Description]
	, [s].[StartDate]
	, [s].[EndDate]
	, [s].[Status]
	, [s].[PricebookEntryId]
	, [s].[Quantity]
	, [s].[UnitPrice]
	, [s].[Discount]
	, [s].[ListPrice]
	, [s].[Subtotal]
	, [s].[TotalPrice]
	, [s].[Duration]
	, [s].[DurationType]
	, [s].[DurationInMinutes]
	, [s].[WorkTypeId]
	, [s].[Street]
	, [s].[City]
	, [s].[State]
	, [s].[PostalCode]
	, [s].[Country]
	, [s].[StateCode]
	, [s].[CountryCode]
	, [s].[Latitude]
	, [s].[Longitude]
	, [s].[GeocodeAccuracy]
	, [s].[Address]
	, [s].[ServiceTerritoryId]
	, [s].[Subject]
	, [s].[StatusCategory]
	, [s].[IsClosed]
	, [s].[Priority]
	, [s].[ServiceAppointmentCount]
	, [s].[LocationId]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[WorkOrderLineItem] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_WorkType_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_WorkType_Merge]
GO
CREATE PROCEDURE [SF].[sp_WorkType_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[WorkType])
RETURN ;

BEGIN TRY
;MERGE [SF].[WorkType] AS [t]
USING [SFStaging].[WorkType] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OwnerId] = [t].[OwnerId]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[Name] = [t].[Name]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[Description] = [t].[Description]
	, [t].[EstimatedDuration] = [t].[EstimatedDuration]
	, [t].[DurationType] = [t].[DurationType]
	, [t].[DurationInMinutes] = [t].[DurationInMinutes]
	, [t].[TimeframeStart] = [t].[TimeframeStart]
	, [t].[TimeframeEnd] = [t].[TimeframeEnd]
	, [t].[BlockTimeBeforeAppointment] = [t].[BlockTimeBeforeAppointment]
	, [t].[BlockTimeAfterAppointment] = [t].[BlockTimeAfterAppointment]
	, [t].[DefaultAppointmentType] = [t].[DefaultAppointmentType]
	, [t].[TimeFrameStartUnit] = [t].[TimeFrameStartUnit]
	, [t].[TimeFrameEndUnit] = [t].[TimeFrameEndUnit]
	, [t].[BlockTimeBeforeUnit] = [t].[BlockTimeBeforeUnit]
	, [t].[BlockTimeAfterUnit] = [t].[BlockTimeAfterUnit]
	, [t].[OperatingHoursId] = [t].[OperatingHoursId]
	, [t].[External_Id__c] = [t].[External_Id__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OwnerId]
	, [IsDeleted]
	, [Name]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [Description]
	, [EstimatedDuration]
	, [DurationType]
	, [DurationInMinutes]
	, [TimeframeStart]
	, [TimeframeEnd]
	, [BlockTimeBeforeAppointment]
	, [BlockTimeAfterAppointment]
	, [DefaultAppointmentType]
	, [TimeFrameStartUnit]
	, [TimeFrameEndUnit]
	, [BlockTimeBeforeUnit]
	, [BlockTimeAfterUnit]
	, [OperatingHoursId]
	, [External_Id__c]
	)
	VALUES(
	[s].[Id]
	, [s].[OwnerId]
	, [s].[IsDeleted]
	, [s].[Name]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[Description]
	, [s].[EstimatedDuration]
	, [s].[DurationType]
	, [s].[DurationInMinutes]
	, [s].[TimeframeStart]
	, [s].[TimeframeEnd]
	, [s].[BlockTimeBeforeAppointment]
	, [s].[BlockTimeAfterAppointment]
	, [s].[DefaultAppointmentType]
	, [s].[TimeFrameStartUnit]
	, [s].[TimeFrameEndUnit]
	, [s].[BlockTimeBeforeUnit]
	, [s].[BlockTimeAfterUnit]
	, [s].[OperatingHoursId]
	, [s].[External_Id__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[WorkType] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_WorkTypeGroup_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_WorkTypeGroup_Merge]
GO
CREATE PROCEDURE [SF].[sp_WorkTypeGroup_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[WorkTypeGroup])
RETURN ;

BEGIN TRY
;MERGE [SF].[WorkTypeGroup] AS [t]
USING [SFStaging].[WorkTypeGroup] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OwnerId] = [t].[OwnerId]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[Name] = [t].[Name]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[Description] = [t].[Description]
	, [t].[GroupType] = [t].[GroupType]
	, [t].[IsActive] = [t].[IsActive]
	, [t].[AdditionalInformation] = [t].[AdditionalInformation]
	, [t].[External_Id__c] = [t].[External_Id__c]
	, [t].[Language__c] = [t].[Language__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OwnerId]
	, [IsDeleted]
	, [Name]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [Description]
	, [GroupType]
	, [IsActive]
	, [AdditionalInformation]
	, [External_Id__c]
	, [Language__c]
	)
	VALUES(
	[s].[Id]
	, [s].[OwnerId]
	, [s].[IsDeleted]
	, [s].[Name]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[Description]
	, [s].[GroupType]
	, [s].[IsActive]
	, [s].[AdditionalInformation]
	, [s].[External_Id__c]
	, [s].[Language__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[WorkTypeGroup] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_Account_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_Account_Merge]
GO
CREATE PROCEDURE [SF].[sp_Account_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[Account])
RETURN ;

BEGIN TRY
;MERGE [SF].[Account] AS [t]
USING [SFStaging].[Account] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[MasterRecordId] = [t].[MasterRecordId]
	, [t].[Name] = [t].[Name]
	, [t].[LastName] = [t].[LastName]
	, [t].[FirstName] = [t].[FirstName]
	, [t].[Salutation] = [t].[Salutation]
	, [t].[MiddleName] = [t].[MiddleName]
	, [t].[Suffix] = [t].[Suffix]
	, [t].[Type] = [t].[Type]
	, [t].[RecordTypeId] = [t].[RecordTypeId]
	, [t].[ParentId] = [t].[ParentId]
	, [t].[BillingStreet] = [t].[BillingStreet]
	, [t].[BillingCity] = [t].[BillingCity]
	, [t].[BillingState] = [t].[BillingState]
	, [t].[BillingPostalCode] = [t].[BillingPostalCode]
	, [t].[BillingCountry] = [t].[BillingCountry]
	, [t].[BillingStateCode] = [t].[BillingStateCode]
	, [t].[BillingCountryCode] = [t].[BillingCountryCode]
	, [t].[BillingLatitude] = [t].[BillingLatitude]
	, [t].[BillingLongitude] = [t].[BillingLongitude]
	, [t].[BillingGeocodeAccuracy] = [t].[BillingGeocodeAccuracy]
	, [t].[ShippingStreet] = [t].[ShippingStreet]
	, [t].[ShippingCity] = [t].[ShippingCity]
	, [t].[ShippingState] = [t].[ShippingState]
	, [t].[ShippingPostalCode] = [t].[ShippingPostalCode]
	, [t].[ShippingCountry] = [t].[ShippingCountry]
	, [t].[ShippingStateCode] = [t].[ShippingStateCode]
	, [t].[ShippingCountryCode] = [t].[ShippingCountryCode]
	, [t].[ShippingLatitude] = [t].[ShippingLatitude]
	, [t].[ShippingLongitude] = [t].[ShippingLongitude]
	, [t].[ShippingGeocodeAccuracy] = [t].[ShippingGeocodeAccuracy]
	, [t].[Phone] = [t].[Phone]
	, [t].[Fax] = [t].[Fax]
	, [t].[AccountNumber] = [t].[AccountNumber]
	, [t].[Website] = [t].[Website]
	, [t].[PhotoUrl] = [t].[PhotoUrl]
	, [t].[Sic] = [t].[Sic]
	, [t].[Industry] = [t].[Industry]
	, [t].[AnnualRevenue] = [t].[AnnualRevenue]
	, [t].[NumberOfEmployees] = [t].[NumberOfEmployees]
	, [t].[Ownership] = [t].[Ownership]
	, [t].[TickerSymbol] = [t].[TickerSymbol]
	, [t].[Description] = [t].[Description]
	, [t].[Rating] = [t].[Rating]
	, [t].[Site] = [t].[Site]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[OwnerId] = [t].[OwnerId]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastActivityDate] = [t].[LastActivityDate]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[PersonContactId] = [t].[PersonContactId]
	, [t].[IsPersonAccount] = [t].[IsPersonAccount]
	, [t].[PersonMailingStreet] = [t].[PersonMailingStreet]
	, [t].[PersonMailingCity] = [t].[PersonMailingCity]
	, [t].[PersonMailingState] = [t].[PersonMailingState]
	, [t].[PersonMailingPostalCode] = [t].[PersonMailingPostalCode]
	, [t].[PersonMailingCountry] = [t].[PersonMailingCountry]
	, [t].[PersonMailingStateCode] = [t].[PersonMailingStateCode]
	, [t].[PersonMailingCountryCode] = [t].[PersonMailingCountryCode]
	, [t].[PersonMailingLatitude] = [t].[PersonMailingLatitude]
	, [t].[PersonMailingLongitude] = [t].[PersonMailingLongitude]
	, [t].[PersonMailingGeocodeAccuracy] = [t].[PersonMailingGeocodeAccuracy]
	, [t].[PersonMobilePhone] = [t].[PersonMobilePhone]
	, [t].[PersonHomePhone] = [t].[PersonHomePhone]
	, [t].[PersonOtherPhone] = [t].[PersonOtherPhone]
	, [t].[PersonAssistantPhone] = [t].[PersonAssistantPhone]
	, [t].[PersonEmail] = [t].[PersonEmail]
	, [t].[PersonTitle] = [t].[PersonTitle]
	, [t].[PersonDepartment] = [t].[PersonDepartment]
	, [t].[PersonDoNotCall] = [t].[PersonDoNotCall]
	, [t].[PersonLastCURequestDate] = [t].[PersonLastCURequestDate]
	, [t].[PersonLastCUUpdateDate] = [t].[PersonLastCUUpdateDate]
	, [t].[PersonEmailBouncedReason] = [t].[PersonEmailBouncedReason]
	, [t].[PersonEmailBouncedDate] = [t].[PersonEmailBouncedDate]
	, [t].[Jigsaw] = [t].[Jigsaw]
	, [t].[JigsawCompanyId] = [t].[JigsawCompanyId]
	, [t].[AccountSource] = [t].[AccountSource]
	, [t].[SicDesc] = [t].[SicDesc]
	, [t].[OperatingHoursId] = [t].[OperatingHoursId]
	, [t].[Active__c] = [t].[Active__c]
	, [t].[Company__c] = [t].[Company__c]
	, [t].[ConectCreationDate__c] = [t].[ConectCreationDate__c]
	, [t].[ConectLastUpdate__c] = [t].[ConectLastUpdate__c]
	, [t].[External_Id__c] = [t].[External_Id__c]
	, [t].[PersonMobilePhone_Number_Normalized__c] = [t].[PersonMobilePhone_Number_Normalized__c]
	, [t].[Status__c] = [t].[Status__c]
	, [t].[Count_Close_Won_Opportunities__c] = [t].[Count_Close_Won_Opportunities__c]
	, [t].[ClientIdentifier__c] = [t].[ClientIdentifier__c]
	, [t].[Occupation__c] = [t].[Occupation__c]
	, [t].[AreaManager__c] = [t].[AreaManager__c]
	, [t].[Area__c] = [t].[Area__c]
	, [t].[AssistantManager__c] = [t].[AssistantManager__c]
	, [t].[BackLinePhone__c] = [t].[BackLinePhone__c]
	, [t].[BestTressedOffered__c] = [t].[BestTressedOffered__c]
	, [t].[CenterAlert__c] = [t].[CenterAlert__c]
	, [t].[CenterOwner__c] = [t].[CenterOwner__c]
	, [t].[CenterType__c] = [t].[CenterType__c]
	, [t].[CompanyID__c] = [t].[CompanyID__c]
	, [t].[ConfirmationCallerIDEnglish__c] = [t].[ConfirmationCallerIDEnglish__c]
	, [t].[ConfirmationCallerIDFrench__c] = [t].[ConfirmationCallerIDFrench__c]
	, [t].[ConfirmationCallerIDSpanish__c] = [t].[ConfirmationCallerIDSpanish__c]
	, [t].[CustomerServiceLine__c] = [t].[CustomerServiceLine__c]
	, [t].[Customer_Status__c] = [t].[Customer_Status__c]
	, [t].[DNCDateMobilePhone__c] = [t].[DNCDateMobilePhone__c]
	, [t].[DNCDatePhone__c] = [t].[DNCDatePhone__c]
	, [t].[DNCValidationMobilePhone__c] = [t].[DNCValidationMobilePhone__c]
	, [t].[DNCValidationPhone__c] = [t].[DNCValidationPhone__c]
	, [t].[DisplayName__c] = [t].[DisplayName__c]
	, [t].[ImageConsultant__c] = [t].[ImageConsultant__c]
	, [t].[MDPOffered__c] = [t].[MDPOffered__c]
	, [t].[MDPPerformed__c] = [t].[MDPPerformed__c]
	, [t].[ManagerName__c] = [t].[ManagerName__c]
	, [t].[MgrCellPhone__c] = [t].[MgrCellPhone__c]
	, [t].[OfferPRP__c] = [t].[OfferPRP__c]
	, [t].[OtherCallerIDEnglish__c] = [t].[OtherCallerIDEnglish__c]
	, [t].[OtherCallerIDFrench__c] = [t].[OtherCallerIDFrench__c]
	, [t].[OtherCallerIDSpanish__c] = [t].[OtherCallerIDSpanish__c]
	, [t].[OutboundDialingAllowed__c] = [t].[OutboundDialingAllowed__c]
	, [t].[ProfileCode__c] = [t].[ProfileCode__c]
	, [t].[Region__c] = [t].[Region__c]
	, [t].[Service_Territory__c] = [t].[Service_Territory__c]
	, [t].[SurgeryOffered__c] = [t].[SurgeryOffered__c]
	, [t].[TimeZone__c] = [t].[TimeZone__c]
	, [t].[Virtual__c] = [t].[Virtual__c]
	, [t].[WebPhone__c] = [t].[WebPhone__c]
	, [t].[X1Apptperslot__c] = [t].[X1Apptperslot__c]
	, [t].[ClientGUID__c] = [t].[ClientGUID__c]
	, [t].[Goals_Expectations__c] = [t].[Goals_Expectations__c]
	, [t].[How_many_times_a_week_do_you_think__c] = [t].[How_many_times_a_week_do_you_think__c]
	, [t].[How_much_time_a_week_do_you_spend__c] = [t].[How_much_time_a_week_do_you_spend__c]
	, [t].[Other_Reason__c] = [t].[Other_Reason__c]
	, [t].[What_are_your_main_concerns_today__c] = [t].[What_are_your_main_concerns_today__c]
	, [t].[What_else_would_be_helpful_for_your__c] = [t].[What_else_would_be_helpful_for_your__c]
	, [t].[What_methods_have_you_used_or_currently__c] = [t].[What_methods_have_you_used_or_currently__c]
	, [t].[fferpcore__ExemptionCertificate__c] = [t].[fferpcore__ExemptionCertificate__c]
	, [t].[fferpcore__IsBillingAddressValidated__c] = [t].[fferpcore__IsBillingAddressValidated__c]
	, [t].[fferpcore__IsShippingAddressValidated__c] = [t].[fferpcore__IsShippingAddressValidated__c]
	, [t].[fferpcore__MaterializedBillingAddressValidated__c] = [t].[fferpcore__MaterializedBillingAddressValidated__c]
	, [t].[fferpcore__MaterializedShippingAddressValidated__c] = [t].[fferpcore__MaterializedShippingAddressValidated__c]
	, [t].[fferpcore__OutputVatCode__c] = [t].[fferpcore__OutputVatCode__c]
	, [t].[fferpcore__SalesTaxStatus__c] = [t].[fferpcore__SalesTaxStatus__c]
	, [t].[fferpcore__TaxCode1__c] = [t].[fferpcore__TaxCode1__c]
	, [t].[fferpcore__TaxCode2__c] = [t].[fferpcore__TaxCode2__c]
	, [t].[fferpcore__TaxCode3__c] = [t].[fferpcore__TaxCode3__c]
	, [t].[fferpcore__TaxCountryCode__c] = [t].[fferpcore__TaxCountryCode__c]
	, [t].[fferpcore__ValidatedBillingCity__c] = [t].[fferpcore__ValidatedBillingCity__c]
	, [t].[fferpcore__ValidatedBillingCountry__c] = [t].[fferpcore__ValidatedBillingCountry__c]
	, [t].[fferpcore__ValidatedBillingPostalCode__c] = [t].[fferpcore__ValidatedBillingPostalCode__c]
	, [t].[fferpcore__ValidatedBillingState__c] = [t].[fferpcore__ValidatedBillingState__c]
	, [t].[fferpcore__ValidatedBillingStreet__c] = [t].[fferpcore__ValidatedBillingStreet__c]
	, [t].[fferpcore__ValidatedShippingCity__c] = [t].[fferpcore__ValidatedShippingCity__c]
	, [t].[fferpcore__ValidatedShippingCountry__c] = [t].[fferpcore__ValidatedShippingCountry__c]
	, [t].[fferpcore__ValidatedShippingPostalCode__c] = [t].[fferpcore__ValidatedShippingPostalCode__c]
	, [t].[fferpcore__ValidatedShippingState__c] = [t].[fferpcore__ValidatedShippingState__c]
	, [t].[fferpcore__ValidatedShippingStreet__c] = [t].[fferpcore__ValidatedShippingStreet__c]
	, [t].[fferpcore__VatRegistrationNumber__c] = [t].[fferpcore__VatRegistrationNumber__c]
	, [t].[fferpcore__VatStatus__c] = [t].[fferpcore__VatStatus__c]
	, [t].[ffbf__AccountParticulars__c] = [t].[ffbf__AccountParticulars__c]
	, [t].[ffbf__BankBIC__c] = [t].[ffbf__BankBIC__c]
	, [t].[ffbf__PaymentCode__c] = [t].[ffbf__PaymentCode__c]
	, [t].[ffbf__PaymentCountryISO__c] = [t].[ffbf__PaymentCountryISO__c]
	, [t].[ffbf__PaymentPriority__c] = [t].[ffbf__PaymentPriority__c]
	, [t].[ffbf__PaymentRoutingMethod__c] = [t].[ffbf__PaymentRoutingMethod__c]
	, [t].[SCMFFA__Company_Name__c] = [t].[SCMFFA__Company_Name__c]
	, [t].[ffaci__CurrencyCulture__c] = [t].[ffaci__CurrencyCulture__c]
	, [t].[Service_Territory_Time_Zone__c] = [t].[Service_Territory_Time_Zone__c]
	, [t].[rh2__testCurrency__c] = [t].[rh2__testCurrency__c]
	, [t].[Initial_Campaign_Source__c] = [t].[Initial_Campaign_Source__c]
	, [t].[Landing_Page_Form_Submitted_Date__c] = [t].[Landing_Page_Form_Submitted_Date__c]
	, [t].[Age__pc] = [t].[Age__pc]
	, [t].[Birthdate__pc] = [t].[Birthdate__pc]
	, [t].[DoNotContact__pc] = [t].[DoNotContact__pc]
	, [t].[DoNotEmail__pc] = [t].[DoNotEmail__pc]
	, [t].[DoNotMail__pc] = [t].[DoNotMail__pc]
	, [t].[DoNotText__pc] = [t].[DoNotText__pc]
	, [t].[Ethnicity__pc] = [t].[Ethnicity__pc]
	, [t].[Gender__pc] = [t].[Gender__pc]
	, [t].[HairLossExperience__pc] = [t].[HairLossExperience__pc]
	, [t].[HairLossFamily__pc] = [t].[HairLossFamily__pc]
	, [t].[HairLossOrVolume__pc] = [t].[HairLossOrVolume__pc]
	, [t].[HairLossProductOther__pc] = [t].[HairLossProductOther__pc]
	, [t].[HairLossProductUsed__pc] = [t].[HairLossProductUsed__pc]
	, [t].[HairLossSpot__pc] = [t].[HairLossSpot__pc]
	, [t].[HardCopyPreferred__pc] = [t].[HardCopyPreferred__pc]
	, [t].[Language__pc] = [t].[Language__pc]
	, [t].[MaritalStatus__pc] = [t].[MaritalStatus__pc]
	, [t].[Text_Reminder_Opt_In__pc] = [t].[Text_Reminder_Opt_In__pc]
	, [t].[rh2__Currency_Test__pc] = [t].[rh2__Currency_Test__pc]
	, [t].[rh2__Describe__pc] = [t].[rh2__Describe__pc]
	, [t].[rh2__Formula_Test__pc] = [t].[rh2__Formula_Test__pc]
	, [t].[rh2__Integer_Test__pc] = [t].[rh2__Integer_Test__pc]
	, [t].[Next_Milestone_Event__pc] = [t].[Next_Milestone_Event__pc]
	, [t].[Next_Milestone_Event_Date__pc] = [t].[Next_Milestone_Event_Date__pc]
	, [t].[Bosley_Center_Number__pc] = [t].[Bosley_Center_Number__pc]
	, [t].[Bosley_Client_Id__pc] = [t].[Bosley_Client_Id__pc]
	, [t].[Bosley_Legacy_Source_Code__pc] = [t].[Bosley_Legacy_Source_Code__pc]
	, [t].[Bosley_Salesforce_Id__pc] = [t].[Bosley_Salesforce_Id__pc]
	, [t].[Bosley_Siebel_Id__pc] = [t].[Bosley_Siebel_Id__pc]
	, [t].[Contact_ID_18_dig__pc] = [t].[Contact_ID_18_dig__pc]
	, [t].[Landing_Page_Form_Submitted_Date__pc] = [t].[Landing_Page_Form_Submitted_Date__pc]
	, [t].[Personal_Photo__pc] = [t].[Personal_Photo__pc]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [MasterRecordId]
	, [Name]
	, [LastName]
	, [FirstName]
	, [Salutation]
	, [MiddleName]
	, [Suffix]
	, [Type]
	, [RecordTypeId]
	, [ParentId]
	, [BillingStreet]
	, [BillingCity]
	, [BillingState]
	, [BillingPostalCode]
	, [BillingCountry]
	, [BillingStateCode]
	, [BillingCountryCode]
	, [BillingLatitude]
	, [BillingLongitude]
	, [BillingGeocodeAccuracy]
	, [ShippingStreet]
	, [ShippingCity]
	, [ShippingState]
	, [ShippingPostalCode]
	, [ShippingCountry]
	, [ShippingStateCode]
	, [ShippingCountryCode]
	, [ShippingLatitude]
	, [ShippingLongitude]
	, [ShippingGeocodeAccuracy]
	, [Phone]
	, [Fax]
	, [AccountNumber]
	, [Website]
	, [PhotoUrl]
	, [Sic]
	, [Industry]
	, [AnnualRevenue]
	, [NumberOfEmployees]
	, [Ownership]
	, [TickerSymbol]
	, [Description]
	, [Rating]
	, [Site]
	, [CurrencyIsoCode]
	, [OwnerId]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastActivityDate]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [PersonContactId]
	, [IsPersonAccount]
	, [PersonMailingStreet]
	, [PersonMailingCity]
	, [PersonMailingState]
	, [PersonMailingPostalCode]
	, [PersonMailingCountry]
	, [PersonMailingStateCode]
	, [PersonMailingCountryCode]
	, [PersonMailingLatitude]
	, [PersonMailingLongitude]
	, [PersonMailingGeocodeAccuracy]
	, [PersonMobilePhone]
	, [PersonHomePhone]
	, [PersonOtherPhone]
	, [PersonAssistantPhone]
	, [PersonEmail]
	, [PersonTitle]
	, [PersonDepartment]
	, [PersonDoNotCall]
	, [PersonLastCURequestDate]
	, [PersonLastCUUpdateDate]
	, [PersonEmailBouncedReason]
	, [PersonEmailBouncedDate]
	, [Jigsaw]
	, [JigsawCompanyId]
	, [AccountSource]
	, [SicDesc]
	, [OperatingHoursId]
	, [Active__c]
	, [Company__c]
	, [ConectCreationDate__c]
	, [ConectLastUpdate__c]
	, [External_Id__c]
	, [PersonMobilePhone_Number_Normalized__c]
	, [Status__c]
	, [Count_Close_Won_Opportunities__c]
	, [ClientIdentifier__c]
	, [Occupation__c]
	, [AreaManager__c]
	, [Area__c]
	, [AssistantManager__c]
	, [BackLinePhone__c]
	, [BestTressedOffered__c]
	, [CenterAlert__c]
	, [CenterOwner__c]
	, [CenterType__c]
	, [CompanyID__c]
	, [ConfirmationCallerIDEnglish__c]
	, [ConfirmationCallerIDFrench__c]
	, [ConfirmationCallerIDSpanish__c]
	, [CustomerServiceLine__c]
	, [Customer_Status__c]
	, [DNCDateMobilePhone__c]
	, [DNCDatePhone__c]
	, [DNCValidationMobilePhone__c]
	, [DNCValidationPhone__c]
	, [DisplayName__c]
	, [ImageConsultant__c]
	, [MDPOffered__c]
	, [MDPPerformed__c]
	, [ManagerName__c]
	, [MgrCellPhone__c]
	, [OfferPRP__c]
	, [OtherCallerIDEnglish__c]
	, [OtherCallerIDFrench__c]
	, [OtherCallerIDSpanish__c]
	, [OutboundDialingAllowed__c]
	, [ProfileCode__c]
	, [Region__c]
	, [Service_Territory__c]
	, [SurgeryOffered__c]
	, [TimeZone__c]
	, [Virtual__c]
	, [WebPhone__c]
	, [X1Apptperslot__c]
	, [ClientGUID__c]
	, [Goals_Expectations__c]
	, [How_many_times_a_week_do_you_think__c]
	, [How_much_time_a_week_do_you_spend__c]
	, [Other_Reason__c]
	, [What_are_your_main_concerns_today__c]
	, [What_else_would_be_helpful_for_your__c]
	, [What_methods_have_you_used_or_currently__c]
	, [fferpcore__ExemptionCertificate__c]
	, [fferpcore__IsBillingAddressValidated__c]
	, [fferpcore__IsShippingAddressValidated__c]
	, [fferpcore__MaterializedBillingAddressValidated__c]
	, [fferpcore__MaterializedShippingAddressValidated__c]
	, [fferpcore__OutputVatCode__c]
	, [fferpcore__SalesTaxStatus__c]
	, [fferpcore__TaxCode1__c]
	, [fferpcore__TaxCode2__c]
	, [fferpcore__TaxCode3__c]
	, [fferpcore__TaxCountryCode__c]
	, [fferpcore__ValidatedBillingCity__c]
	, [fferpcore__ValidatedBillingCountry__c]
	, [fferpcore__ValidatedBillingPostalCode__c]
	, [fferpcore__ValidatedBillingState__c]
	, [fferpcore__ValidatedBillingStreet__c]
	, [fferpcore__ValidatedShippingCity__c]
	, [fferpcore__ValidatedShippingCountry__c]
	, [fferpcore__ValidatedShippingPostalCode__c]
	, [fferpcore__ValidatedShippingState__c]
	, [fferpcore__ValidatedShippingStreet__c]
	, [fferpcore__VatRegistrationNumber__c]
	, [fferpcore__VatStatus__c]
	, [ffbf__AccountParticulars__c]
	, [ffbf__BankBIC__c]
	, [ffbf__PaymentCode__c]
	, [ffbf__PaymentCountryISO__c]
	, [ffbf__PaymentPriority__c]
	, [ffbf__PaymentRoutingMethod__c]
	, [SCMFFA__Company_Name__c]
	, [ffaci__CurrencyCulture__c]
	, [Service_Territory_Time_Zone__c]
	, [rh2__testCurrency__c]
	, [Initial_Campaign_Source__c]
	, [Landing_Page_Form_Submitted_Date__c]
	, [Age__pc]
	, [Birthdate__pc]
	, [DoNotContact__pc]
	, [DoNotEmail__pc]
	, [DoNotMail__pc]
	, [DoNotText__pc]
	, [Ethnicity__pc]
	, [Gender__pc]
	, [HairLossExperience__pc]
	, [HairLossFamily__pc]
	, [HairLossOrVolume__pc]
	, [HairLossProductOther__pc]
	, [HairLossProductUsed__pc]
	, [HairLossSpot__pc]
	, [HardCopyPreferred__pc]
	, [Language__pc]
	, [MaritalStatus__pc]
	, [Text_Reminder_Opt_In__pc]
	, [rh2__Currency_Test__pc]
	, [rh2__Describe__pc]
	, [rh2__Formula_Test__pc]
	, [rh2__Integer_Test__pc]
	, [Next_Milestone_Event__pc]
	, [Next_Milestone_Event_Date__pc]
	, [Bosley_Center_Number__pc]
	, [Bosley_Client_Id__pc]
	, [Bosley_Legacy_Source_Code__pc]
	, [Bosley_Salesforce_Id__pc]
	, [Bosley_Siebel_Id__pc]
	, [Contact_ID_18_dig__pc]
	, [Landing_Page_Form_Submitted_Date__pc]
	, [Personal_Photo__pc]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[MasterRecordId]
	, [s].[Name]
	, [s].[LastName]
	, [s].[FirstName]
	, [s].[Salutation]
	, [s].[MiddleName]
	, [s].[Suffix]
	, [s].[Type]
	, [s].[RecordTypeId]
	, [s].[ParentId]
	, [s].[BillingStreet]
	, [s].[BillingCity]
	, [s].[BillingState]
	, [s].[BillingPostalCode]
	, [s].[BillingCountry]
	, [s].[BillingStateCode]
	, [s].[BillingCountryCode]
	, [s].[BillingLatitude]
	, [s].[BillingLongitude]
	, [s].[BillingGeocodeAccuracy]
	, [s].[ShippingStreet]
	, [s].[ShippingCity]
	, [s].[ShippingState]
	, [s].[ShippingPostalCode]
	, [s].[ShippingCountry]
	, [s].[ShippingStateCode]
	, [s].[ShippingCountryCode]
	, [s].[ShippingLatitude]
	, [s].[ShippingLongitude]
	, [s].[ShippingGeocodeAccuracy]
	, [s].[Phone]
	, [s].[Fax]
	, [s].[AccountNumber]
	, [s].[Website]
	, [s].[PhotoUrl]
	, [s].[Sic]
	, [s].[Industry]
	, [s].[AnnualRevenue]
	, [s].[NumberOfEmployees]
	, [s].[Ownership]
	, [s].[TickerSymbol]
	, [s].[Description]
	, [s].[Rating]
	, [s].[Site]
	, [s].[CurrencyIsoCode]
	, [s].[OwnerId]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastActivityDate]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[PersonContactId]
	, [s].[IsPersonAccount]
	, [s].[PersonMailingStreet]
	, [s].[PersonMailingCity]
	, [s].[PersonMailingState]
	, [s].[PersonMailingPostalCode]
	, [s].[PersonMailingCountry]
	, [s].[PersonMailingStateCode]
	, [s].[PersonMailingCountryCode]
	, [s].[PersonMailingLatitude]
	, [s].[PersonMailingLongitude]
	, [s].[PersonMailingGeocodeAccuracy]
	, [s].[PersonMobilePhone]
	, [s].[PersonHomePhone]
	, [s].[PersonOtherPhone]
	, [s].[PersonAssistantPhone]
	, [s].[PersonEmail]
	, [s].[PersonTitle]
	, [s].[PersonDepartment]
	, [s].[PersonDoNotCall]
	, [s].[PersonLastCURequestDate]
	, [s].[PersonLastCUUpdateDate]
	, [s].[PersonEmailBouncedReason]
	, [s].[PersonEmailBouncedDate]
	, [s].[Jigsaw]
	, [s].[JigsawCompanyId]
	, [s].[AccountSource]
	, [s].[SicDesc]
	, [s].[OperatingHoursId]
	, [s].[Active__c]
	, [s].[Company__c]
	, [s].[ConectCreationDate__c]
	, [s].[ConectLastUpdate__c]
	, [s].[External_Id__c]
	, [s].[PersonMobilePhone_Number_Normalized__c]
	, [s].[Status__c]
	, [s].[Count_Close_Won_Opportunities__c]
	, [s].[ClientIdentifier__c]
	, [s].[Occupation__c]
	, [s].[AreaManager__c]
	, [s].[Area__c]
	, [s].[AssistantManager__c]
	, [s].[BackLinePhone__c]
	, [s].[BestTressedOffered__c]
	, [s].[CenterAlert__c]
	, [s].[CenterOwner__c]
	, [s].[CenterType__c]
	, [s].[CompanyID__c]
	, [s].[ConfirmationCallerIDEnglish__c]
	, [s].[ConfirmationCallerIDFrench__c]
	, [s].[ConfirmationCallerIDSpanish__c]
	, [s].[CustomerServiceLine__c]
	, [s].[Customer_Status__c]
	, [s].[DNCDateMobilePhone__c]
	, [s].[DNCDatePhone__c]
	, [s].[DNCValidationMobilePhone__c]
	, [s].[DNCValidationPhone__c]
	, [s].[DisplayName__c]
	, [s].[ImageConsultant__c]
	, [s].[MDPOffered__c]
	, [s].[MDPPerformed__c]
	, [s].[ManagerName__c]
	, [s].[MgrCellPhone__c]
	, [s].[OfferPRP__c]
	, [s].[OtherCallerIDEnglish__c]
	, [s].[OtherCallerIDFrench__c]
	, [s].[OtherCallerIDSpanish__c]
	, [s].[OutboundDialingAllowed__c]
	, [s].[ProfileCode__c]
	, [s].[Region__c]
	, [s].[Service_Territory__c]
	, [s].[SurgeryOffered__c]
	, [s].[TimeZone__c]
	, [s].[Virtual__c]
	, [s].[WebPhone__c]
	, [s].[X1Apptperslot__c]
	, [s].[ClientGUID__c]
	, [s].[Goals_Expectations__c]
	, [s].[How_many_times_a_week_do_you_think__c]
	, [s].[How_much_time_a_week_do_you_spend__c]
	, [s].[Other_Reason__c]
	, [s].[What_are_your_main_concerns_today__c]
	, [s].[What_else_would_be_helpful_for_your__c]
	, [s].[What_methods_have_you_used_or_currently__c]
	, [s].[fferpcore__ExemptionCertificate__c]
	, [s].[fferpcore__IsBillingAddressValidated__c]
	, [s].[fferpcore__IsShippingAddressValidated__c]
	, [s].[fferpcore__MaterializedBillingAddressValidated__c]
	, [s].[fferpcore__MaterializedShippingAddressValidated__c]
	, [s].[fferpcore__OutputVatCode__c]
	, [s].[fferpcore__SalesTaxStatus__c]
	, [s].[fferpcore__TaxCode1__c]
	, [s].[fferpcore__TaxCode2__c]
	, [s].[fferpcore__TaxCode3__c]
	, [s].[fferpcore__TaxCountryCode__c]
	, [s].[fferpcore__ValidatedBillingCity__c]
	, [s].[fferpcore__ValidatedBillingCountry__c]
	, [s].[fferpcore__ValidatedBillingPostalCode__c]
	, [s].[fferpcore__ValidatedBillingState__c]
	, [s].[fferpcore__ValidatedBillingStreet__c]
	, [s].[fferpcore__ValidatedShippingCity__c]
	, [s].[fferpcore__ValidatedShippingCountry__c]
	, [s].[fferpcore__ValidatedShippingPostalCode__c]
	, [s].[fferpcore__ValidatedShippingState__c]
	, [s].[fferpcore__ValidatedShippingStreet__c]
	, [s].[fferpcore__VatRegistrationNumber__c]
	, [s].[fferpcore__VatStatus__c]
	, [s].[ffbf__AccountParticulars__c]
	, [s].[ffbf__BankBIC__c]
	, [s].[ffbf__PaymentCode__c]
	, [s].[ffbf__PaymentCountryISO__c]
	, [s].[ffbf__PaymentPriority__c]
	, [s].[ffbf__PaymentRoutingMethod__c]
	, [s].[SCMFFA__Company_Name__c]
	, [s].[ffaci__CurrencyCulture__c]
	, [s].[Service_Territory_Time_Zone__c]
	, [s].[rh2__testCurrency__c]
	, [s].[Initial_Campaign_Source__c]
	, [s].[Landing_Page_Form_Submitted_Date__c]
	, [s].[Age__pc]
	, [s].[Birthdate__pc]
	, [s].[DoNotContact__pc]
	, [s].[DoNotEmail__pc]
	, [s].[DoNotMail__pc]
	, [s].[DoNotText__pc]
	, [s].[Ethnicity__pc]
	, [s].[Gender__pc]
	, [s].[HairLossExperience__pc]
	, [s].[HairLossFamily__pc]
	, [s].[HairLossOrVolume__pc]
	, [s].[HairLossProductOther__pc]
	, [s].[HairLossProductUsed__pc]
	, [s].[HairLossSpot__pc]
	, [s].[HardCopyPreferred__pc]
	, [s].[Language__pc]
	, [s].[MaritalStatus__pc]
	, [s].[Text_Reminder_Opt_In__pc]
	, [s].[rh2__Currency_Test__pc]
	, [s].[rh2__Describe__pc]
	, [s].[rh2__Formula_Test__pc]
	, [s].[rh2__Integer_Test__pc]
	, [s].[Next_Milestone_Event__pc]
	, [s].[Next_Milestone_Event_Date__pc]
	, [s].[Bosley_Center_Number__pc]
	, [s].[Bosley_Client_Id__pc]
	, [s].[Bosley_Legacy_Source_Code__pc]
	, [s].[Bosley_Salesforce_Id__pc]
	, [s].[Bosley_Siebel_Id__pc]
	, [s].[Contact_ID_18_dig__pc]
	, [s].[Landing_Page_Form_Submitted_Date__pc]
	, [s].[Personal_Photo__pc]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[Account] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_ZipCode__c_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_ZipCode__c_Merge]
GO
CREATE PROCEDURE [SF].[sp_ZipCode__c_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[ZipCode__c])
RETURN ;

BEGIN TRY
;MERGE [SF].[ZipCode__c] AS [t]
USING [SFStaging].[ZipCode__c] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[OwnerId] = [t].[OwnerId]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[Name] = [t].[Name]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastActivityDate] = [t].[LastActivityDate]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[External_Id__c] = [t].[External_Id__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [OwnerId]
	, [IsDeleted]
	, [Name]
	, [CurrencyIsoCode]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastActivityDate]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [External_Id__c]
	)
	VALUES(
	[s].[Id]
	, [s].[OwnerId]
	, [s].[IsDeleted]
	, [s].[Name]
	, [s].[CurrencyIsoCode]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastActivityDate]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[External_Id__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[ZipCode__c] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_Contact_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_Contact_Merge]
GO
CREATE PROCEDURE [SF].[sp_Contact_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[Contact])
RETURN ;

BEGIN TRY
;MERGE [SF].[Contact] AS [t]
USING [SFStaging].[Contact] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[IsDeleted] = [t].[IsDeleted]
	, [t].[MasterRecordId] = [t].[MasterRecordId]
	, [t].[AccountId] = [t].[AccountId]
	, [t].[IsPersonAccount] = [t].[IsPersonAccount]
	, [t].[LastName] = [t].[LastName]
	, [t].[FirstName] = [t].[FirstName]
	, [t].[Salutation] = [t].[Salutation]
	, [t].[MiddleName] = [t].[MiddleName]
	, [t].[Suffix] = [t].[Suffix]
	, [t].[Name] = [t].[Name]
	, [t].[MailingStreet] = [t].[MailingStreet]
	, [t].[MailingCity] = [t].[MailingCity]
	, [t].[MailingState] = [t].[MailingState]
	, [t].[MailingPostalCode] = [t].[MailingPostalCode]
	, [t].[MailingCountry] = [t].[MailingCountry]
	, [t].[MailingStateCode] = [t].[MailingStateCode]
	, [t].[MailingCountryCode] = [t].[MailingCountryCode]
	, [t].[MailingLatitude] = [t].[MailingLatitude]
	, [t].[MailingLongitude] = [t].[MailingLongitude]
	, [t].[MailingGeocodeAccuracy] = [t].[MailingGeocodeAccuracy]
	, [t].[Phone] = [t].[Phone]
	, [t].[Fax] = [t].[Fax]
	, [t].[MobilePhone] = [t].[MobilePhone]
	, [t].[HomePhone] = [t].[HomePhone]
	, [t].[OtherPhone] = [t].[OtherPhone]
	, [t].[AssistantPhone] = [t].[AssistantPhone]
	, [t].[ReportsToId] = [t].[ReportsToId]
	, [t].[Email] = [t].[Email]
	, [t].[Title] = [t].[Title]
	, [t].[Department] = [t].[Department]
	, [t].[CurrencyIsoCode] = [t].[CurrencyIsoCode]
	, [t].[OwnerId] = [t].[OwnerId]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[LastActivityDate] = [t].[LastActivityDate]
	, [t].[LastCURequestDate] = [t].[LastCURequestDate]
	, [t].[LastCUUpdateDate] = [t].[LastCUUpdateDate]
	, [t].[LastViewedDate] = [t].[LastViewedDate]
	, [t].[LastReferencedDate] = [t].[LastReferencedDate]
	, [t].[EmailBouncedReason] = [t].[EmailBouncedReason]
	, [t].[EmailBouncedDate] = [t].[EmailBouncedDate]
	, [t].[IsEmailBounced] = [t].[IsEmailBounced]
	, [t].[PhotoUrl] = [t].[PhotoUrl]
	, [t].[Jigsaw] = [t].[Jigsaw]
	, [t].[JigsawContactId] = [t].[JigsawContactId]
	, [t].[Age__c] = [t].[Age__c]
	, [t].[Birthdate__c] = [t].[Birthdate__c]
	, [t].[DoNotContact__c] = [t].[DoNotContact__c]
	, [t].[DoNotEmail__c] = [t].[DoNotEmail__c]
	, [t].[DoNotMail__c] = [t].[DoNotMail__c]
	, [t].[DoNotText__c] = [t].[DoNotText__c]
	, [t].[Ethnicity__c] = [t].[Ethnicity__c]
	, [t].[Gender__c] = [t].[Gender__c]
	, [t].[HairLossExperience__c] = [t].[HairLossExperience__c]
	, [t].[HairLossFamily__c] = [t].[HairLossFamily__c]
	, [t].[HairLossOrVolume__c] = [t].[HairLossOrVolume__c]
	, [t].[HairLossProductOther__c] = [t].[HairLossProductOther__c]
	, [t].[HairLossProductUsed__c] = [t].[HairLossProductUsed__c]
	, [t].[HairLossSpot__c] = [t].[HairLossSpot__c]
	, [t].[HardCopyPreferred__c] = [t].[HardCopyPreferred__c]
	, [t].[Language__c] = [t].[Language__c]
	, [t].[MaritalStatus__c] = [t].[MaritalStatus__c]
	, [t].[Text_Reminder_Opt_In__c] = [t].[Text_Reminder_Opt_In__c]
	, [t].[rh2__Currency_Test__c] = [t].[rh2__Currency_Test__c]
	, [t].[rh2__Describe__c] = [t].[rh2__Describe__c]
	, [t].[rh2__Formula_Test__c] = [t].[rh2__Formula_Test__c]
	, [t].[rh2__Integer_Test__c] = [t].[rh2__Integer_Test__c]
	, [t].[Next_Milestone_Event__c] = [t].[Next_Milestone_Event__c]
	, [t].[Next_Milestone_Event_Date__c] = [t].[Next_Milestone_Event_Date__c]
	, [t].[Bosley_Center_Number__c] = [t].[Bosley_Center_Number__c]
	, [t].[Bosley_Client_Id__c] = [t].[Bosley_Client_Id__c]
	, [t].[Bosley_Legacy_Source_Code__c] = [t].[Bosley_Legacy_Source_Code__c]
	, [t].[Bosley_Salesforce_Id__c] = [t].[Bosley_Salesforce_Id__c]
	, [t].[Bosley_Siebel_Id__c] = [t].[Bosley_Siebel_Id__c]
	, [t].[Contact_ID_18_dig__c] = [t].[Contact_ID_18_dig__c]
	, [t].[Landing_Page_Form_Submitted_Date__c] = [t].[Landing_Page_Form_Submitted_Date__c]
	, [t].[Personal_Photo__c] = [t].[Personal_Photo__c]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [IsDeleted]
	, [MasterRecordId]
	, [AccountId]
	, [IsPersonAccount]
	, [LastName]
	, [FirstName]
	, [Salutation]
	, [MiddleName]
	, [Suffix]
	, [Name]
	, [MailingStreet]
	, [MailingCity]
	, [MailingState]
	, [MailingPostalCode]
	, [MailingCountry]
	, [MailingStateCode]
	, [MailingCountryCode]
	, [MailingLatitude]
	, [MailingLongitude]
	, [MailingGeocodeAccuracy]
	, [Phone]
	, [Fax]
	, [MobilePhone]
	, [HomePhone]
	, [OtherPhone]
	, [AssistantPhone]
	, [ReportsToId]
	, [Email]
	, [Title]
	, [Department]
	, [CurrencyIsoCode]
	, [OwnerId]
	, [CreatedDate]
	, [CreatedById]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [LastActivityDate]
	, [LastCURequestDate]
	, [LastCUUpdateDate]
	, [LastViewedDate]
	, [LastReferencedDate]
	, [EmailBouncedReason]
	, [EmailBouncedDate]
	, [IsEmailBounced]
	, [PhotoUrl]
	, [Jigsaw]
	, [JigsawContactId]
	, [Age__c]
	, [Birthdate__c]
	, [DoNotContact__c]
	, [DoNotEmail__c]
	, [DoNotMail__c]
	, [DoNotText__c]
	, [Ethnicity__c]
	, [Gender__c]
	, [HairLossExperience__c]
	, [HairLossFamily__c]
	, [HairLossOrVolume__c]
	, [HairLossProductOther__c]
	, [HairLossProductUsed__c]
	, [HairLossSpot__c]
	, [HardCopyPreferred__c]
	, [Language__c]
	, [MaritalStatus__c]
	, [Text_Reminder_Opt_In__c]
	, [rh2__Currency_Test__c]
	, [rh2__Describe__c]
	, [rh2__Formula_Test__c]
	, [rh2__Integer_Test__c]
	, [Next_Milestone_Event__c]
	, [Next_Milestone_Event_Date__c]
	, [Bosley_Center_Number__c]
	, [Bosley_Client_Id__c]
	, [Bosley_Legacy_Source_Code__c]
	, [Bosley_Salesforce_Id__c]
	, [Bosley_Siebel_Id__c]
	, [Contact_ID_18_dig__c]
	, [Landing_Page_Form_Submitted_Date__c]
	, [Personal_Photo__c]
	)
	VALUES(
	[s].[Id]
	, [s].[IsDeleted]
	, [s].[MasterRecordId]
	, [s].[AccountId]
	, [s].[IsPersonAccount]
	, [s].[LastName]
	, [s].[FirstName]
	, [s].[Salutation]
	, [s].[MiddleName]
	, [s].[Suffix]
	, [s].[Name]
	, [s].[MailingStreet]
	, [s].[MailingCity]
	, [s].[MailingState]
	, [s].[MailingPostalCode]
	, [s].[MailingCountry]
	, [s].[MailingStateCode]
	, [s].[MailingCountryCode]
	, [s].[MailingLatitude]
	, [s].[MailingLongitude]
	, [s].[MailingGeocodeAccuracy]
	, [s].[Phone]
	, [s].[Fax]
	, [s].[MobilePhone]
	, [s].[HomePhone]
	, [s].[OtherPhone]
	, [s].[AssistantPhone]
	, [s].[ReportsToId]
	, [s].[Email]
	, [s].[Title]
	, [s].[Department]
	, [s].[CurrencyIsoCode]
	, [s].[OwnerId]
	, [s].[CreatedDate]
	, [s].[CreatedById]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[LastActivityDate]
	, [s].[LastCURequestDate]
	, [s].[LastCUUpdateDate]
	, [s].[LastViewedDate]
	, [s].[LastReferencedDate]
	, [s].[EmailBouncedReason]
	, [s].[EmailBouncedDate]
	, [s].[IsEmailBounced]
	, [s].[PhotoUrl]
	, [s].[Jigsaw]
	, [s].[JigsawContactId]
	, [s].[Age__c]
	, [s].[Birthdate__c]
	, [s].[DoNotContact__c]
	, [s].[DoNotEmail__c]
	, [s].[DoNotMail__c]
	, [s].[DoNotText__c]
	, [s].[Ethnicity__c]
	, [s].[Gender__c]
	, [s].[HairLossExperience__c]
	, [s].[HairLossFamily__c]
	, [s].[HairLossOrVolume__c]
	, [s].[HairLossProductOther__c]
	, [s].[HairLossProductUsed__c]
	, [s].[HairLossSpot__c]
	, [s].[HardCopyPreferred__c]
	, [s].[Language__c]
	, [s].[MaritalStatus__c]
	, [s].[Text_Reminder_Opt_In__c]
	, [s].[rh2__Currency_Test__c]
	, [s].[rh2__Describe__c]
	, [s].[rh2__Formula_Test__c]
	, [s].[rh2__Integer_Test__c]
	, [s].[Next_Milestone_Event__c]
	, [s].[Next_Milestone_Event_Date__c]
	, [s].[Bosley_Center_Number__c]
	, [s].[Bosley_Client_Id__c]
	, [s].[Bosley_Legacy_Source_Code__c]
	, [s].[Bosley_Salesforce_Id__c]
	, [s].[Bosley_Siebel_Id__c]
	, [s].[Contact_ID_18_dig__c]
	, [s].[Landing_Page_Form_Submitted_Date__c]
	, [s].[Personal_Photo__c]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[Contact] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
IF OBJECT_ID('[SF].[sp_EmailMessage_Merge]') IS NOT NULL DROP PROCEDURE [SF].[sp_EmailMessage_Merge]
GO
CREATE PROCEDURE [SF].[sp_EmailMessage_Merge]
	@ROWCOUNT BIGINT = NULL OUTPUT
AS
SET NOCOUNT ON

SET @ROWCOUNT = 0

IF NOT EXISTS(SELECT 1 FROM [SFStaging].[EmailMessage])
RETURN ;

BEGIN TRY
;MERGE [SF].[EmailMessage] AS [t]
USING [SFStaging].[EmailMessage] AS [s]
	ON [t].[Id] = [s].[Id]
WHEN MATCHED THEN
	UPDATE SET
	[t].[ParentId] = [t].[ParentId]
	, [t].[ActivityId] = [t].[ActivityId]
	, [t].[CreatedById] = [t].[CreatedById]
	, [t].[CreatedDate] = [t].[CreatedDate]
	, [t].[LastModifiedDate] = [t].[LastModifiedDate]
	, [t].[LastModifiedById] = [t].[LastModifiedById]
	, [t].[SystemModstamp] = [t].[SystemModstamp]
	, [t].[TextBody] = [t].[TextBody]
	, [t].[HtmlBody] = [t].[HtmlBody]
	, [t].[Headers] = [t].[Headers]
	, [t].[Subject] = [t].[Subject]
	, [t].[FromName] = [t].[FromName]
	, [t].[FromAddress] = [t].[FromAddress]
	, [t].[ValidatedFromAddress] = [t].[ValidatedFromAddress]
	, [t].[ToAddress] = [t].[ToAddress]
	, [t].[CcAddress] = [t].[CcAddress]
	, [t].[BccAddress] = [t].[BccAddress]
	, [t].[Incoming] = [t].[Incoming]
	, [t].[HasAttachment] = [t].[HasAttachment]
	, [t].[Status] = [t].[Status]
	, [t].[MessageDate] = [t].[MessageDate]
	, [t].[IsDeleted] = [t].[IsDeleted]
	, [t].[ReplyToEmailMessageId] = [t].[ReplyToEmailMessageId]
	, [t].[IsExternallyVisible] = [t].[IsExternallyVisible]
	, [t].[MessageIdentifier] = [t].[MessageIdentifier]
	, [t].[ThreadIdentifier] = [t].[ThreadIdentifier]
	, [t].[IsClientManaged] = [t].[IsClientManaged]
	, [t].[RelatedToId] = [t].[RelatedToId]
	, [t].[IsTracked] = [t].[IsTracked]
	, [t].[IsOpened] = [t].[IsOpened]
	, [t].[FirstOpenedDate] = [t].[FirstOpenedDate]
	, [t].[LastOpenedDate] = [t].[LastOpenedDate]
	, [t].[IsBounced] = [t].[IsBounced]
	, [t].[EmailTemplateId] = [t].[EmailTemplateId]
	, [t].[ContentDocumentIds] = [t].[ContentDocumentIds]
	, [t].[BccIds] = [t].[BccIds]
	, [t].[CcIds] = [t].[CcIds]
	, [t].[ToIds] = [t].[ToIds]
WHEN NOT MATCHED THEN
	INSERT(
	[Id]
	, [ParentId]
	, [ActivityId]
	, [CreatedById]
	, [CreatedDate]
	, [LastModifiedDate]
	, [LastModifiedById]
	, [SystemModstamp]
	, [TextBody]
	, [HtmlBody]
	, [Headers]
	, [Subject]
	, [FromName]
	, [FromAddress]
	, [ValidatedFromAddress]
	, [ToAddress]
	, [CcAddress]
	, [BccAddress]
	, [Incoming]
	, [HasAttachment]
	, [Status]
	, [MessageDate]
	, [IsDeleted]
	, [ReplyToEmailMessageId]
	, [IsExternallyVisible]
	, [MessageIdentifier]
	, [ThreadIdentifier]
	, [IsClientManaged]
	, [RelatedToId]
	, [IsTracked]
	, [IsOpened]
	, [FirstOpenedDate]
	, [LastOpenedDate]
	, [IsBounced]
	, [EmailTemplateId]
	, [ContentDocumentIds]
	, [BccIds]
	, [CcIds]
	, [ToIds]
	)
	VALUES(
	[s].[Id]
	, [s].[ParentId]
	, [s].[ActivityId]
	, [s].[CreatedById]
	, [s].[CreatedDate]
	, [s].[LastModifiedDate]
	, [s].[LastModifiedById]
	, [s].[SystemModstamp]
	, [s].[TextBody]
	, [s].[HtmlBody]
	, [s].[Headers]
	, [s].[Subject]
	, [s].[FromName]
	, [s].[FromAddress]
	, [s].[ValidatedFromAddress]
	, [s].[ToAddress]
	, [s].[CcAddress]
	, [s].[BccAddress]
	, [s].[Incoming]
	, [s].[HasAttachment]
	, [s].[Status]
	, [s].[MessageDate]
	, [s].[IsDeleted]
	, [s].[ReplyToEmailMessageId]
	, [s].[IsExternallyVisible]
	, [s].[MessageIdentifier]
	, [s].[ThreadIdentifier]
	, [s].[IsClientManaged]
	, [s].[RelatedToId]
	, [s].[IsTracked]
	, [s].[IsOpened]
	, [s].[FirstOpenedDate]
	, [s].[LastOpenedDate]
	, [s].[IsBounced]
	, [s].[EmailTemplateId]
	, [s].[ContentDocumentIds]
	, [s].[BccIds]
	, [s].[CcIds]
	, [s].[ToIds]
	)
OPTION(RECOMPILE) ;

SET @ROWCOUNT = @@ROWCOUNT ;

TRUNCATE TABLE [SFStaging].[EmailMessage] ;

END TRY
BEGIN CATCH
	THROW ;
END CATCH
GO
